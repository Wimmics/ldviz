'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/*!
 Stencil Mock Doc v2.5.2 | MIT Licensed | https://stenciljs.com
 */
const CONTENT_REF_ID = 'r';
const ORG_LOCATION_ID = 'o';
const SLOT_NODE_ID = 's';
const TEXT_NODE_ID = 't';
const XLINK_NS = 'http://www.w3.org/1999/xlink';

const attrHandler = {
  get(obj, prop) {
    if (prop in obj) {
      return obj[prop];
    }
    if (typeof prop !== 'symbol' && !isNaN(prop)) {
      return obj.__items[prop];
    }
    return undefined;
  },
};
const createAttributeProxy = (caseInsensitive) => new Proxy(new MockAttributeMap(caseInsensitive), attrHandler);
class MockAttributeMap {
  constructor(caseInsensitive = false) {
    this.caseInsensitive = caseInsensitive;
    this.__items = [];
  }
  get length() {
    return this.__items.length;
  }
  item(index) {
    return this.__items[index] || null;
  }
  setNamedItem(attr) {
    attr.namespaceURI = null;
    this.setNamedItemNS(attr);
  }
  setNamedItemNS(attr) {
    if (attr != null && attr.value != null) {
      attr.value = String(attr.value);
    }
    const existingAttr = this.__items.find(a => a.name === attr.name && a.namespaceURI === attr.namespaceURI);
    if (existingAttr != null) {
      existingAttr.value = attr.value;
    }
    else {
      this.__items.push(attr);
    }
  }
  getNamedItem(attrName) {
    if (this.caseInsensitive) {
      attrName = attrName.toLowerCase();
    }
    return this.getNamedItemNS(null, attrName);
  }
  getNamedItemNS(namespaceURI, attrName) {
    namespaceURI = getNamespaceURI(namespaceURI);
    return (this.__items.find(attr => attr.name === attrName && getNamespaceURI(attr.namespaceURI) === namespaceURI) || null);
  }
  removeNamedItem(attr) {
    this.removeNamedItemNS(attr);
  }
  removeNamedItemNS(attr) {
    for (let i = 0, ii = this.__items.length; i < ii; i++) {
      if (this.__items[i].name === attr.name && this.__items[i].namespaceURI === attr.namespaceURI) {
        this.__items.splice(i, 1);
        break;
      }
    }
  }
  [Symbol.iterator]() {
    let i = 0;
    return {
      next: () => ({
        done: i === this.length,
        value: this.item(i++),
      }),
    };
  }
  get [Symbol.toStringTag]() {
    return 'MockAttributeMap';
  }
}
function getNamespaceURI(namespaceURI) {
  return namespaceURI === XLINK_NS ? null : namespaceURI;
}
function cloneAttributes(srcAttrs, sortByName = false) {
  const dstAttrs = new MockAttributeMap(srcAttrs.caseInsensitive);
  if (srcAttrs != null) {
    const attrLen = srcAttrs.length;
    if (sortByName && attrLen > 1) {
      const sortedAttrs = [];
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        sortedAttrs.push(dstAttr);
      }
      sortedAttrs.sort(sortAttributes).forEach(attr => {
        dstAttrs.setNamedItemNS(attr);
      });
    }
    else {
      for (let i = 0; i < attrLen; i++) {
        const srcAttr = srcAttrs.item(i);
        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);
        dstAttrs.setNamedItemNS(dstAttr);
      }
    }
  }
  return dstAttrs;
}
function sortAttributes(a, b) {
  if (a.name < b.name)
    return -1;
  if (a.name > b.name)
    return 1;
  return 0;
}
class MockAttr {
  constructor(attrName, attrValue, namespaceURI = null) {
    this._name = attrName;
    this._value = String(attrValue);
    this._namespaceURI = namespaceURI;
  }
  get name() {
    return this._name;
  }
  set name(value) {
    this._name = value;
  }
  get value() {
    return this._value;
  }
  set value(value) {
    this._value = String(value);
  }
  get nodeName() {
    return this._name;
  }
  set nodeName(value) {
    this._name = value;
  }
  get nodeValue() {
    return this._value;
  }
  set nodeValue(value) {
    this._value = String(value);
  }
  get namespaceURI() {
    return this._namespaceURI;
  }
  set namespaceURI(namespaceURI) {
    this._namespaceURI = namespaceURI;
  }
}

class MockCustomElementRegistry {
  constructor(win) {
    this.win = win;
  }
  define(tagName, cstr, options) {
    if (tagName.toLowerCase() !== tagName) {
      throw new Error(`Failed to execute 'define' on 'CustomElementRegistry': "${tagName}" is not a valid custom element name`);
    }
    if (this.__registry == null) {
      this.__registry = new Map();
    }
    this.__registry.set(tagName, { cstr, options });
    if (this.__whenDefined != null) {
      const whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns != null) {
        whenDefinedResolveFns.forEach(whenDefinedResolveFn => {
          whenDefinedResolveFn();
        });
        whenDefinedResolveFns.length = 0;
        this.__whenDefined.delete(tagName);
      }
    }
    const doc = this.win.document;
    if (doc != null) {
      const hosts = doc.querySelectorAll(tagName);
      hosts.forEach(host => {
        if (upgradedElements.has(host) === false) {
          tempDisableCallbacks.add(doc);
          const upgradedCmp = createCustomElement(this, doc, tagName);
          for (let i = 0; i < host.childNodes.length; i++) {
            const childNode = host.childNodes[i];
            childNode.remove();
            upgradedCmp.appendChild(childNode);
          }
          tempDisableCallbacks.delete(doc);
          if (proxyElements.has(host)) {
            proxyElements.set(host, upgradedCmp);
          }
        }
        fireConnectedCallback(host);
      });
    }
  }
  get(tagName) {
    if (this.__registry != null) {
      const def = this.__registry.get(tagName.toLowerCase());
      if (def != null) {
        return def.cstr;
      }
    }
    return undefined;
  }
  upgrade(_rootNode) {
    //
  }
  clear() {
    if (this.__registry != null) {
      this.__registry.clear();
    }
    if (this.__whenDefined != null) {
      this.__whenDefined.clear();
    }
  }
  whenDefined(tagName) {
    tagName = tagName.toLowerCase();
    if (this.__registry != null && this.__registry.has(tagName) === true) {
      return Promise.resolve();
    }
    return new Promise(resolve => {
      if (this.__whenDefined == null) {
        this.__whenDefined = new Map();
      }
      let whenDefinedResolveFns = this.__whenDefined.get(tagName);
      if (whenDefinedResolveFns == null) {
        whenDefinedResolveFns = [];
        this.__whenDefined.set(tagName, whenDefinedResolveFns);
      }
      whenDefinedResolveFns.push(resolve);
    });
  }
}
function createCustomElement(customElements, ownerDocument, tagName) {
  const Cstr = customElements.get(tagName);
  if (Cstr != null) {
    const cmp = new Cstr(ownerDocument);
    cmp.nodeName = tagName.toUpperCase();
    upgradedElements.add(cmp);
    return cmp;
  }
  const host = new Proxy({}, {
    get(obj, prop) {
      const elm = proxyElements.get(host);
      if (elm != null) {
        return elm[prop];
      }
      return obj[prop];
    },
    set(obj, prop, val) {
      const elm = proxyElements.get(host);
      if (elm != null) {
        elm[prop] = val;
      }
      else {
        obj[prop] = val;
      }
      return true;
    },
    has(obj, prop) {
      const elm = proxyElements.get(host);
      if (prop in elm) {
        return true;
      }
      if (prop in obj) {
        return true;
      }
      return false;
    },
  });
  const elm = new MockHTMLElement(ownerDocument, tagName);
  proxyElements.set(host, elm);
  return host;
}
const proxyElements = new WeakMap();
const upgradedElements = new WeakSet();
function connectNode(ownerDocument, node) {
  node.ownerDocument = ownerDocument;
  if (node.nodeType === 1 /* ELEMENT_NODE */) {
    if (ownerDocument != null && node.nodeName.includes('-')) {
      const win = ownerDocument.defaultView;
      if (win != null && typeof node.connectedCallback === 'function' && node.isConnected) {
        fireConnectedCallback(node);
      }
      const shadowRoot = node.shadowRoot;
      if (shadowRoot != null) {
        shadowRoot.childNodes.forEach(childNode => {
          connectNode(ownerDocument, childNode);
        });
      }
    }
    node.childNodes.forEach(childNode => {
      connectNode(ownerDocument, childNode);
    });
  }
  else {
    node.childNodes.forEach(childNode => {
      childNode.ownerDocument = ownerDocument;
    });
  }
}
function fireConnectedCallback(node) {
  if (typeof node.connectedCallback === 'function') {
    if (tempDisableCallbacks.has(node.ownerDocument) === false) {
      try {
        node.connectedCallback();
      }
      catch (e) {
        console.error(e);
      }
    }
  }
}
function disconnectNode(node) {
  if (node.nodeType === 1 /* ELEMENT_NODE */) {
    if (node.nodeName.includes('-') === true && typeof node.disconnectedCallback === 'function') {
      if (tempDisableCallbacks.has(node.ownerDocument) === false) {
        try {
          node.disconnectedCallback();
        }
        catch (e) {
          console.error(e);
        }
      }
    }
    node.childNodes.forEach(disconnectNode);
  }
}
function attributeChanged(node, attrName, oldValue, newValue) {
  attrName = attrName.toLowerCase();
  const observedAttributes = node.constructor.observedAttributes;
  if (Array.isArray(observedAttributes) === true && observedAttributes.some(obs => obs.toLowerCase() === attrName) === true) {
    try {
      node.attributeChangedCallback(attrName, oldValue, newValue);
    }
    catch (e) {
      console.error(e);
    }
  }
}
function checkAttributeChanged(node) {
  return node.nodeName.includes('-') === true && typeof node.attributeChangedCallback === 'function';
}
const tempDisableCallbacks = new Set();

function dataset(elm) {
  const ds = {};
  const attributes = elm.attributes;
  const attrLen = attributes.length;
  for (let i = 0; i < attrLen; i++) {
    const attr = attributes.item(i);
    const nodeName = attr.nodeName;
    if (nodeName.startsWith('data-')) {
      ds[dashToPascalCase(nodeName)] = attr.nodeValue;
    }
  }
  return new Proxy(ds, {
    get(_obj, camelCaseProp) {
      return ds[camelCaseProp];
    },
    set(_obj, camelCaseProp, value) {
      const dataAttr = toDataAttribute(camelCaseProp);
      elm.setAttribute(dataAttr, value);
      return true;
    },
  });
}
function toDataAttribute(str) {
  return ('data-' +
    String(str)
      .replace(/([A-Z0-9])/g, g => ' ' + g[0])
      .trim()
      .replace(/ /g, '-')
      .toLowerCase());
}
function dashToPascalCase(str) {
  str = String(str).substr(5);
  return str
    .split('-')
    .map((segment, index) => {
    if (index === 0) {
      return segment.charAt(0).toLowerCase() + segment.slice(1);
    }
    return segment.charAt(0).toUpperCase() + segment.slice(1);
  })
    .join('');
}

// Sizzle 2.3.6
const Sizzle = (function() {
const window = {
  document: {
  createElement() {
    return {};
  },
  nodeType: 9,
  documentElement: {
    nodeType: 1,
    nodeName: 'HTML'
  }
  }
};
const module = { exports: {} };

/*! Sizzle v2.3.6 | (c) JS Foundation and other contributors | js.foundation */
!function(e){var t,n,r,i,o,u,l,a,c,s,d,f,p,h,g,m,y,v,w,b="sizzle"+1*new Date,N=e.document,C=0,x=0,E=ae(),A=ae(),S=ae(),D=ae(),T=function(e,t){return e===t&&(d=!0),0},L={}.hasOwnProperty,q=[],I=q.pop,B=q.push,R=q.push,$=q.slice,k=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return -1},H="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",P="(?:\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",z="\\["+M+"*("+P+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+P+"))|)"+M+"*\\]",F=":("+P+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+z+")*)|.*)\\)|)",O=new RegExp(M+"+","g"),j=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),G=new RegExp("^"+M+"*,"+M+"*"),U=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),V=new RegExp(M+"|>"),X=new RegExp(F),J=new RegExp("^"+P+"$"),K={ID:new RegExp("^#("+P+")"),CLASS:new RegExp("^\\.("+P+")"),TAG:new RegExp("^("+P+"|[*])"),ATTR:new RegExp("^"+z),PSEUDO:new RegExp("^"+F),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+H+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,W=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\([^\\r\\n\\f])","g"),ne=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ie=function(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){f();},ue=ve(function(e){return !0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{R.apply(q=$.call(N.childNodes),N.childNodes),q[N.childNodes.length].nodeType;}catch(e){R={apply:q.length?function(e,t){B.apply(e,$.call(t));}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1;}};}function le(e,t,r,i){var o,l,c,s,d,h,y,v=t&&t.ownerDocument,N=t?t.nodeType:9;if(r=r||[],"string"!=typeof e||!e||1!==N&&9!==N&&11!==N)return r;if(!i&&(f(t),t=t||p,g)){if(11!==N&&(d=_.exec(e)))if(o=d[1]){if(9===N){if(!(c=t.getElementById(o)))return r;if(c.id===o)return r.push(c),r}else if(v&&(c=v.getElementById(o))&&w(t,c)&&c.id===o)return r.push(c),r}else {if(d[2])return R.apply(r,t.getElementsByTagName(e)),r;if((o=d[3])&&n.getElementsByClassName&&t.getElementsByClassName)return R.apply(r,t.getElementsByClassName(o)),r}if(n.qsa&&!D[e+" "]&&(!m||!m.test(e))&&(1!==N||"object"!==t.nodeName.toLowerCase())){if(y=e,v=t,1===N&&(V.test(e)||U.test(e))){(v=ee.test(e)&&ge(t.parentNode)||t)===t&&n.scope||((s=t.getAttribute("id"))?s=s.replace(re,ie):t.setAttribute("id",s=b)),l=(h=u(e)).length;while(l--)h[l]=(s?"#"+s:":scope")+" "+ye(h[l]);y=h.join(",");}try{return R.apply(r,v.querySelectorAll(y)),r}catch(t){D(e,!0);}finally{s===b&&t.removeAttribute("id");}}}return a(e.replace(j,"$1"),t,r,i)}function ae(){var e=[];function t(n,i){return e.push(n+" ")>r.cacheLength&&delete t[e.shift()],t[n+" "]=i}return t}function ce(e){return e[b]=!0,e}function se(e){var t=p.createElement("fieldset");try{return !!e(t)}catch(e){return !1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null;}}function de(e,t){var n=e.split("|"),i=n.length;while(i--)r.attrHandle[n[i]]=t;}function fe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return -1;return e?1:-1}function pe(e){return function(t){return "form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&ue(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function he(e){return ce(function(t){return t=+t,ce(function(n,r){var i,o=e([],n.length,t),u=o.length;while(u--)n[i=o[u]]&&(n[i]=!(r[i]=n[i]));})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}n=le.support={},o=le.isXML=function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return !Q.test(t||n&&n.nodeName||"HTML")},f=le.setDocument=function(e){var t,i,u=e?e.ownerDocument||e:N;return u!=p&&9===u.nodeType&&u.documentElement?(p=u,h=p.documentElement,g=!o(p),N!=p&&(i=p.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",oe,!1):i.attachEvent&&i.attachEvent("onunload",oe)),n.scope=se(function(e){return h.appendChild(e).appendChild(p.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),n.attributes=se(function(e){return e.className="i",!e.getAttribute("className")}),n.getElementsByTagName=se(function(e){return e.appendChild(p.createComment("")),!e.getElementsByTagName("*").length}),n.getElementsByClassName=Z.test(p.getElementsByClassName),n.getById=se(function(e){return h.appendChild(e).id=b,!p.getElementsByName||!p.getElementsByName(b).length}),n.getById?(r.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},r.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n=t.getElementById(e);return n?[n]:[]}}):(r.filter.ID=function(e){var t=e.replace(te,ne);return function(e){var n=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},r.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return [o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return [o]}return []}}),r.find.TAG=n.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):n.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},r.find.CLASS=n.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&g)return t.getElementsByClassName(e)},y=[],m=[],(n.qsa=Z.test(p.querySelectorAll))&&(se(function(e){var t;h.appendChild(e).innerHTML="<a id='"+b+"'></a><select id='"+b+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+M+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+M+"*(?:value|"+H+")"),e.querySelectorAll("[id~="+b+"-]").length||m.push("~="),(t=p.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||m.push("\\["+M+"*name"+M+"*="+M+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+b+"+*").length||m.push(".#.+[+~]"),e.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]");}),se(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=p.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+M+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),h.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:");})),(n.matchesSelector=Z.test(v=h.matches||h.webkitMatchesSelector||h.mozMatchesSelector||h.oMatchesSelector||h.msMatchesSelector))&&se(function(e){n.disconnectedMatch=v.call(e,"*"),v.call(e,"[s!='']:x"),y.push("!=",F);}),m=m.length&&new RegExp(m.join("|")),y=y.length&&new RegExp(y.join("|")),t=Z.test(h.compareDocumentPosition),w=t||Z.test(h.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return !0;return !1},T=t?function(e,t){if(e===t)return d=!0,0;var r=!e.compareDocumentPosition-!t.compareDocumentPosition;return r||(1&(r=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!n.sortDetached&&t.compareDocumentPosition(e)===r?e==p||e.ownerDocument==N&&w(N,e)?-1:t==p||t.ownerDocument==N&&w(N,t)?1:s?k(s,e)-k(s,t):0:4&r?-1:1)}:function(e,t){if(e===t)return d=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,u=[e],l=[t];if(!i||!o)return e==p?-1:t==p?1:i?-1:o?1:s?k(s,e)-k(s,t):0;if(i===o)return fe(e,t);n=e;while(n=n.parentNode)u.unshift(n);n=t;while(n=n.parentNode)l.unshift(n);while(u[r]===l[r])r++;return r?fe(u[r],l[r]):u[r]==N?-1:l[r]==N?1:0},p):p},le.matches=function(e,t){return le(e,null,null,t)},le.matchesSelector=function(e,t){if(f(e),n.matchesSelector&&g&&!D[t+" "]&&(!y||!y.test(t))&&(!m||!m.test(t)))try{var r=v.call(e,t);if(r||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(e){D(t,!0);}return le(t,p,null,[e]).length>0},le.contains=function(e,t){return (e.ownerDocument||e)!=p&&f(e),w(e,t)},le.attr=function(e,t){(e.ownerDocument||e)!=p&&f(e);var i=r.attrHandle[t.toLowerCase()],o=i&&L.call(r.attrHandle,t.toLowerCase())?i(e,t,!g):void 0;return void 0!==o?o:n.attributes||!g?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},le.escape=function(e){return (e+"").replace(re,ie)},le.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},le.uniqueSort=function(e){var t,r=[],i=0,o=0;if(d=!n.detectDuplicates,s=!n.sortStable&&e.slice(0),e.sort(T),d){while(t=e[o++])t===e[o]&&(i=r.push(o));while(i--)e.splice(r[i],1);}return s=null,e},i=le.getText=function(e){var t,n="",r=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=i(e);}else if(3===o||4===o)return e.nodeValue}else while(t=e[r++])n+=i(t);return n},(r=le.selectors={cacheLength:50,createPseudo:ce,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||le.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&le.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&X.test(n)&&(t=u(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return "*"===e?function(){return !0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=E[e+" "];return t||(t=new RegExp("(^|"+M+")"+e+"("+M+"|$)"))&&E(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r){var i=le.attr(r,e);return null==i?"!="===t:!t||(i+="","="===t?i===n:"!="===t?i!==n:"^="===t?n&&0===i.indexOf(n):"*="===t?n&&i.indexOf(n)>-1:"$="===t?n&&i.slice(-n.length)===n:"~="===t?(" "+i.replace(O," ")+" ").indexOf(n)>-1:"|="===t&&(i===n||i.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),u="last"!==e.slice(-4),l="of-type"===t;return 1===r&&0===i?function(e){return !!e.parentNode}:function(t,n,a){var c,s,d,f,p,h,g=o!==u?"nextSibling":"previousSibling",m=t.parentNode,y=l&&t.nodeName.toLowerCase(),v=!a&&!l,w=!1;if(m){if(o){while(g){f=t;while(f=f[g])if(l?f.nodeName.toLowerCase()===y:1===f.nodeType)return !1;h=g="only"===e&&!h&&"nextSibling";}return !0}if(h=[u?m.firstChild:m.lastChild],u&&v){w=(p=(c=(s=(d=(f=m)[b]||(f[b]={}))[f.uniqueID]||(d[f.uniqueID]={}))[e]||[])[0]===C&&c[1])&&c[2],f=p&&m.childNodes[p];while(f=++p&&f&&f[g]||(w=p=0)||h.pop())if(1===f.nodeType&&++w&&f===t){s[e]=[C,p,w];break}}else if(v&&(w=p=(c=(s=(d=(f=t)[b]||(f[b]={}))[f.uniqueID]||(d[f.uniqueID]={}))[e]||[])[0]===C&&c[1]),!1===w)while(f=++p&&f&&f[g]||(w=p=0)||h.pop())if((l?f.nodeName.toLowerCase()===y:1===f.nodeType)&&++w&&(v&&((s=(d=f[b]||(f[b]={}))[f.uniqueID]||(d[f.uniqueID]={}))[e]=[C,w]),f===t))break;return (w-=i)===r||w%r==0&&w/r>=0}}},PSEUDO:function(e,t){var n,i=r.pseudos[e]||r.setFilters[e.toLowerCase()]||le.error("unsupported pseudo: "+e);return i[b]?i(t):i.length>1?(n=[e,e,"",t],r.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,n){var r,o=i(e,t),u=o.length;while(u--)e[r=k(e,o[u])]=!(n[r]=o[u]);}):function(e){return i(e,0,n)}):i}},pseudos:{not:ce(function(e){var t=[],n=[],r=l(e.replace(j,"$1"));return r[b]?ce(function(e,t,n,i){var o,u=r(e,null,i,[]),l=e.length;while(l--)(o=u[l])&&(e[l]=!(t[l]=o));}):function(e,i,o){return t[0]=e,r(t,null,o,n),t[0]=null,!n.pop()}}),has:ce(function(e){return function(t){return le(e,t).length>0}}),contains:ce(function(e){return e=e.replace(te,ne),function(t){return (t.textContent||i(t)).indexOf(e)>-1}}),lang:ce(function(e){return J.test(e||"")||le.error("unsupported lang: "+e),e=e.replace(te,ne).toLowerCase(),function(t){var n;do{if(n=g?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return (n=n.toLowerCase())===e||0===n.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return !1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===h},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:pe(!1),disabled:pe(!0),checked:function(e){var t=e.nodeName.toLowerCase();return "input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return !1;return !0},parent:function(e){return !r.pseudos.empty(e)},header:function(e){return Y.test(e.nodeName)},input:function(e){return W.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return "input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return "input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:he(function(){return [0]}),last:he(function(e,t){return [t-1]}),eq:he(function(e,t,n){return [n<0?n+t:n]}),even:he(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:he(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:he(function(e,t,n){for(var r=n<0?n+t:n>t?t:n;--r>=0;)e.push(r);return e}),gt:he(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=r.pseudos.eq;for(t in {radio:!0,checkbox:!0,file:!0,password:!0,image:!0})r.pseudos[t]=function(e){return function(t){return "input"===t.nodeName.toLowerCase()&&t.type===e}}(t);for(t in {submit:!0,reset:!0})r.pseudos[t]=function(e){return function(t){var n=t.nodeName.toLowerCase();return ("input"===n||"button"===n)&&t.type===e}}(t);function me(){}me.prototype=r.filters=r.pseudos,r.setFilters=new me,u=le.tokenize=function(e,t){var n,i,o,u,l,a,c,s=A[e+" "];if(s)return t?0:s.slice(0);l=e,a=[],c=r.preFilter;while(l){n&&!(i=G.exec(l))||(i&&(l=l.slice(i[0].length)||l),a.push(o=[])),n=!1,(i=U.exec(l))&&(n=i.shift(),o.push({value:n,type:i[0].replace(j," ")}),l=l.slice(n.length));for(u in r.filter)!(i=K[u].exec(l))||c[u]&&!(i=c[u](i))||(n=i.shift(),o.push({value:n,type:u,matches:i}),l=l.slice(n.length));if(!n)break}return t?l.length:l?le.error(e):A(e,a).slice(0)};function ye(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function ve(e,t,n){var r=t.dir,i=t.next,o=i||r,u=n&&"parentNode"===o,l=x++;return t.first?function(t,n,i){while(t=t[r])if(1===t.nodeType||u)return e(t,n,i);return !1}:function(t,n,a){var c,s,d,f=[C,l];if(a){while(t=t[r])if((1===t.nodeType||u)&&e(t,n,a))return !0}else while(t=t[r])if(1===t.nodeType||u)if(d=t[b]||(t[b]={}),s=d[t.uniqueID]||(d[t.uniqueID]={}),i&&i===t.nodeName.toLowerCase())t=t[r]||t;else {if((c=s[o])&&c[0]===C&&c[1]===l)return f[2]=c[2];if(s[o]=f,f[2]=e(t,n,a))return !0}return !1}}function we(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return !1;return !0}:e[0]}function be(e,t,n){for(var r=0,i=t.length;r<i;r++)le(e,t[r],n);return n}function Ne(e,t,n,r,i){for(var o,u=[],l=0,a=e.length,c=null!=t;l<a;l++)(o=e[l])&&(n&&!n(o,r,i)||(u.push(o),c&&t.push(l)));return u}function Ce(e,t,n,r,i,o){return r&&!r[b]&&(r=Ce(r)),i&&!i[b]&&(i=Ce(i,o)),ce(function(o,u,l,a){var c,s,d,f=[],p=[],h=u.length,g=o||be(t||"*",l.nodeType?[l]:l,[]),m=!e||!o&&t?g:Ne(g,f,e,l,a),y=n?i||(o?e:h||r)?[]:u:m;if(n&&n(m,y,l,a),r){c=Ne(y,p),r(c,[],l,a),s=c.length;while(s--)(d=c[s])&&(y[p[s]]=!(m[p[s]]=d));}if(o){if(i||e){if(i){c=[],s=y.length;while(s--)(d=y[s])&&c.push(m[s]=d);i(null,y=[],c,a);}s=y.length;while(s--)(d=y[s])&&(c=i?k(o,d):f[s])>-1&&(o[c]=!(u[c]=d));}}else y=Ne(y===u?y.splice(h,y.length):y),i?i(null,u,y,a):R.apply(u,y);})}function xe(e){for(var t,n,i,o=e.length,u=r.relative[e[0].type],l=u||r.relative[" "],a=u?1:0,s=ve(function(e){return e===t},l,!0),d=ve(function(e){return k(t,e)>-1},l,!0),f=[function(e,n,r){var i=!u&&(r||n!==c)||((t=n).nodeType?s(e,n,r):d(e,n,r));return t=null,i}];a<o;a++)if(n=r.relative[e[a].type])f=[ve(we(f),n)];else {if((n=r.filter[e[a].type].apply(null,e[a].matches))[b]){for(i=++a;i<o;i++)if(r.relative[e[i].type])break;return Ce(a>1&&we(f),a>1&&ye(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(j,"$1"),n,a<i&&xe(e.slice(a,i)),i<o&&xe(e=e.slice(i)),i<o&&ye(e))}f.push(n);}return we(f)}function Ee(e,t){var n=t.length>0,i=e.length>0,o=function(o,u,l,a,s){var d,h,m,y=0,v="0",w=o&&[],b=[],N=c,x=o||i&&r.find.TAG("*",s),E=C+=null==N?1:Math.random()||.1,A=x.length;for(s&&(c=u==p||u||s);v!==A&&null!=(d=x[v]);v++){if(i&&d){h=0,u||d.ownerDocument==p||(f(d),l=!g);while(m=e[h++])if(m(d,u||p,l)){a.push(d);break}s&&(C=E);}n&&((d=!m&&d)&&y--,o&&w.push(d));}if(y+=v,n&&v!==y){h=0;while(m=t[h++])m(w,b,u,l);if(o){if(y>0)while(v--)w[v]||b[v]||(b[v]=I.call(a));b=Ne(b);}R.apply(a,b),s&&!o&&b.length>0&&y+t.length>1&&le.uniqueSort(a);}return s&&(C=E,c=N),w};return n?ce(o):o}l=le.compile=function(e,t){var n,r=[],i=[],o=S[e+" "];if(!o){t||(t=u(e)),n=t.length;while(n--)(o=xe(t[n]))[b]?r.push(o):i.push(o);(o=S(e,Ee(i,r))).selector=e;}return o},a=le.select=function(e,t,n,i){var o,a,c,s,d,f="function"==typeof e&&e,p=!i&&u(e=f.selector||e);if(n=n||[],1===p.length){if((a=p[0]=p[0].slice(0)).length>2&&"ID"===(c=a[0]).type&&9===t.nodeType&&g&&r.relative[a[1].type]){if(!(t=(r.find.ID(c.matches[0].replace(te,ne),t)||[])[0]))return n;f&&(t=t.parentNode),e=e.slice(a.shift().value.length);}o=K.needsContext.test(e)?0:a.length;while(o--){if(c=a[o],r.relative[s=c.type])break;if((d=r.find[s])&&(i=d(c.matches[0].replace(te,ne),ee.test(a[0].type)&&ge(t.parentNode)||t))){if(a.splice(o,1),!(e=i.length&&ye(a)))return R.apply(n,i),n;break}}}return (f||l(e,p))(i,t,!g,n,!t||ee.test(e)&&ge(t.parentNode)||t),n},n.sortStable=b.split("").sort(T).join("")===b,n.detectDuplicates=!!d,f(),n.sortDetached=se(function(e){return 1&e.compareDocumentPosition(p.createElement("fieldset"))}),se(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||de("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),n.attributes&&se(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||de("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),se(function(e){return null==e.getAttribute("disabled")})||de(H,function(e,t,n){var r;if(!n)return !0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null});var Ae=e.Sizzle;le.noConflict=function(){return e.Sizzle===le&&(e.Sizzle=Ae),le},"function"==typeof define&&define.amd?define(function(){return le}):"undefined"!=typeof module&&module.exports?module.exports=le:e.Sizzle=le;}(window);
//# sourceMappingURL=sizzle.min.map

return module.exports;
})();

function matches(selector, elm) {
  const r = Sizzle.matches(selector, [elm]);
  return r.length > 0;
}
function selectOne(selector, elm) {
  const r = Sizzle(selector, elm);
  return r[0] || null;
}
function selectAll(selector, elm) {
  return Sizzle(selector, elm);
}

class MockClassList {
  constructor(elm) {
    this.elm = elm;
  }
  add(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach(className => {
      className = String(className);
      validateClass(className);
      if (clsNames.includes(className) === false) {
        clsNames.push(className);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, 'class', clsNames.join(' '));
    }
  }
  remove(...classNames) {
    const clsNames = getItems(this.elm);
    let updated = false;
    classNames.forEach(className => {
      className = String(className);
      validateClass(className);
      const index = clsNames.indexOf(className);
      if (index > -1) {
        clsNames.splice(index, 1);
        updated = true;
      }
    });
    if (updated) {
      this.elm.setAttributeNS(null, 'class', clsNames.filter(c => c.length > 0).join(' '));
    }
  }
  contains(className) {
    className = String(className);
    return getItems(this.elm).includes(className);
  }
  toggle(className) {
    className = String(className);
    if (this.contains(className) === true) {
      this.remove(className);
    }
    else {
      this.add(className);
    }
  }
  get length() {
    return getItems(this.elm).length;
  }
  item(index) {
    return getItems(this.elm)[index];
  }
  toString() {
    return getItems(this.elm).join(' ');
  }
}
function validateClass(className) {
  if (className === '') {
    throw new Error('The token provided must not be empty.');
  }
  if (/\s/.test(className)) {
    throw new Error(`The token provided ('${className}') contains HTML space characters, which are not valid in tokens.`);
  }
}
function getItems(elm) {
  const className = elm.getAttribute('class');
  if (typeof className === 'string' && className.length > 0) {
    return className
      .trim()
      .split(' ')
      .filter(c => c.length > 0);
  }
  return [];
}

class MockCSSStyleDeclaration {
  constructor() {
    this._styles = new Map();
  }
  setProperty(prop, value) {
    prop = jsCaseToCssCase(prop);
    if (value == null || value === '') {
      this._styles.delete(prop);
    }
    else {
      this._styles.set(prop, String(value));
    }
  }
  getPropertyValue(prop) {
    prop = jsCaseToCssCase(prop);
    return String(this._styles.get(prop) || '');
  }
  removeProperty(prop) {
    prop = jsCaseToCssCase(prop);
    this._styles.delete(prop);
  }
  get length() {
    return this._styles.size;
  }
  get cssText() {
    const cssText = [];
    this._styles.forEach((value, prop) => {
      cssText.push(`${prop}: ${value};`);
    });
    return cssText.join(' ').trim();
  }
  set cssText(cssText) {
    if (cssText == null || cssText === '') {
      this._styles.clear();
      return;
    }
    cssText.split(';').forEach(rule => {
      rule = rule.trim();
      if (rule.length > 0) {
        const splt = rule.split(':');
        if (splt.length > 1) {
          const prop = splt[0].trim();
          const value = splt[1].trim();
          if (prop !== '' && value !== '') {
            this._styles.set(jsCaseToCssCase(prop), value);
          }
        }
      }
    });
  }
}
function createCSSStyleDeclaration() {
  return new Proxy(new MockCSSStyleDeclaration(), cssProxyHandler);
}
const cssProxyHandler = {
  get(cssStyle, prop) {
    if (prop in cssStyle) {
      return cssStyle[prop];
    }
    prop = cssCaseToJsCase(prop);
    return cssStyle.getPropertyValue(prop);
  },
  set(cssStyle, prop, value) {
    if (prop in cssStyle) {
      cssStyle[prop] = value;
    }
    else {
      cssStyle.setProperty(prop, value);
    }
    return true;
  },
};
function cssCaseToJsCase(str) {
  // font-size to fontSize
  if (str.length > 1 && str.includes('-') === true) {
    str = str
      .toLowerCase()
      .split('-')
      .map(segment => segment.charAt(0).toUpperCase() + segment.slice(1))
      .join('');
    str = str.substr(0, 1).toLowerCase() + str.substr(1);
  }
  return str;
}
function jsCaseToCssCase(str) {
  // fontSize to font-size
  if (str.length > 1 && str.includes('-') === false && /[A-Z]/.test(str) === true) {
    str = str
      .replace(/([A-Z])/g, g => ' ' + g[0])
      .trim()
      .replace(/ /g, '-')
      .toLowerCase();
  }
  return str;
}

class MockEvent {
  constructor(type, eventInitDict) {
    this.bubbles = false;
    this.cancelBubble = false;
    this.cancelable = false;
    this.composed = false;
    this.currentTarget = null;
    this.defaultPrevented = false;
    this.srcElement = null;
    this.target = null;
    if (typeof type !== 'string') {
      throw new Error(`Event type required`);
    }
    this.type = type;
    this.timeStamp = Date.now();
    if (eventInitDict != null) {
      Object.assign(this, eventInitDict);
    }
  }
  preventDefault() {
    this.defaultPrevented = true;
  }
  stopPropagation() {
    this.cancelBubble = true;
  }
  stopImmediatePropagation() {
    this.cancelBubble = true;
  }
}
class MockCustomEvent extends MockEvent {
  constructor(type, customEventInitDic) {
    super(type);
    this.detail = null;
    if (customEventInitDic != null) {
      Object.assign(this, customEventInitDic);
    }
  }
}
class MockKeyboardEvent extends MockEvent {
  constructor(type, keyboardEventInitDic) {
    super(type);
    this.code = '';
    this.key = '';
    this.altKey = false;
    this.ctrlKey = false;
    this.metaKey = false;
    this.shiftKey = false;
    this.location = 0;
    this.repeat = false;
    if (keyboardEventInitDic != null) {
      Object.assign(this, keyboardEventInitDic);
    }
  }
}
class MockMouseEvent extends MockEvent {
  constructor(type, mouseEventInitDic) {
    super(type);
    this.screenX = 0;
    this.screenY = 0;
    this.clientX = 0;
    this.clientY = 0;
    this.ctrlKey = false;
    this.shiftKey = false;
    this.altKey = false;
    this.metaKey = false;
    this.button = 0;
    this.buttons = 0;
    this.relatedTarget = null;
    if (mouseEventInitDic != null) {
      Object.assign(this, mouseEventInitDic);
    }
  }
}
class MockEventListener {
  constructor(type, handler) {
    this.type = type;
    this.handler = handler;
  }
}
function addEventListener(elm, type, handler) {
  const target = elm;
  if (target.__listeners == null) {
    target.__listeners = [];
  }
  target.__listeners.push(new MockEventListener(type, handler));
}
function removeEventListener(elm, type, handler) {
  const target = elm;
  if (target != null && Array.isArray(target.__listeners) === true) {
    const elmListener = target.__listeners.find(e => e.type === type && e.handler === handler);
    if (elmListener != null) {
      const index = target.__listeners.indexOf(elmListener);
      target.__listeners.splice(index, 1);
    }
  }
}
function resetEventListeners(target) {
  if (target != null && target.__listeners != null) {
    target.__listeners = null;
  }
}
function triggerEventListener(elm, ev) {
  if (elm == null || ev.cancelBubble === true) {
    return;
  }
  const target = elm;
  ev.currentTarget = elm;
  if (Array.isArray(target.__listeners) === true) {
    const listeners = target.__listeners.filter(e => e.type === ev.type);
    listeners.forEach(listener => {
      try {
        listener.handler.call(target, ev);
      }
      catch (err) {
        console.error(err);
      }
    });
  }
  if (ev.bubbles === false) {
    return;
  }
  if (elm.nodeName === "#document" /* DOCUMENT_NODE */) {
    triggerEventListener(elm.defaultView, ev);
  }
  else {
    triggerEventListener(elm.parentElement, ev);
  }
}
function dispatchEvent(currentTarget, ev) {
  ev.target = currentTarget;
  triggerEventListener(currentTarget, ev);
  return true;
}

function serializeNodeToHtml(elm, opts = {}) {
  const output = {
    currentLineWidth: 0,
    indent: 0,
    isWithinBody: false,
    text: [],
  };
  if (opts.prettyHtml) {
    if (typeof opts.indentSpaces !== 'number') {
      opts.indentSpaces = 2;
    }
    if (typeof opts.newLines !== 'boolean') {
      opts.newLines = true;
    }
    opts.approximateLineWidth = -1;
  }
  else {
    opts.prettyHtml = false;
    if (typeof opts.newLines !== 'boolean') {
      opts.newLines = false;
    }
    if (typeof opts.indentSpaces !== 'number') {
      opts.indentSpaces = 0;
    }
  }
  if (typeof opts.approximateLineWidth !== 'number') {
    opts.approximateLineWidth = -1;
  }
  if (typeof opts.removeEmptyAttributes !== 'boolean') {
    opts.removeEmptyAttributes = true;
  }
  if (typeof opts.removeAttributeQuotes !== 'boolean') {
    opts.removeAttributeQuotes = false;
  }
  if (typeof opts.removeBooleanAttributeQuotes !== 'boolean') {
    opts.removeBooleanAttributeQuotes = false;
  }
  if (typeof opts.removeHtmlComments !== 'boolean') {
    opts.removeHtmlComments = false;
  }
  if (typeof opts.serializeShadowRoot !== 'boolean') {
    opts.serializeShadowRoot = false;
  }
  if (opts.outerHtml) {
    serializeToHtml(elm, opts, output, false);
  }
  else {
    for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {
      serializeToHtml(elm.childNodes[i], opts, output, false);
    }
  }
  if (output.text[0] === '\n') {
    output.text.shift();
  }
  if (output.text[output.text.length - 1] === '\n') {
    output.text.pop();
  }
  return output.text.join('');
}
function serializeToHtml(node, opts, output, isShadowRoot) {
  if (node.nodeType === 1 /* ELEMENT_NODE */ || isShadowRoot) {
    const tagName = isShadowRoot ? 'mock:shadow-root' : getTagName(node);
    if (tagName === 'body') {
      output.isWithinBody = true;
    }
    const ignoreTag = opts.excludeTags != null && opts.excludeTags.includes(tagName);
    if (ignoreTag === false) {
      const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 ? isWithinWhitespaceSensitive(node) : false;
      if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
        output.text.push('\n');
        output.currentLineWidth = 0;
      }
      if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
        for (let i = 0; i < output.indent; i++) {
          output.text.push(' ');
        }
        output.currentLineWidth += output.indent;
      }
      output.text.push('<' + tagName);
      output.currentLineWidth += tagName.length + 1;
      const attrsLength = node.attributes.length;
      const attributes = opts.prettyHtml && attrsLength > 1
        ? cloneAttributes(node.attributes, true)
        : node.attributes;
      for (let i = 0; i < attrsLength; i++) {
        const attr = attributes.item(i);
        const attrName = attr.name;
        if (attrName === 'style') {
          continue;
        }
        let attrValue = attr.value;
        if (opts.removeEmptyAttributes && attrValue === '' && REMOVE_EMPTY_ATTR.has(attrName)) {
          continue;
        }
        const attrNamespaceURI = attr.namespaceURI;
        if (attrNamespaceURI == null) {
          output.currentLineWidth += attrName.length + 1;
          if (opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            output.text.push('\n' + attrName);
            output.currentLineWidth = 0;
          }
          else {
            output.text.push(' ' + attrName);
          }
        }
        else if (attrNamespaceURI === 'http://www.w3.org/XML/1998/namespace') {
          output.text.push(' xml:' + attrName);
          output.currentLineWidth += attrName.length + 5;
        }
        else if (attrNamespaceURI === 'http://www.w3.org/2000/xmlns/') {
          if (attrName !== 'xmlns') {
            output.text.push(' xmlns:' + attrName);
            output.currentLineWidth += attrName.length + 7;
          }
          else {
            output.text.push(' ' + attrName);
            output.currentLineWidth += attrName.length + 1;
          }
        }
        else if (attrNamespaceURI === XLINK_NS) {
          output.text.push(' xlink:' + attrName);
          output.currentLineWidth += attrName.length + 7;
        }
        else {
          output.text.push(' ' + attrNamespaceURI + ':' + attrName);
          output.currentLineWidth += attrNamespaceURI.length + attrName.length + 2;
        }
        if (opts.prettyHtml && attrName === 'class') {
          attrValue = attr.value = attrValue
            .split(' ')
            .filter(t => t !== '')
            .sort()
            .join(' ')
            .trim();
        }
        if (attrValue === '') {
          if (opts.removeBooleanAttributeQuotes && BOOLEAN_ATTR.has(attrName)) {
            continue;
          }
          if (opts.removeEmptyAttributes && attrName.startsWith('data-')) {
            continue;
          }
        }
        if (opts.removeAttributeQuotes && CAN_REMOVE_ATTR_QUOTES.test(attrValue)) {
          output.text.push('=' + escapeString(attrValue, true));
          output.currentLineWidth += attrValue.length + 1;
        }
        else {
          output.text.push('="' + escapeString(attrValue, true) + '"');
          output.currentLineWidth += attrValue.length + 3;
        }
      }
      if (node.hasAttribute('style')) {
        const cssText = node.style.cssText;
        if (opts.approximateLineWidth > 0 &&
          output.currentLineWidth + cssText.length + 10 > opts.approximateLineWidth) {
          output.text.push(`\nstyle="${cssText}">`);
          output.currentLineWidth = 0;
        }
        else {
          output.text.push(` style="${cssText}">`);
          output.currentLineWidth += cssText.length + 10;
        }
      }
      else {
        output.text.push('>');
        output.currentLineWidth += 1;
      }
    }
    if (EMPTY_ELEMENTS.has(tagName) === false) {
      if (opts.serializeShadowRoot && node.shadowRoot != null) {
        output.indent = output.indent + opts.indentSpaces;
        serializeToHtml(node.shadowRoot, opts, output, true);
        output.indent = output.indent - opts.indentSpaces;
        if (opts.newLines &&
          (node.childNodes.length === 0 ||
            (node.childNodes.length === 1 &&
              node.childNodes[0].nodeType === 3 /* TEXT_NODE */ &&
              node.childNodes[0].nodeValue.trim() === ''))) {
          output.text.push('\n');
          output.currentLineWidth = 0;
          for (let i = 0; i < output.indent; i++) {
            output.text.push(' ');
          }
          output.currentLineWidth += output.indent;
        }
      }
      if (opts.excludeTagContent == null || opts.excludeTagContent.includes(tagName) === false) {
        const childNodes = tagName === 'template' ? node.content.childNodes : node.childNodes;
        const childNodeLength = childNodes.length;
        if (childNodeLength > 0) {
          if (childNodeLength === 1 &&
            childNodes[0].nodeType === 3 /* TEXT_NODE */ &&
            (typeof childNodes[0].nodeValue !== 'string' || childNodes[0].nodeValue.trim() === '')) ;
          else {
            const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 ? isWithinWhitespaceSensitive(node) : false;
            if (!isWithinWhitespaceSensitiveNode && opts.indentSpaces > 0 && ignoreTag === false) {
              output.indent = output.indent + opts.indentSpaces;
            }
            for (let i = 0; i < childNodeLength; i++) {
              serializeToHtml(childNodes[i], opts, output, false);
            }
            if (ignoreTag === false) {
              if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
                output.text.push('\n');
                output.currentLineWidth = 0;
              }
              if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
                output.indent = output.indent - opts.indentSpaces;
                for (let i = 0; i < output.indent; i++) {
                  output.text.push(' ');
                }
                output.currentLineWidth += output.indent;
              }
            }
          }
        }
        if (ignoreTag === false) {
          output.text.push('</' + tagName + '>');
          output.currentLineWidth += tagName.length + 3;
        }
      }
    }
    if (opts.approximateLineWidth > 0 && STRUCTURE_ELEMENTS.has(tagName)) {
      output.text.push('\n');
      output.currentLineWidth = 0;
    }
    if (tagName === 'body') {
      output.isWithinBody = false;
    }
  }
  else if (node.nodeType === 3 /* TEXT_NODE */) {
    let textContent = node.nodeValue;
    if (typeof textContent === 'string') {
      const trimmedTextContent = textContent.trim();
      if (trimmedTextContent === '') {
        // this text node is whitespace only
        if (isWithinWhitespaceSensitive(node)) {
          // whitespace matters within this element
          // just add the exact text we were given
          output.text.push(textContent);
          output.currentLineWidth += textContent.length;
        }
        else if (opts.approximateLineWidth > 0 && !output.isWithinBody) ;
        else if (!opts.prettyHtml) {
          // this text node is only whitespace, and it's not
          // within a whitespace sensitive element like <pre> or <code>
          // so replace the entire white space with a single new line
          output.currentLineWidth += 1;
          if (opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {
            // good enough for a new line
            // for perf these are all just estimates
            // we don't care to ensure exact line lengths
            output.text.push('\n');
            output.currentLineWidth = 0;
          }
          else {
            // let's keep it all on the same line yet
            output.text.push(' ');
          }
        }
      }
      else {
        // this text node has text content
        const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 || opts.prettyHtml ? isWithinWhitespaceSensitive(node) : false;
        if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
          output.text.push('\n');
          output.currentLineWidth = 0;
        }
        if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
          for (let i = 0; i < output.indent; i++) {
            output.text.push(' ');
          }
          output.currentLineWidth += output.indent;
        }
        let textContentLength = textContent.length;
        if (textContentLength > 0) {
          // this text node has text content
          const parentTagName = node.parentNode != null && node.parentNode.nodeType === 1 /* ELEMENT_NODE */
            ? node.parentNode.nodeName
            : null;
          if (NON_ESCAPABLE_CONTENT.has(parentTagName)) {
            // this text node cannot have its content escaped since it's going
            // into an element like <style> or <script>
            if (isWithinWhitespaceSensitive(node)) {
              output.text.push(textContent);
            }
            else {
              output.text.push(trimmedTextContent);
              textContentLength = trimmedTextContent.length;
            }
            output.currentLineWidth += textContentLength;
          }
          else {
            // this text node is going into a normal element and html can be escaped
            if (opts.prettyHtml && !isWithinWhitespaceSensitiveNode) {
              // pretty print the text node
              output.text.push(escapeString(textContent.replace(/\s\s+/g, ' ').trim(), false));
              output.currentLineWidth += textContentLength;
            }
            else {
              // not pretty printing the text node
              if (isWithinWhitespaceSensitive(node)) {
                output.currentLineWidth += textContentLength;
              }
              else {
                // this element is not a whitespace sensitive one, like <pre> or <code> so
                // any whitespace at the start and end can be cleaned up to just be one space
                if (/\s/.test(textContent.charAt(0))) {
                  textContent = ' ' + textContent.trimLeft();
                }
                textContentLength = textContent.length;
                if (textContentLength > 1) {
                  if (/\s/.test(textContent.charAt(textContentLength - 1))) {
                    if (opts.approximateLineWidth > 0 &&
                      output.currentLineWidth + textContentLength > opts.approximateLineWidth) {
                      textContent = textContent.trimRight() + '\n';
                      output.currentLineWidth = 0;
                    }
                    else {
                      textContent = textContent.trimRight() + ' ';
                    }
                  }
                }
                output.currentLineWidth += textContentLength;
              }
              output.text.push(escapeString(textContent, false));
            }
          }
        }
      }
    }
  }
  else if (node.nodeType === 8 /* COMMENT_NODE */) {
    const nodeValue = node.nodeValue;
    if (opts.removeHtmlComments) {
      const isHydrateAnnotation = nodeValue.startsWith(CONTENT_REF_ID + '.') ||
        nodeValue.startsWith(ORG_LOCATION_ID + '.') ||
        nodeValue.startsWith(SLOT_NODE_ID + '.') ||
        nodeValue.startsWith(TEXT_NODE_ID + '.');
      if (!isHydrateAnnotation) {
        return;
      }
    }
    const isWithinWhitespaceSensitiveNode = opts.newLines || opts.indentSpaces > 0 ? isWithinWhitespaceSensitive(node) : false;
    if (opts.newLines && !isWithinWhitespaceSensitiveNode) {
      output.text.push('\n');
      output.currentLineWidth = 0;
    }
    if (opts.indentSpaces > 0 && !isWithinWhitespaceSensitiveNode) {
      for (let i = 0; i < output.indent; i++) {
        output.text.push(' ');
      }
      output.currentLineWidth += output.indent;
    }
    output.text.push('<!--' + nodeValue + '-->');
    output.currentLineWidth += nodeValue.length + 7;
  }
  else if (node.nodeType === 10 /* DOCUMENT_TYPE_NODE */) {
    output.text.push('<!doctype html>');
  }
}
const AMP_REGEX = /&/g;
const NBSP_REGEX = /\u00a0/g;
const DOUBLE_QUOTE_REGEX = /"/g;
const LT_REGEX = /</g;
const GT_REGEX = />/g;
const CAN_REMOVE_ATTR_QUOTES = /^[^ \t\n\f\r"'`=<>\/\\-]+$/;
function getTagName(element) {
  if (element.namespaceURI === 'http://www.w3.org/1999/xhtml') {
    return element.nodeName.toLowerCase();
  }
  else {
    return element.nodeName;
  }
}
function escapeString(str, attrMode) {
  str = str.replace(AMP_REGEX, '&amp;').replace(NBSP_REGEX, '&nbsp;');
  if (attrMode) {
    return str.replace(DOUBLE_QUOTE_REGEX, '&quot;');
  }
  return str.replace(LT_REGEX, '&lt;').replace(GT_REGEX, '&gt;');
}
function isWithinWhitespaceSensitive(node) {
  while (node != null) {
    if (WHITESPACE_SENSITIVE.has(node.nodeName)) {
      return true;
    }
    node = node.parentNode;
  }
  return false;
}
/*@__PURE__*/ const NON_ESCAPABLE_CONTENT = new Set([
  'STYLE',
  'SCRIPT',
  'IFRAME',
  'NOSCRIPT',
  'XMP',
  'NOEMBED',
  'NOFRAMES',
  'PLAINTEXT',
]);
/*@__PURE__*/ const WHITESPACE_SENSITIVE = new Set([
  'CODE',
  'OUTPUT',
  'PLAINTEXT',
  'PRE',
  'SCRIPT',
  'TEMPLATE',
  'TEXTAREA',
]);
/*@__PURE__*/ const EMPTY_ELEMENTS = new Set([
  'area',
  'base',
  'basefont',
  'bgsound',
  'br',
  'col',
  'embed',
  'frame',
  'hr',
  'img',
  'input',
  'keygen',
  'link',
  'meta',
  'param',
  'source',
  'trace',
  'wbr',
]);
/*@__PURE__*/ const REMOVE_EMPTY_ATTR = new Set(['class', 'dir', 'id', 'lang', 'name', 'title']);
/*@__PURE__*/ const BOOLEAN_ATTR = new Set([
  'allowfullscreen',
  'async',
  'autofocus',
  'autoplay',
  'checked',
  'compact',
  'controls',
  'declare',
  'default',
  'defaultchecked',
  'defaultmuted',
  'defaultselected',
  'defer',
  'disabled',
  'enabled',
  'formnovalidate',
  'hidden',
  'indeterminate',
  'inert',
  'ismap',
  'itemscope',
  'loop',
  'multiple',
  'muted',
  'nohref',
  'nomodule',
  'noresize',
  'noshade',
  'novalidate',
  'nowrap',
  'open',
  'pauseonexit',
  'readonly',
  'required',
  'reversed',
  'scoped',
  'seamless',
  'selected',
  'sortable',
  'truespeed',
  'typemustmatch',
  'visible',
]);
/*@__PURE__*/ const STRUCTURE_ELEMENTS = new Set([
  'html',
  'body',
  'head',
  'iframe',
  'meta',
  'link',
  'base',
  'title',
  'script',
  'style',
]);

// Parse5 6.0.1
const e=function(e){const t=[65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];var n="�",s={EOF:-1,NULL:0,TABULATION:9,CARRIAGE_RETURN:13,LINE_FEED:10,FORM_FEED:12,SPACE:32,EXCLAMATION_MARK:33,QUOTATION_MARK:34,NUMBER_SIGN:35,AMPERSAND:38,APOSTROPHE:39,HYPHEN_MINUS:45,SOLIDUS:47,DIGIT_0:48,DIGIT_9:57,SEMICOLON:59,LESS_THAN_SIGN:60,EQUALS_SIGN:61,GREATER_THAN_SIGN:62,QUESTION_MARK:63,LATIN_CAPITAL_A:65,LATIN_CAPITAL_F:70,LATIN_CAPITAL_X:88,LATIN_CAPITAL_Z:90,RIGHT_SQUARE_BRACKET:93,GRAVE_ACCENT:96,LATIN_SMALL_A:97,LATIN_SMALL_F:102,LATIN_SMALL_X:120,LATIN_SMALL_Z:122,REPLACEMENT_CHARACTER:65533},r=function(e){return e>=55296&&e<=57343},i=function(e){return 32!==e&&10!==e&&13!==e&&9!==e&&12!==e&&e>=1&&e<=31||e>=127&&e<=159},o=function(e){return e>=64976&&e<=65007||t.indexOf(e)>-1},a="unexpected-null-character",T="invalid-first-character-of-tag-name",E="missing-semicolon-after-character-reference",h="eof-before-tag-name",c="eof-in-tag",_="missing-whitespace-after-doctype-public-keyword",l="missing-whitespace-between-doctype-public-and-system-identifiers",m="missing-whitespace-after-doctype-system-keyword",p="missing-quote-before-doctype-public-identifier",A="missing-quote-before-doctype-system-identifier",u="missing-doctype-public-identifier",N="missing-doctype-system-identifier",d="abrupt-doctype-public-identifier",C="abrupt-doctype-system-identifier",O="eof-in-script-html-comment-like-text",f="eof-in-doctype",S="abrupt-closing-of-empty-comment",R="eof-in-comment",I="absence-of-digits-in-numeric-character-reference",L="end-tag-without-matching-open-element",k="misplaced-start-tag-for-head-element";const M=s;var g=new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4e3,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,1e4,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13e3,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);const P=s,H={DASH_DASH_STRING:[45,45],DOCTYPE_STRING:[68,79,67,84,89,80,69],CDATA_START_STRING:[91,67,68,65,84,65,91],SCRIPT_STRING:[115,99,114,105,112,116],PUBLIC_STRING:[80,85,66,76,73,67],SYSTEM_STRING:[83,89,83,84,69,77]},D={128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376},F="DATA_STATE",U="RCDATA_STATE",G="RAWTEXT_STATE",B="SCRIPT_DATA_STATE",K="PLAINTEXT_STATE",b="TAG_OPEN_STATE",x="END_TAG_OPEN_STATE",y="TAG_NAME_STATE",v="RCDATA_LESS_THAN_SIGN_STATE",Y="RCDATA_END_TAG_OPEN_STATE",w="RCDATA_END_TAG_NAME_STATE",Q="RAWTEXT_LESS_THAN_SIGN_STATE",X="RAWTEXT_END_TAG_OPEN_STATE",W="RAWTEXT_END_TAG_NAME_STATE",V="SCRIPT_DATA_LESS_THAN_SIGN_STATE",j="SCRIPT_DATA_END_TAG_OPEN_STATE",z="SCRIPT_DATA_END_TAG_NAME_STATE",q="SCRIPT_DATA_ESCAPE_START_STATE",J="SCRIPT_DATA_ESCAPE_START_DASH_STATE",Z="SCRIPT_DATA_ESCAPED_STATE",$="SCRIPT_DATA_ESCAPED_DASH_STATE",ee="SCRIPT_DATA_ESCAPED_DASH_DASH_STATE",te="SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE",ne="SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE",se="SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE",re="SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE",ie="SCRIPT_DATA_DOUBLE_ESCAPED_STATE",oe="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE",ae="SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE",Te="SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE",Ee="SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE",he="BEFORE_ATTRIBUTE_NAME_STATE",ce="ATTRIBUTE_NAME_STATE",_e="AFTER_ATTRIBUTE_NAME_STATE",le="BEFORE_ATTRIBUTE_VALUE_STATE",me="ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE",pe="ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE",Ae="ATTRIBUTE_VALUE_UNQUOTED_STATE",ue="AFTER_ATTRIBUTE_VALUE_QUOTED_STATE",Ne="SELF_CLOSING_START_TAG_STATE",de="BOGUS_COMMENT_STATE",Ce="MARKUP_DECLARATION_OPEN_STATE",Oe="COMMENT_START_STATE",fe="COMMENT_START_DASH_STATE",Se="COMMENT_STATE",Re="COMMENT_LESS_THAN_SIGN_STATE",Ie="COMMENT_LESS_THAN_SIGN_BANG_STATE",Le="COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE",ke="COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE",Me="COMMENT_END_DASH_STATE",ge="COMMENT_END_STATE",Pe="COMMENT_END_BANG_STATE",He="DOCTYPE_STATE",De="BEFORE_DOCTYPE_NAME_STATE",Fe="DOCTYPE_NAME_STATE",Ue="AFTER_DOCTYPE_NAME_STATE",Ge="AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE",Be="BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE",Ke="DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE",be="DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE",xe="AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE",ye="BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE",ve="AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE",Ye="BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE",we="DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE",Qe="DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE",Xe="AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE",We="BOGUS_DOCTYPE_STATE",Ve="CDATA_SECTION_STATE",je="CDATA_SECTION_BRACKET_STATE",ze="CDATA_SECTION_END_STATE",qe="CHARACTER_REFERENCE_STATE",Je="NAMED_CHARACTER_REFERENCE_STATE",Ze="AMBIGUOS_AMPERSAND_STATE",$e="NUMERIC_CHARACTER_REFERENCE_STATE",et="HEXADEMICAL_CHARACTER_REFERENCE_START_STATE",tt="DECIMAL_CHARACTER_REFERENCE_START_STATE",nt="HEXADEMICAL_CHARACTER_REFERENCE_STATE",st="DECIMAL_CHARACTER_REFERENCE_STATE",rt="NUMERIC_CHARACTER_REFERENCE_END_STATE";function it(e){return e===P.SPACE||e===P.LINE_FEED||e===P.TABULATION||e===P.FORM_FEED}function ot(e){return e>=P.DIGIT_0&&e<=P.DIGIT_9}function at(e){return e>=P.LATIN_CAPITAL_A&&e<=P.LATIN_CAPITAL_Z}function Tt(e){return e>=P.LATIN_SMALL_A&&e<=P.LATIN_SMALL_Z}function Et(e){return Tt(e)||at(e)}function ht(e){return Et(e)||ot(e)}function ct(e){return e>=P.LATIN_CAPITAL_A&&e<=P.LATIN_CAPITAL_F}function _t(e){return e>=P.LATIN_SMALL_A&&e<=P.LATIN_SMALL_F}function lt(e){return e+32}function mt(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(e>>>10&1023|55296)+String.fromCharCode(56320|1023&e))}function pt(e){return String.fromCharCode(lt(e))}function At(e,t){const n=g[++e];let s=++e,r=s+n-1;for(;s<=r;){const e=s+r>>>1,i=g[e];if(i<t)s=e+1;else {if(!(i>t))return g[e+n];r=e-1;}}return -1}class ut{constructor(){this.preprocessor=new class{constructor(){this.html=null,this.pos=-1,this.lastGapPos=-1,this.lastCharPos=-1,this.gapStack=[],this.skipNextNewLine=!1,this.lastChunkWritten=!1,this.endOfChunkHit=!1,this.bufferWaterline=65536;}_err(){}_addGap(){this.gapStack.push(this.lastGapPos),this.lastGapPos=this.pos;}_processSurrogate(e){if(this.pos!==this.lastCharPos){const t=this.html.charCodeAt(this.pos+1);if(function(e){return e>=56320&&e<=57343}(t))return this.pos++,this._addGap(),1024*(e-55296)+9216+t}else if(!this.lastChunkWritten)return this.endOfChunkHit=!0,M.EOF;return this._err("surrogate-in-input-stream"),e}dropParsedChunk(){this.pos>this.bufferWaterline&&(this.lastCharPos-=this.pos,this.html=this.html.substring(this.pos),this.pos=0,this.lastGapPos=-1,this.gapStack=[]);}write(e,t){this.html?this.html+=e:this.html=e,this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1,this.lastChunkWritten=t;}insertHtmlAtCurrentPos(e){this.html=this.html.substring(0,this.pos+1)+e+this.html.substring(this.pos+1,this.html.length),this.lastCharPos=this.html.length-1,this.endOfChunkHit=!1;}advance(){if(this.pos++,this.pos>this.lastCharPos)return this.endOfChunkHit=!this.lastChunkWritten,M.EOF;let e=this.html.charCodeAt(this.pos);return this.skipNextNewLine&&e===M.LINE_FEED?(this.skipNextNewLine=!1,this._addGap(),this.advance()):e===M.CARRIAGE_RETURN?(this.skipNextNewLine=!0,M.LINE_FEED):(this.skipNextNewLine=!1,r(e)&&(e=this._processSurrogate(e)),e>31&&e<127||e===M.LINE_FEED||e===M.CARRIAGE_RETURN||e>159&&e<64976||this._checkForProblematicCharacters(e),e)}_checkForProblematicCharacters(e){i(e)?this._err("control-character-in-input-stream"):o(e)&&this._err("noncharacter-in-input-stream");}retreat(){this.pos===this.lastGapPos&&(this.lastGapPos=this.gapStack.pop(),this.pos--),this.pos--;}},this.tokenQueue=[],this.allowCDATA=!1,this.state=F,this.returnState="",this.charRefCode=-1,this.tempBuff=[],this.lastStartTagName="",this.consumedAfterSnapshot=-1,this.active=!1,this.currentCharacterToken=null,this.currentToken=null,this.currentAttr=null;}_err(){}_errOnNextCodePoint(e){this._consume(),this._err(e),this._unconsume();}getNextToken(){for(;!this.tokenQueue.length&&this.active;){this.consumedAfterSnapshot=0;const e=this._consume();this._ensureHibernation()||this[this.state](e);}return this.tokenQueue.shift()}write(e,t){this.active=!0,this.preprocessor.write(e,t);}insertHtmlAtCurrentPos(e){this.active=!0,this.preprocessor.insertHtmlAtCurrentPos(e);}_ensureHibernation(){if(this.preprocessor.endOfChunkHit){for(;this.consumedAfterSnapshot>0;this.consumedAfterSnapshot--)this.preprocessor.retreat();return this.active=!1,this.tokenQueue.push({type:ut.HIBERNATION_TOKEN}),!0}return !1}_consume(){return this.consumedAfterSnapshot++,this.preprocessor.advance()}_unconsume(){this.consumedAfterSnapshot--,this.preprocessor.retreat();}_reconsumeInState(e){this.state=e,this._unconsume();}_consumeSequenceIfMatch(e,t,n){let s=0,r=!0;const i=e.length;let o,a=0,T=t;for(;a<i;a++){if(a>0&&(T=this._consume(),s++),T===P.EOF){r=!1;break}if(o=e[a],T!==o&&(n||T!==lt(o))){r=!1;break}}if(!r)for(;s--;)this._unconsume();return r}_isTempBufferEqualToScriptString(){if(this.tempBuff.length!==H.SCRIPT_STRING.length)return !1;for(let e=0;e<this.tempBuff.length;e++)if(this.tempBuff[e]!==H.SCRIPT_STRING[e])return !1;return !0}_createStartTagToken(){this.currentToken={type:ut.START_TAG_TOKEN,tagName:"",selfClosing:!1,ackSelfClosing:!1,attrs:[]};}_createEndTagToken(){this.currentToken={type:ut.END_TAG_TOKEN,tagName:"",selfClosing:!1,attrs:[]};}_createCommentToken(){this.currentToken={type:ut.COMMENT_TOKEN,data:""};}_createDoctypeToken(e){this.currentToken={type:ut.DOCTYPE_TOKEN,name:e,forceQuirks:!1,publicId:null,systemId:null};}_createCharacterToken(e,t){this.currentCharacterToken={type:e,chars:t};}_createEOFToken(){this.currentToken={type:ut.EOF_TOKEN};}_createAttr(e){this.currentAttr={name:e,value:""};}_leaveAttrName(e){null===ut.getTokenAttr(this.currentToken,this.currentAttr.name)?this.currentToken.attrs.push(this.currentAttr):this._err("duplicate-attribute"),this.state=e;}_leaveAttrValue(e){this.state=e;}_emitCurrentToken(){this._emitCurrentCharacterToken();const e=this.currentToken;this.currentToken=null,e.type===ut.START_TAG_TOKEN?this.lastStartTagName=e.tagName:e.type===ut.END_TAG_TOKEN&&(e.attrs.length>0&&this._err("end-tag-with-attributes"),e.selfClosing&&this._err("end-tag-with-trailing-solidus")),this.tokenQueue.push(e);}_emitCurrentCharacterToken(){this.currentCharacterToken&&(this.tokenQueue.push(this.currentCharacterToken),this.currentCharacterToken=null);}_emitEOFToken(){this._createEOFToken(),this._emitCurrentToken();}_appendCharToCurrentCharacterToken(e,t){this.currentCharacterToken&&this.currentCharacterToken.type!==e&&this._emitCurrentCharacterToken(),this.currentCharacterToken?this.currentCharacterToken.chars+=t:this._createCharacterToken(e,t);}_emitCodePoint(e){let t=ut.CHARACTER_TOKEN;it(e)?t=ut.WHITESPACE_CHARACTER_TOKEN:e===P.NULL&&(t=ut.NULL_CHARACTER_TOKEN),this._appendCharToCurrentCharacterToken(t,mt(e));}_emitSeveralCodePoints(e){for(let t=0;t<e.length;t++)this._emitCodePoint(e[t]);}_emitChars(e){this._appendCharToCurrentCharacterToken(ut.CHARACTER_TOKEN,e);}_matchNamedCharacterReference(e){let t=null,n=1,s=At(0,e);for(this.tempBuff.push(e);s>-1;){const e=g[s],r=e<7;r&&1&e&&(t=2&e?[g[++s],g[++s]]:[g[++s]],n=0);const i=this._consume();if(this.tempBuff.push(i),n++,i===P.EOF)break;s=r?4&e?At(s,i):-1:i===e?++s:-1;}for(;n--;)this.tempBuff.pop(),this._unconsume();return t}_isCharacterReferenceInAttribute(){return this.returnState===me||this.returnState===pe||this.returnState===Ae}_isCharacterReferenceAttributeQuirk(e){if(!e&&this._isCharacterReferenceInAttribute()){const e=this._consume();return this._unconsume(),e===P.EQUALS_SIGN||ht(e)}return !1}_flushCodePointsConsumedAsCharacterReference(){if(this._isCharacterReferenceInAttribute())for(let e=0;e<this.tempBuff.length;e++)this.currentAttr.value+=mt(this.tempBuff[e]);else this._emitSeveralCodePoints(this.tempBuff);this.tempBuff=[];}[F](e){this.preprocessor.dropParsedChunk(),e===P.LESS_THAN_SIGN?this.state=b:e===P.AMPERSAND?(this.returnState=F,this.state=qe):e===P.NULL?(this._err(a),this._emitCodePoint(e)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[U](e){this.preprocessor.dropParsedChunk(),e===P.AMPERSAND?(this.returnState=U,this.state=qe):e===P.LESS_THAN_SIGN?this.state=v:e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[G](e){this.preprocessor.dropParsedChunk(),e===P.LESS_THAN_SIGN?this.state=Q:e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[B](e){this.preprocessor.dropParsedChunk(),e===P.LESS_THAN_SIGN?this.state=V:e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[K](e){this.preprocessor.dropParsedChunk(),e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?this._emitEOFToken():this._emitCodePoint(e);}[b](e){e===P.EXCLAMATION_MARK?this.state=Ce:e===P.SOLIDUS?this.state=x:Et(e)?(this._createStartTagToken(),this._reconsumeInState(y)):e===P.QUESTION_MARK?(this._err("unexpected-question-mark-instead-of-tag-name"),this._createCommentToken(),this._reconsumeInState(de)):e===P.EOF?(this._err(h),this._emitChars("<"),this._emitEOFToken()):(this._err(T),this._emitChars("<"),this._reconsumeInState(F));}[x](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(y)):e===P.GREATER_THAN_SIGN?(this._err("missing-end-tag-name"),this.state=F):e===P.EOF?(this._err(h),this._emitChars("</"),this._emitEOFToken()):(this._err(T),this._createCommentToken(),this._reconsumeInState(de));}[y](e){it(e)?this.state=he:e===P.SOLIDUS?this.state=Ne:e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):at(e)?this.currentToken.tagName+=pt(e):e===P.NULL?(this._err(a),this.currentToken.tagName+=n):e===P.EOF?(this._err(c),this._emitEOFToken()):this.currentToken.tagName+=mt(e);}[v](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=Y):(this._emitChars("<"),this._reconsumeInState(U));}[Y](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(w)):(this._emitChars("</"),this._reconsumeInState(U));}[w](e){if(at(e))this.currentToken.tagName+=pt(e),this.tempBuff.push(e);else if(Tt(e))this.currentToken.tagName+=mt(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(it(e))return void(this.state=he);if(e===P.SOLIDUS)return void(this.state=Ne);if(e===P.GREATER_THAN_SIGN)return this.state=F,void this._emitCurrentToken()}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(U);}}[Q](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=X):(this._emitChars("<"),this._reconsumeInState(G));}[X](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(W)):(this._emitChars("</"),this._reconsumeInState(G));}[W](e){if(at(e))this.currentToken.tagName+=pt(e),this.tempBuff.push(e);else if(Tt(e))this.currentToken.tagName+=mt(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(it(e))return void(this.state=he);if(e===P.SOLIDUS)return void(this.state=Ne);if(e===P.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=F)}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(G);}}[V](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=j):e===P.EXCLAMATION_MARK?(this.state=q,this._emitChars("<!")):(this._emitChars("<"),this._reconsumeInState(B));}[j](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(z)):(this._emitChars("</"),this._reconsumeInState(B));}[z](e){if(at(e))this.currentToken.tagName+=pt(e),this.tempBuff.push(e);else if(Tt(e))this.currentToken.tagName+=mt(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(it(e))return void(this.state=he);if(e===P.SOLIDUS)return void(this.state=Ne);if(e===P.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=F)}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(B);}}[q](e){e===P.HYPHEN_MINUS?(this.state=J,this._emitChars("-")):this._reconsumeInState(B);}[J](e){e===P.HYPHEN_MINUS?(this.state=ee,this._emitChars("-")):this._reconsumeInState(B);}[Z](e){e===P.HYPHEN_MINUS?(this.state=$,this._emitChars("-")):e===P.LESS_THAN_SIGN?this.state=te:e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):this._emitCodePoint(e);}[$](e){e===P.HYPHEN_MINUS?(this.state=ee,this._emitChars("-")):e===P.LESS_THAN_SIGN?this.state=te:e===P.NULL?(this._err(a),this.state=Z,this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):(this.state=Z,this._emitCodePoint(e));}[ee](e){e===P.HYPHEN_MINUS?this._emitChars("-"):e===P.LESS_THAN_SIGN?this.state=te:e===P.GREATER_THAN_SIGN?(this.state=B,this._emitChars(">")):e===P.NULL?(this._err(a),this.state=Z,this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):(this.state=Z,this._emitCodePoint(e));}[te](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=ne):Et(e)?(this.tempBuff=[],this._emitChars("<"),this._reconsumeInState(re)):(this._emitChars("<"),this._reconsumeInState(Z));}[ne](e){Et(e)?(this._createEndTagToken(),this._reconsumeInState(se)):(this._emitChars("</"),this._reconsumeInState(Z));}[se](e){if(at(e))this.currentToken.tagName+=pt(e),this.tempBuff.push(e);else if(Tt(e))this.currentToken.tagName+=mt(e),this.tempBuff.push(e);else {if(this.lastStartTagName===this.currentToken.tagName){if(it(e))return void(this.state=he);if(e===P.SOLIDUS)return void(this.state=Ne);if(e===P.GREATER_THAN_SIGN)return this._emitCurrentToken(),void(this.state=F)}this._emitChars("</"),this._emitSeveralCodePoints(this.tempBuff),this._reconsumeInState(Z);}}[re](e){it(e)||e===P.SOLIDUS||e===P.GREATER_THAN_SIGN?(this.state=this._isTempBufferEqualToScriptString()?ie:Z,this._emitCodePoint(e)):at(e)?(this.tempBuff.push(lt(e)),this._emitCodePoint(e)):Tt(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState(Z);}[ie](e){e===P.HYPHEN_MINUS?(this.state=oe,this._emitChars("-")):e===P.LESS_THAN_SIGN?(this.state=Te,this._emitChars("<")):e===P.NULL?(this._err(a),this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):this._emitCodePoint(e);}[oe](e){e===P.HYPHEN_MINUS?(this.state=ae,this._emitChars("-")):e===P.LESS_THAN_SIGN?(this.state=Te,this._emitChars("<")):e===P.NULL?(this._err(a),this.state=ie,this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):(this.state=ie,this._emitCodePoint(e));}[ae](e){e===P.HYPHEN_MINUS?this._emitChars("-"):e===P.LESS_THAN_SIGN?(this.state=Te,this._emitChars("<")):e===P.GREATER_THAN_SIGN?(this.state=B,this._emitChars(">")):e===P.NULL?(this._err(a),this.state=ie,this._emitChars(n)):e===P.EOF?(this._err(O),this._emitEOFToken()):(this.state=ie,this._emitCodePoint(e));}[Te](e){e===P.SOLIDUS?(this.tempBuff=[],this.state=Ee,this._emitChars("/")):this._reconsumeInState(ie);}[Ee](e){it(e)||e===P.SOLIDUS||e===P.GREATER_THAN_SIGN?(this.state=this._isTempBufferEqualToScriptString()?Z:ie,this._emitCodePoint(e)):at(e)?(this.tempBuff.push(lt(e)),this._emitCodePoint(e)):Tt(e)?(this.tempBuff.push(e),this._emitCodePoint(e)):this._reconsumeInState(ie);}[he](e){it(e)||(e===P.SOLIDUS||e===P.GREATER_THAN_SIGN||e===P.EOF?this._reconsumeInState(_e):e===P.EQUALS_SIGN?(this._err("unexpected-equals-sign-before-attribute-name"),this._createAttr("="),this.state=ce):(this._createAttr(""),this._reconsumeInState(ce)));}[ce](e){it(e)||e===P.SOLIDUS||e===P.GREATER_THAN_SIGN||e===P.EOF?(this._leaveAttrName(_e),this._unconsume()):e===P.EQUALS_SIGN?this._leaveAttrName(le):at(e)?this.currentAttr.name+=pt(e):e===P.QUOTATION_MARK||e===P.APOSTROPHE||e===P.LESS_THAN_SIGN?(this._err("unexpected-character-in-attribute-name"),this.currentAttr.name+=mt(e)):e===P.NULL?(this._err(a),this.currentAttr.name+=n):this.currentAttr.name+=mt(e);}[_e](e){it(e)||(e===P.SOLIDUS?this.state=Ne:e===P.EQUALS_SIGN?this.state=le:e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(c),this._emitEOFToken()):(this._createAttr(""),this._reconsumeInState(ce)));}[le](e){it(e)||(e===P.QUOTATION_MARK?this.state=me:e===P.APOSTROPHE?this.state=pe:e===P.GREATER_THAN_SIGN?(this._err("missing-attribute-value"),this.state=F,this._emitCurrentToken()):this._reconsumeInState(Ae));}[me](e){e===P.QUOTATION_MARK?this.state=ue:e===P.AMPERSAND?(this.returnState=me,this.state=qe):e===P.NULL?(this._err(a),this.currentAttr.value+=n):e===P.EOF?(this._err(c),this._emitEOFToken()):this.currentAttr.value+=mt(e);}[pe](e){e===P.APOSTROPHE?this.state=ue:e===P.AMPERSAND?(this.returnState=pe,this.state=qe):e===P.NULL?(this._err(a),this.currentAttr.value+=n):e===P.EOF?(this._err(c),this._emitEOFToken()):this.currentAttr.value+=mt(e);}[Ae](e){it(e)?this._leaveAttrValue(he):e===P.AMPERSAND?(this.returnState=Ae,this.state=qe):e===P.GREATER_THAN_SIGN?(this._leaveAttrValue(F),this._emitCurrentToken()):e===P.NULL?(this._err(a),this.currentAttr.value+=n):e===P.QUOTATION_MARK||e===P.APOSTROPHE||e===P.LESS_THAN_SIGN||e===P.EQUALS_SIGN||e===P.GRAVE_ACCENT?(this._err("unexpected-character-in-unquoted-attribute-value"),this.currentAttr.value+=mt(e)):e===P.EOF?(this._err(c),this._emitEOFToken()):this.currentAttr.value+=mt(e);}[ue](e){it(e)?this._leaveAttrValue(he):e===P.SOLIDUS?this._leaveAttrValue(Ne):e===P.GREATER_THAN_SIGN?(this._leaveAttrValue(F),this._emitCurrentToken()):e===P.EOF?(this._err(c),this._emitEOFToken()):(this._err("missing-whitespace-between-attributes"),this._reconsumeInState(he));}[Ne](e){e===P.GREATER_THAN_SIGN?(this.currentToken.selfClosing=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(c),this._emitEOFToken()):(this._err("unexpected-solidus-in-tag"),this._reconsumeInState(he));}[de](e){e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.EOF?(this._emitCurrentToken(),this._emitEOFToken()):e===P.NULL?(this._err(a),this.currentToken.data+=n):this.currentToken.data+=mt(e);}[Ce](e){this._consumeSequenceIfMatch(H.DASH_DASH_STRING,e,!0)?(this._createCommentToken(),this.state=Oe):this._consumeSequenceIfMatch(H.DOCTYPE_STRING,e,!1)?this.state=He:this._consumeSequenceIfMatch(H.CDATA_START_STRING,e,!0)?this.allowCDATA?this.state=Ve:(this._err("cdata-in-html-content"),this._createCommentToken(),this.currentToken.data="[CDATA[",this.state=de):this._ensureHibernation()||(this._err("incorrectly-opened-comment"),this._createCommentToken(),this._reconsumeInState(de));}[Oe](e){e===P.HYPHEN_MINUS?this.state=fe:e===P.GREATER_THAN_SIGN?(this._err(S),this.state=F,this._emitCurrentToken()):this._reconsumeInState(Se);}[fe](e){e===P.HYPHEN_MINUS?this.state=ge:e===P.GREATER_THAN_SIGN?(this._err(S),this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="-",this._reconsumeInState(Se));}[Se](e){e===P.HYPHEN_MINUS?this.state=Me:e===P.LESS_THAN_SIGN?(this.currentToken.data+="<",this.state=Re):e===P.NULL?(this._err(a),this.currentToken.data+=n):e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.data+=mt(e);}[Re](e){e===P.EXCLAMATION_MARK?(this.currentToken.data+="!",this.state=Ie):e===P.LESS_THAN_SIGN?this.currentToken.data+="!":this._reconsumeInState(Se);}[Ie](e){e===P.HYPHEN_MINUS?this.state=Le:this._reconsumeInState(Se);}[Le](e){e===P.HYPHEN_MINUS?this.state=ke:this._reconsumeInState(Me);}[ke](e){e!==P.GREATER_THAN_SIGN&&e!==P.EOF&&this._err("nested-comment"),this._reconsumeInState(ge);}[Me](e){e===P.HYPHEN_MINUS?this.state=ge:e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="-",this._reconsumeInState(Se));}[ge](e){e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.EXCLAMATION_MARK?this.state=Pe:e===P.HYPHEN_MINUS?this.currentToken.data+="-":e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="--",this._reconsumeInState(Se));}[Pe](e){e===P.HYPHEN_MINUS?(this.currentToken.data+="--!",this.state=Me):e===P.GREATER_THAN_SIGN?(this._err("incorrectly-closed-comment"),this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(R),this._emitCurrentToken(),this._emitEOFToken()):(this.currentToken.data+="--!",this._reconsumeInState(Se));}[He](e){it(e)?this.state=De:e===P.GREATER_THAN_SIGN?this._reconsumeInState(De):e===P.EOF?(this._err(f),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err("missing-whitespace-before-doctype-name"),this._reconsumeInState(De));}[De](e){it(e)||(at(e)?(this._createDoctypeToken(pt(e)),this.state=Fe):e===P.NULL?(this._err(a),this._createDoctypeToken(n),this.state=Fe):e===P.GREATER_THAN_SIGN?(this._err("missing-doctype-name"),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this._createDoctypeToken(null),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._createDoctypeToken(mt(e)),this.state=Fe));}[Fe](e){it(e)?this.state=Ue:e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):at(e)?this.currentToken.name+=pt(e):e===P.NULL?(this._err(a),this.currentToken.name+=n):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.name+=mt(e);}[Ue](e){it(e)||(e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this._consumeSequenceIfMatch(H.PUBLIC_STRING,e,!1)?this.state=Ge:this._consumeSequenceIfMatch(H.SYSTEM_STRING,e,!1)?this.state=ve:this._ensureHibernation()||(this._err("invalid-character-sequence-after-doctype-name"),this.currentToken.forceQuirks=!0,this._reconsumeInState(We)));}[Ge](e){it(e)?this.state=Be:e===P.QUOTATION_MARK?(this._err(_),this.currentToken.publicId="",this.state=Ke):e===P.APOSTROPHE?(this._err(_),this.currentToken.publicId="",this.state=be):e===P.GREATER_THAN_SIGN?(this._err(u),this.currentToken.forceQuirks=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(p),this.currentToken.forceQuirks=!0,this._reconsumeInState(We));}[Be](e){it(e)||(e===P.QUOTATION_MARK?(this.currentToken.publicId="",this.state=Ke):e===P.APOSTROPHE?(this.currentToken.publicId="",this.state=be):e===P.GREATER_THAN_SIGN?(this._err(u),this.currentToken.forceQuirks=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(p),this.currentToken.forceQuirks=!0,this._reconsumeInState(We)));}[Ke](e){e===P.QUOTATION_MARK?this.state=xe:e===P.NULL?(this._err(a),this.currentToken.publicId+=n):e===P.GREATER_THAN_SIGN?(this._err(d),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.publicId+=mt(e);}[be](e){e===P.APOSTROPHE?this.state=xe:e===P.NULL?(this._err(a),this.currentToken.publicId+=n):e===P.GREATER_THAN_SIGN?(this._err(d),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.publicId+=mt(e);}[xe](e){it(e)?this.state=ye:e===P.GREATER_THAN_SIGN?(this.state=F,this._emitCurrentToken()):e===P.QUOTATION_MARK?(this._err(l),this.currentToken.systemId="",this.state=we):e===P.APOSTROPHE?(this._err(l),this.currentToken.systemId="",this.state=Qe):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(A),this.currentToken.forceQuirks=!0,this._reconsumeInState(We));}[ye](e){it(e)||(e===P.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=F):e===P.QUOTATION_MARK?(this.currentToken.systemId="",this.state=we):e===P.APOSTROPHE?(this.currentToken.systemId="",this.state=Qe):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(A),this.currentToken.forceQuirks=!0,this._reconsumeInState(We)));}[ve](e){it(e)?this.state=Ye:e===P.QUOTATION_MARK?(this._err(m),this.currentToken.systemId="",this.state=we):e===P.APOSTROPHE?(this._err(m),this.currentToken.systemId="",this.state=Qe):e===P.GREATER_THAN_SIGN?(this._err(N),this.currentToken.forceQuirks=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(A),this.currentToken.forceQuirks=!0,this._reconsumeInState(We));}[Ye](e){it(e)||(e===P.QUOTATION_MARK?(this.currentToken.systemId="",this.state=we):e===P.APOSTROPHE?(this.currentToken.systemId="",this.state=Qe):e===P.GREATER_THAN_SIGN?(this._err(N),this.currentToken.forceQuirks=!0,this.state=F,this._emitCurrentToken()):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err(A),this.currentToken.forceQuirks=!0,this._reconsumeInState(We)));}[we](e){e===P.QUOTATION_MARK?this.state=Xe:e===P.NULL?(this._err(a),this.currentToken.systemId+=n):e===P.GREATER_THAN_SIGN?(this._err(C),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.systemId+=mt(e);}[Qe](e){e===P.APOSTROPHE?this.state=Xe:e===P.NULL?(this._err(a),this.currentToken.systemId+=n):e===P.GREATER_THAN_SIGN?(this._err(C),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):this.currentToken.systemId+=mt(e);}[Xe](e){it(e)||(e===P.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=F):e===P.EOF?(this._err(f),this.currentToken.forceQuirks=!0,this._emitCurrentToken(),this._emitEOFToken()):(this._err("unexpected-character-after-doctype-system-identifier"),this._reconsumeInState(We)));}[We](e){e===P.GREATER_THAN_SIGN?(this._emitCurrentToken(),this.state=F):e===P.NULL?this._err(a):e===P.EOF&&(this._emitCurrentToken(),this._emitEOFToken());}[Ve](e){e===P.RIGHT_SQUARE_BRACKET?this.state=je:e===P.EOF?(this._err("eof-in-cdata"),this._emitEOFToken()):this._emitCodePoint(e);}[je](e){e===P.RIGHT_SQUARE_BRACKET?this.state=ze:(this._emitChars("]"),this._reconsumeInState(Ve));}[ze](e){e===P.GREATER_THAN_SIGN?this.state=F:e===P.RIGHT_SQUARE_BRACKET?this._emitChars("]"):(this._emitChars("]]"),this._reconsumeInState(Ve));}[qe](e){this.tempBuff=[P.AMPERSAND],e===P.NUMBER_SIGN?(this.tempBuff.push(e),this.state=$e):ht(e)?this._reconsumeInState(Je):(this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState));}[Je](e){const t=this._matchNamedCharacterReference(e);if(this._ensureHibernation())this.tempBuff=[P.AMPERSAND];else if(t){const e=this.tempBuff[this.tempBuff.length-1]===P.SEMICOLON;this._isCharacterReferenceAttributeQuirk(e)||(e||this._errOnNextCodePoint(E),this.tempBuff=t),this._flushCodePointsConsumedAsCharacterReference(),this.state=this.returnState;}else this._flushCodePointsConsumedAsCharacterReference(),this.state=Ze;}[Ze](e){ht(e)?this._isCharacterReferenceInAttribute()?this.currentAttr.value+=mt(e):this._emitCodePoint(e):(e===P.SEMICOLON&&this._err("unknown-named-character-reference"),this._reconsumeInState(this.returnState));}[$e](e){this.charRefCode=0,e===P.LATIN_SMALL_X||e===P.LATIN_CAPITAL_X?(this.tempBuff.push(e),this.state=et):this._reconsumeInState(tt);}[et](e){!function(e){return ot(e)||ct(e)||_t(e)}(e)?(this._err(I),this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState)):this._reconsumeInState(nt);}[tt](e){ot(e)?this._reconsumeInState(st):(this._err(I),this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState));}[nt](e){ct(e)?this.charRefCode=16*this.charRefCode+e-55:_t(e)?this.charRefCode=16*this.charRefCode+e-87:ot(e)?this.charRefCode=16*this.charRefCode+e-48:e===P.SEMICOLON?this.state=rt:(this._err(E),this._reconsumeInState(rt));}[st](e){ot(e)?this.charRefCode=10*this.charRefCode+e-48:e===P.SEMICOLON?this.state=rt:(this._err(E),this._reconsumeInState(rt));}[rt](){if(this.charRefCode===P.NULL)this._err("null-character-reference"),this.charRefCode=P.REPLACEMENT_CHARACTER;else if(this.charRefCode>1114111)this._err("character-reference-outside-unicode-range"),this.charRefCode=P.REPLACEMENT_CHARACTER;else if(r(this.charRefCode))this._err("surrogate-character-reference"),this.charRefCode=P.REPLACEMENT_CHARACTER;else if(o(this.charRefCode))this._err("noncharacter-character-reference");else if(i(this.charRefCode)||this.charRefCode===P.CARRIAGE_RETURN){this._err("control-character-reference");const e=D[this.charRefCode];e&&(this.charRefCode=e);}this.tempBuff=[this.charRefCode],this._flushCodePointsConsumedAsCharacterReference(),this._reconsumeInState(this.returnState);}}ut.CHARACTER_TOKEN="CHARACTER_TOKEN",ut.NULL_CHARACTER_TOKEN="NULL_CHARACTER_TOKEN",ut.WHITESPACE_CHARACTER_TOKEN="WHITESPACE_CHARACTER_TOKEN",ut.START_TAG_TOKEN="START_TAG_TOKEN",ut.END_TAG_TOKEN="END_TAG_TOKEN",ut.COMMENT_TOKEN="COMMENT_TOKEN",ut.DOCTYPE_TOKEN="DOCTYPE_TOKEN",ut.EOF_TOKEN="EOF_TOKEN",ut.HIBERNATION_TOKEN="HIBERNATION_TOKEN",ut.MODE={DATA:F,RCDATA:U,RAWTEXT:G,SCRIPT_DATA:B,PLAINTEXT:K},ut.getTokenAttr=function(e,t){for(let n=e.attrs.length-1;n>=0;n--)if(e.attrs[n].name===t)return e.attrs[n].value;return null};var Nt=ut;function dt(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}var Ct=dt((function(e,t){const n=t.NAMESPACES={HTML:"http://www.w3.org/1999/xhtml",MATHML:"http://www.w3.org/1998/Math/MathML",SVG:"http://www.w3.org/2000/svg",XLINK:"http://www.w3.org/1999/xlink",XML:"http://www.w3.org/XML/1998/namespace",XMLNS:"http://www.w3.org/2000/xmlns/"};t.ATTRS={TYPE:"type",ACTION:"action",ENCODING:"encoding",PROMPT:"prompt",NAME:"name",COLOR:"color",FACE:"face",SIZE:"size"},t.DOCUMENT_MODE={NO_QUIRKS:"no-quirks",QUIRKS:"quirks",LIMITED_QUIRKS:"limited-quirks"};const s=t.TAG_NAMES={A:"a",ADDRESS:"address",ANNOTATION_XML:"annotation-xml",APPLET:"applet",AREA:"area",ARTICLE:"article",ASIDE:"aside",B:"b",BASE:"base",BASEFONT:"basefont",BGSOUND:"bgsound",BIG:"big",BLOCKQUOTE:"blockquote",BODY:"body",BR:"br",BUTTON:"button",CAPTION:"caption",CENTER:"center",CODE:"code",COL:"col",COLGROUP:"colgroup",DD:"dd",DESC:"desc",DETAILS:"details",DIALOG:"dialog",DIR:"dir",DIV:"div",DL:"dl",DT:"dt",EM:"em",EMBED:"embed",FIELDSET:"fieldset",FIGCAPTION:"figcaption",FIGURE:"figure",FONT:"font",FOOTER:"footer",FOREIGN_OBJECT:"foreignObject",FORM:"form",FRAME:"frame",FRAMESET:"frameset",H1:"h1",H2:"h2",H3:"h3",H4:"h4",H5:"h5",H6:"h6",HEAD:"head",HEADER:"header",HGROUP:"hgroup",HR:"hr",HTML:"html",I:"i",IMG:"img",IMAGE:"image",INPUT:"input",IFRAME:"iframe",KEYGEN:"keygen",LABEL:"label",LI:"li",LINK:"link",LISTING:"listing",MAIN:"main",MALIGNMARK:"malignmark",MARQUEE:"marquee",MATH:"math",MENU:"menu",META:"meta",MGLYPH:"mglyph",MI:"mi",MO:"mo",MN:"mn",MS:"ms",MTEXT:"mtext",NAV:"nav",NOBR:"nobr",NOFRAMES:"noframes",NOEMBED:"noembed",NOSCRIPT:"noscript",OBJECT:"object",OL:"ol",OPTGROUP:"optgroup",OPTION:"option",P:"p",PARAM:"param",PLAINTEXT:"plaintext",PRE:"pre",RB:"rb",RP:"rp",RT:"rt",RTC:"rtc",RUBY:"ruby",S:"s",SCRIPT:"script",SECTION:"section",SELECT:"select",SOURCE:"source",SMALL:"small",SPAN:"span",STRIKE:"strike",STRONG:"strong",STYLE:"style",SUB:"sub",SUMMARY:"summary",SUP:"sup",TABLE:"table",TBODY:"tbody",TEMPLATE:"template",TEXTAREA:"textarea",TFOOT:"tfoot",TD:"td",TH:"th",THEAD:"thead",TITLE:"title",TR:"tr",TRACK:"track",TT:"tt",U:"u",UL:"ul",SVG:"svg",VAR:"var",WBR:"wbr",XMP:"xmp"};t.SPECIAL_ELEMENTS={[n.HTML]:{[s.ADDRESS]:!0,[s.APPLET]:!0,[s.AREA]:!0,[s.ARTICLE]:!0,[s.ASIDE]:!0,[s.BASE]:!0,[s.BASEFONT]:!0,[s.BGSOUND]:!0,[s.BLOCKQUOTE]:!0,[s.BODY]:!0,[s.BR]:!0,[s.BUTTON]:!0,[s.CAPTION]:!0,[s.CENTER]:!0,[s.COL]:!0,[s.COLGROUP]:!0,[s.DD]:!0,[s.DETAILS]:!0,[s.DIR]:!0,[s.DIV]:!0,[s.DL]:!0,[s.DT]:!0,[s.EMBED]:!0,[s.FIELDSET]:!0,[s.FIGCAPTION]:!0,[s.FIGURE]:!0,[s.FOOTER]:!0,[s.FORM]:!0,[s.FRAME]:!0,[s.FRAMESET]:!0,[s.H1]:!0,[s.H2]:!0,[s.H3]:!0,[s.H4]:!0,[s.H5]:!0,[s.H6]:!0,[s.HEAD]:!0,[s.HEADER]:!0,[s.HGROUP]:!0,[s.HR]:!0,[s.HTML]:!0,[s.IFRAME]:!0,[s.IMG]:!0,[s.INPUT]:!0,[s.LI]:!0,[s.LINK]:!0,[s.LISTING]:!0,[s.MAIN]:!0,[s.MARQUEE]:!0,[s.MENU]:!0,[s.META]:!0,[s.NAV]:!0,[s.NOEMBED]:!0,[s.NOFRAMES]:!0,[s.NOSCRIPT]:!0,[s.OBJECT]:!0,[s.OL]:!0,[s.P]:!0,[s.PARAM]:!0,[s.PLAINTEXT]:!0,[s.PRE]:!0,[s.SCRIPT]:!0,[s.SECTION]:!0,[s.SELECT]:!0,[s.SOURCE]:!0,[s.STYLE]:!0,[s.SUMMARY]:!0,[s.TABLE]:!0,[s.TBODY]:!0,[s.TD]:!0,[s.TEMPLATE]:!0,[s.TEXTAREA]:!0,[s.TFOOT]:!0,[s.TH]:!0,[s.THEAD]:!0,[s.TITLE]:!0,[s.TR]:!0,[s.TRACK]:!0,[s.UL]:!0,[s.WBR]:!0,[s.XMP]:!0},[n.MATHML]:{[s.MI]:!0,[s.MO]:!0,[s.MN]:!0,[s.MS]:!0,[s.MTEXT]:!0,[s.ANNOTATION_XML]:!0},[n.SVG]:{[s.TITLE]:!0,[s.FOREIGN_OBJECT]:!0,[s.DESC]:!0}};}));const Ot=Ct.TAG_NAMES,ft=Ct.NAMESPACES;function St(e){switch(e.length){case 1:return e===Ot.P;case 2:return e===Ot.RB||e===Ot.RP||e===Ot.RT||e===Ot.DD||e===Ot.DT||e===Ot.LI;case 3:return e===Ot.RTC;case 6:return e===Ot.OPTION;case 8:return e===Ot.OPTGROUP}return !1}function Rt(e){switch(e.length){case 1:return e===Ot.P;case 2:return e===Ot.RB||e===Ot.RP||e===Ot.RT||e===Ot.DD||e===Ot.DT||e===Ot.LI||e===Ot.TD||e===Ot.TH||e===Ot.TR;case 3:return e===Ot.RTC;case 5:return e===Ot.TBODY||e===Ot.TFOOT||e===Ot.THEAD;case 6:return e===Ot.OPTION;case 7:return e===Ot.CAPTION;case 8:return e===Ot.OPTGROUP||e===Ot.COLGROUP}return !1}function It(e,t){switch(e.length){case 2:if(e===Ot.TD||e===Ot.TH)return t===ft.HTML;if(e===Ot.MI||e===Ot.MO||e===Ot.MN||e===Ot.MS)return t===ft.MATHML;break;case 4:if(e===Ot.HTML)return t===ft.HTML;if(e===Ot.DESC)return t===ft.SVG;break;case 5:if(e===Ot.TABLE)return t===ft.HTML;if(e===Ot.MTEXT)return t===ft.MATHML;if(e===Ot.TITLE)return t===ft.SVG;break;case 6:return (e===Ot.APPLET||e===Ot.OBJECT)&&t===ft.HTML;case 7:return (e===Ot.CAPTION||e===Ot.MARQUEE)&&t===ft.HTML;case 8:return e===Ot.TEMPLATE&&t===ft.HTML;case 13:return e===Ot.FOREIGN_OBJECT&&t===ft.SVG;case 14:return e===Ot.ANNOTATION_XML&&t===ft.MATHML}return !1}class Lt{constructor(e){this.length=0,this.entries=[],this.treeAdapter=e,this.bookmark=null;}_getNoahArkConditionCandidates(e){const t=[];if(this.length>=3){const n=this.treeAdapter.getAttrList(e).length,s=this.treeAdapter.getTagName(e),r=this.treeAdapter.getNamespaceURI(e);for(let e=this.length-1;e>=0;e--){const i=this.entries[e];if(i.type===Lt.MARKER_ENTRY)break;const o=i.element,a=this.treeAdapter.getAttrList(o);this.treeAdapter.getTagName(o)===s&&this.treeAdapter.getNamespaceURI(o)===r&&a.length===n&&t.push({idx:e,attrs:a});}}return t.length<3?[]:t}_ensureNoahArkCondition(e){const t=this._getNoahArkConditionCandidates(e);let n=t.length;if(n){const s=this.treeAdapter.getAttrList(e),r=s.length,i=Object.create(null);for(let e=0;e<r;e++){const t=s[e];i[t.name]=t.value;}for(let e=0;e<r;e++)for(let s=0;s<n;s++){const r=t[s].attrs[e];if(i[r.name]!==r.value&&(t.splice(s,1),n--),t.length<3)return}for(let e=n-1;e>=2;e--)this.entries.splice(t[e].idx,1),this.length--;}}insertMarker(){this.entries.push({type:Lt.MARKER_ENTRY}),this.length++;}pushElement(e,t){this._ensureNoahArkCondition(e),this.entries.push({type:Lt.ELEMENT_ENTRY,element:e,token:t}),this.length++;}insertElementAfterBookmark(e,t){let n=this.length-1;for(;n>=0&&this.entries[n]!==this.bookmark;n--);this.entries.splice(n+1,0,{type:Lt.ELEMENT_ENTRY,element:e,token:t}),this.length++;}removeEntry(e){for(let t=this.length-1;t>=0;t--)if(this.entries[t]===e){this.entries.splice(t,1),this.length--;break}}clearToLastMarker(){for(;this.length;){const e=this.entries.pop();if(this.length--,e.type===Lt.MARKER_ENTRY)break}}getElementEntryInScopeWithTagName(e){for(let t=this.length-1;t>=0;t--){const n=this.entries[t];if(n.type===Lt.MARKER_ENTRY)return null;if(this.treeAdapter.getTagName(n.element)===e)return n}return null}getElementEntry(e){for(let t=this.length-1;t>=0;t--){const n=this.entries[t];if(n.type===Lt.ELEMENT_ENTRY&&n.element===e)return n}return null}}Lt.MARKER_ENTRY="MARKER_ENTRY",Lt.ELEMENT_ENTRY="ELEMENT_ENTRY";var kt=Lt;class Mt{constructor(e){const t={},n=this._getOverriddenMethods(this,t);for(const s of Object.keys(n))"function"==typeof n[s]&&(t[s]=e[s],e[s]=n[s]);}_getOverriddenMethods(){throw new Error("Not implemented")}}Mt.install=function(e,t,n){e.__mixins||(e.__mixins=[]);for(let n=0;n<e.__mixins.length;n++)if(e.__mixins[n].constructor===t)return e.__mixins[n];const s=new t(e,n);return e.__mixins.push(s),s};var gt=Mt,Pt=class extends gt{constructor(e){super(e),this.preprocessor=e,this.isEol=!1,this.lineStartPos=0,this.droppedBufferSize=0,this.offset=0,this.col=0,this.line=1;}_getOverriddenMethods(e,t){return {advance(){const n=this.pos+1,s=this.html[n];return e.isEol&&(e.isEol=!1,e.line++,e.lineStartPos=n),("\n"===s||"\r"===s&&"\n"!==this.html[n+1])&&(e.isEol=!0),e.col=n-e.lineStartPos+1,e.offset=e.droppedBufferSize+n,t.advance.call(this)},retreat(){t.retreat.call(this),e.isEol=!1,e.col=this.pos-e.lineStartPos+1;},dropParsedChunk(){const n=this.pos;t.dropParsedChunk.call(this);const s=n-this.pos;e.lineStartPos-=s,e.droppedBufferSize+=s,e.offset=e.droppedBufferSize+this.pos;}}}},Ht=class extends gt{constructor(e){super(e),this.tokenizer=e,this.posTracker=gt.install(e.preprocessor,Pt),this.currentAttrLocation=null,this.ctLoc=null;}_getCurrentLocation(){return {startLine:this.posTracker.line,startCol:this.posTracker.col,startOffset:this.posTracker.offset,endLine:-1,endCol:-1,endOffset:-1}}_attachCurrentAttrLocationInfo(){this.currentAttrLocation.endLine=this.posTracker.line,this.currentAttrLocation.endCol=this.posTracker.col,this.currentAttrLocation.endOffset=this.posTracker.offset;const e=this.tokenizer.currentToken,t=this.tokenizer.currentAttr;e.location.attrs||(e.location.attrs=Object.create(null)),e.location.attrs[t.name]=this.currentAttrLocation;}_getOverriddenMethods(e,t){const n={_createStartTagToken(){t._createStartTagToken.call(this),this.currentToken.location=e.ctLoc;},_createEndTagToken(){t._createEndTagToken.call(this),this.currentToken.location=e.ctLoc;},_createCommentToken(){t._createCommentToken.call(this),this.currentToken.location=e.ctLoc;},_createDoctypeToken(n){t._createDoctypeToken.call(this,n),this.currentToken.location=e.ctLoc;},_createCharacterToken(n,s){t._createCharacterToken.call(this,n,s),this.currentCharacterToken.location=e.ctLoc;},_createEOFToken(){t._createEOFToken.call(this),this.currentToken.location=e._getCurrentLocation();},_createAttr(n){t._createAttr.call(this,n),e.currentAttrLocation=e._getCurrentLocation();},_leaveAttrName(n){t._leaveAttrName.call(this,n),e._attachCurrentAttrLocationInfo();},_leaveAttrValue(n){t._leaveAttrValue.call(this,n),e._attachCurrentAttrLocationInfo();},_emitCurrentToken(){const n=this.currentToken.location;this.currentCharacterToken&&(this.currentCharacterToken.location.endLine=n.startLine,this.currentCharacterToken.location.endCol=n.startCol,this.currentCharacterToken.location.endOffset=n.startOffset),this.currentToken.type===Nt.EOF_TOKEN?(n.endLine=n.startLine,n.endCol=n.startCol,n.endOffset=n.startOffset):(n.endLine=e.posTracker.line,n.endCol=e.posTracker.col+1,n.endOffset=e.posTracker.offset+1),t._emitCurrentToken.call(this);},_emitCurrentCharacterToken(){const n=this.currentCharacterToken&&this.currentCharacterToken.location;n&&-1===n.endOffset&&(n.endLine=e.posTracker.line,n.endCol=e.posTracker.col,n.endOffset=e.posTracker.offset),t._emitCurrentCharacterToken.call(this);}};return Object.keys(Nt.MODE).forEach((s=>{const r=Nt.MODE[s];n[r]=function(n){e.ctLoc=e._getCurrentLocation(),t[r].call(this,n);};})),n}},Dt=class extends gt{constructor(e,t){super(e),this.onItemPop=t.onItemPop;}_getOverriddenMethods(e,t){return {pop(){e.onItemPop(this.current),t.pop.call(this);},popAllUpToHtmlElement(){for(let t=this.stackTop;t>0;t--)e.onItemPop(this.items[t]);t.popAllUpToHtmlElement.call(this);},remove(n){e.onItemPop(this.current),t.remove.call(this,n);}}}};const Ft=Ct.TAG_NAMES;var Ut=class extends gt{constructor(e){super(e),this.parser=e,this.treeAdapter=this.parser.treeAdapter,this.posTracker=null,this.lastStartTagToken=null,this.lastFosterParentingLocation=null,this.currentToken=null;}_setStartLocation(e){let t=null;this.lastStartTagToken&&(t=Object.assign({},this.lastStartTagToken.location),t.startTag=this.lastStartTagToken.location),this.treeAdapter.setNodeSourceCodeLocation(e,t);}_setEndLocation(e,t){if(this.treeAdapter.getNodeSourceCodeLocation(e)&&t.location){const n=t.location,s=this.treeAdapter.getTagName(e),r={};t.type===Nt.END_TAG_TOKEN&&s===t.tagName?(r.endTag=Object.assign({},n),r.endLine=n.endLine,r.endCol=n.endCol,r.endOffset=n.endOffset):(r.endLine=n.startLine,r.endCol=n.startCol,r.endOffset=n.startOffset),this.treeAdapter.updateNodeSourceCodeLocation(e,r);}}_getOverriddenMethods(e,t){return {_bootstrap(n,s){t._bootstrap.call(this,n,s),e.lastStartTagToken=null,e.lastFosterParentingLocation=null,e.currentToken=null;const r=gt.install(this.tokenizer,Ht);e.posTracker=r.posTracker,gt.install(this.openElements,Dt,{onItemPop:function(t){e._setEndLocation(t,e.currentToken);}});},_runParsingLoop(n){t._runParsingLoop.call(this,n);for(let t=this.openElements.stackTop;t>=0;t--)e._setEndLocation(this.openElements.items[t],e.currentToken);},_processTokenInForeignContent(n){e.currentToken=n,t._processTokenInForeignContent.call(this,n);},_processToken(n){if(e.currentToken=n,t._processToken.call(this,n),n.type===Nt.END_TAG_TOKEN&&(n.tagName===Ft.HTML||n.tagName===Ft.BODY&&this.openElements.hasInScope(Ft.BODY)))for(let t=this.openElements.stackTop;t>=0;t--){const s=this.openElements.items[t];if(this.treeAdapter.getTagName(s)===n.tagName){e._setEndLocation(s,n);break}}},_setDocumentType(e){t._setDocumentType.call(this,e);const n=this.treeAdapter.getChildNodes(this.document),s=n.length;for(let t=0;t<s;t++){const s=n[t];if(this.treeAdapter.isDocumentTypeNode(s)){this.treeAdapter.setNodeSourceCodeLocation(s,e.location);break}}},_attachElementToTree(n){e._setStartLocation(n),e.lastStartTagToken=null,t._attachElementToTree.call(this,n);},_appendElement(n,s){e.lastStartTagToken=n,t._appendElement.call(this,n,s);},_insertElement(n,s){e.lastStartTagToken=n,t._insertElement.call(this,n,s);},_insertTemplate(n){e.lastStartTagToken=n,t._insertTemplate.call(this,n);const s=this.treeAdapter.getTemplateContent(this.openElements.current);this.treeAdapter.setNodeSourceCodeLocation(s,null);},_insertFakeRootElement(){t._insertFakeRootElement.call(this),this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current,null);},_appendCommentNode(e,n){t._appendCommentNode.call(this,e,n);const s=this.treeAdapter.getChildNodes(n),r=s[s.length-1];this.treeAdapter.setNodeSourceCodeLocation(r,e.location);},_findFosterParentingLocation(){return e.lastFosterParentingLocation=t._findFosterParentingLocation.call(this),e.lastFosterParentingLocation},_insertCharacters(n){t._insertCharacters.call(this,n);const s=this._shouldFosterParentOnInsertion(),r=s&&e.lastFosterParentingLocation.parent||this.openElements.currentTmplContent||this.openElements.current,i=this.treeAdapter.getChildNodes(r),o=s&&e.lastFosterParentingLocation.beforeElement?i.indexOf(e.lastFosterParentingLocation.beforeElement)-1:i.length-1,a=i[o];if(this.treeAdapter.getNodeSourceCodeLocation(a)){const{endLine:e,endCol:t,endOffset:s}=n.location;this.treeAdapter.updateNodeSourceCodeLocation(a,{endLine:e,endCol:t,endOffset:s});}else this.treeAdapter.setNodeSourceCodeLocation(a,n.location);}}}},Gt=class extends gt{constructor(e,t){super(e),this.posTracker=null,this.onParseError=t.onParseError;}_setErrorLocation(e){e.startLine=e.endLine=this.posTracker.line,e.startCol=e.endCol=this.posTracker.col,e.startOffset=e.endOffset=this.posTracker.offset;}_reportError(e){const t={code:e,startLine:-1,startCol:-1,startOffset:-1,endLine:-1,endCol:-1,endOffset:-1};this._setErrorLocation(t),this.onParseError(t);}_getOverriddenMethods(e){return {_err(t){e._reportError(t);}}}},Bt=class extends Gt{constructor(e,t){super(e,t),this.posTracker=gt.install(e,Pt),this.lastErrOffset=-1;}_reportError(e){this.lastErrOffset!==this.posTracker.offset&&(this.lastErrOffset=this.posTracker.offset,super._reportError(e));}},Kt=class extends Gt{constructor(e,t){super(e,t);const n=gt.install(e.preprocessor,Bt,t);this.posTracker=n.posTracker;}},bt=class extends Gt{constructor(e,t){super(e,t),this.opts=t,this.ctLoc=null,this.locBeforeToken=!1;}_setErrorLocation(e){this.ctLoc&&(e.startLine=this.ctLoc.startLine,e.startCol=this.ctLoc.startCol,e.startOffset=this.ctLoc.startOffset,e.endLine=this.locBeforeToken?this.ctLoc.startLine:this.ctLoc.endLine,e.endCol=this.locBeforeToken?this.ctLoc.startCol:this.ctLoc.endCol,e.endOffset=this.locBeforeToken?this.ctLoc.startOffset:this.ctLoc.endOffset);}_getOverriddenMethods(e,t){return {_bootstrap(n,s){t._bootstrap.call(this,n,s),gt.install(this.tokenizer,Kt,e.opts),gt.install(this.tokenizer,Ht);},_processInputToken(n){e.ctLoc=n.location,t._processInputToken.call(this,n);},_err(t,n){e.locBeforeToken=n&&n.beforeToken,e._reportError(t);}}}},xt=dt((function(e,t){const{DOCUMENT_MODE:n}=Ct;t.createDocument=function(){return {nodeName:"#document",mode:n.NO_QUIRKS,childNodes:[]}},t.createDocumentFragment=function(){return {nodeName:"#document-fragment",childNodes:[]}},t.createElement=function(e,t,n){return {nodeName:e,tagName:e,attrs:n,namespaceURI:t,childNodes:[],parentNode:null}},t.createCommentNode=function(e){return {nodeName:"#comment",data:e,parentNode:null}};const s=function(e){return {nodeName:"#text",value:e,parentNode:null}},r=t.appendChild=function(e,t){e.childNodes.push(t),t.parentNode=e;},i=t.insertBefore=function(e,t,n){const s=e.childNodes.indexOf(n);e.childNodes.splice(s,0,t),t.parentNode=e;};t.setTemplateContent=function(e,t){e.content=t;},t.getTemplateContent=function(e){return e.content},t.setDocumentType=function(e,t,n,s){let i=null;for(let t=0;t<e.childNodes.length;t++)if("#documentType"===e.childNodes[t].nodeName){i=e.childNodes[t];break}i?(i.name=t,i.publicId=n,i.systemId=s):r(e,{nodeName:"#documentType",name:t,publicId:n,systemId:s});},t.setDocumentMode=function(e,t){e.mode=t;},t.getDocumentMode=function(e){return e.mode},t.detachNode=function(e){if(e.parentNode){const t=e.parentNode.childNodes.indexOf(e);e.parentNode.childNodes.splice(t,1),e.parentNode=null;}},t.insertText=function(e,t){if(e.childNodes.length){const n=e.childNodes[e.childNodes.length-1];if("#text"===n.nodeName)return void(n.value+=t)}r(e,s(t));},t.insertTextBefore=function(e,t,n){const r=e.childNodes[e.childNodes.indexOf(n)-1];r&&"#text"===r.nodeName?r.value+=t:i(e,s(t),n);},t.adoptAttributes=function(e,t){const n=[];for(let t=0;t<e.attrs.length;t++)n.push(e.attrs[t].name);for(let s=0;s<t.length;s++)-1===n.indexOf(t[s].name)&&e.attrs.push(t[s]);},t.getFirstChild=function(e){return e.childNodes[0]},t.getChildNodes=function(e){return e.childNodes},t.getParentNode=function(e){return e.parentNode},t.getAttrList=function(e){return e.attrs},t.getTagName=function(e){return e.tagName},t.getNamespaceURI=function(e){return e.namespaceURI},t.getTextNodeContent=function(e){return e.value},t.getCommentNodeContent=function(e){return e.data},t.getDocumentTypeNodeName=function(e){return e.name},t.getDocumentTypeNodePublicId=function(e){return e.publicId},t.getDocumentTypeNodeSystemId=function(e){return e.systemId},t.isTextNode=function(e){return "#text"===e.nodeName},t.isCommentNode=function(e){return "#comment"===e.nodeName},t.isDocumentTypeNode=function(e){return "#documentType"===e.nodeName},t.isElementNode=function(e){return !!e.tagName},t.setNodeSourceCodeLocation=function(e,t){e.sourceCodeLocation=t;},t.getNodeSourceCodeLocation=function(e){return e.sourceCodeLocation},t.updateNodeSourceCodeLocation=function(e,t){e.sourceCodeLocation=Object.assign(e.sourceCodeLocation,t);};}));const{DOCUMENT_MODE:yt}=Ct,vt="html",Yt=["+//silmaril//dtd html pro v0r11 19970101//","-//as//dtd html 3.0 aswedit + extensions//","-//advasoft ltd//dtd html 3.0 aswedit + extensions//","-//ietf//dtd html 2.0 level 1//","-//ietf//dtd html 2.0 level 2//","-//ietf//dtd html 2.0 strict level 1//","-//ietf//dtd html 2.0 strict level 2//","-//ietf//dtd html 2.0 strict//","-//ietf//dtd html 2.0//","-//ietf//dtd html 2.1e//","-//ietf//dtd html 3.0//","-//ietf//dtd html 3.2 final//","-//ietf//dtd html 3.2//","-//ietf//dtd html 3//","-//ietf//dtd html level 0//","-//ietf//dtd html level 1//","-//ietf//dtd html level 2//","-//ietf//dtd html level 3//","-//ietf//dtd html strict level 0//","-//ietf//dtd html strict level 1//","-//ietf//dtd html strict level 2//","-//ietf//dtd html strict level 3//","-//ietf//dtd html strict//","-//ietf//dtd html//","-//metrius//dtd metrius presentational//","-//microsoft//dtd internet explorer 2.0 html strict//","-//microsoft//dtd internet explorer 2.0 html//","-//microsoft//dtd internet explorer 2.0 tables//","-//microsoft//dtd internet explorer 3.0 html strict//","-//microsoft//dtd internet explorer 3.0 html//","-//microsoft//dtd internet explorer 3.0 tables//","-//netscape comm. corp.//dtd html//","-//netscape comm. corp.//dtd strict html//","-//o'reilly and associates//dtd html 2.0//","-//o'reilly and associates//dtd html extended 1.0//","-//o'reilly and associates//dtd html extended relaxed 1.0//","-//sq//dtd html 2.0 hotmetal + extensions//","-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//","-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//","-//spyglass//dtd html 2.0 extended//","-//sun microsystems corp.//dtd hotjava html//","-//sun microsystems corp.//dtd hotjava strict html//","-//w3c//dtd html 3 1995-03-24//","-//w3c//dtd html 3.2 draft//","-//w3c//dtd html 3.2 final//","-//w3c//dtd html 3.2//","-//w3c//dtd html 3.2s draft//","-//w3c//dtd html 4.0 frameset//","-//w3c//dtd html 4.0 transitional//","-//w3c//dtd html experimental 19960712//","-//w3c//dtd html experimental 970421//","-//w3c//dtd w3 html//","-//w3o//dtd w3 html 3.0//","-//webtechs//dtd mozilla html 2.0//","-//webtechs//dtd mozilla html//"],wt=Yt.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]),Qt=["-//w3o//dtd w3 html strict 3.0//en//","-/w3c/dtd html 4.0 transitional/en","html"],Xt=["-//w3c//dtd xhtml 1.0 frameset//","-//w3c//dtd xhtml 1.0 transitional//"],Wt=Xt.concat(["-//w3c//dtd html 4.01 frameset//","-//w3c//dtd html 4.01 transitional//"]);function Vt(e,t){for(let n=0;n<t.length;n++)if(0===e.indexOf(t[n]))return !0;return !1}var jt=dt((function(e,t){const n=Ct.TAG_NAMES,s=Ct.NAMESPACES,r=Ct.ATTRS,i={attributename:"attributeName",attributetype:"attributeType",basefrequency:"baseFrequency",baseprofile:"baseProfile",calcmode:"calcMode",clippathunits:"clipPathUnits",diffuseconstant:"diffuseConstant",edgemode:"edgeMode",filterunits:"filterUnits",glyphref:"glyphRef",gradienttransform:"gradientTransform",gradientunits:"gradientUnits",kernelmatrix:"kernelMatrix",kernelunitlength:"kernelUnitLength",keypoints:"keyPoints",keysplines:"keySplines",keytimes:"keyTimes",lengthadjust:"lengthAdjust",limitingconeangle:"limitingConeAngle",markerheight:"markerHeight",markerunits:"markerUnits",markerwidth:"markerWidth",maskcontentunits:"maskContentUnits",maskunits:"maskUnits",numoctaves:"numOctaves",pathlength:"pathLength",patterncontentunits:"patternContentUnits",patterntransform:"patternTransform",patternunits:"patternUnits",pointsatx:"pointsAtX",pointsaty:"pointsAtY",pointsatz:"pointsAtZ",preservealpha:"preserveAlpha",preserveaspectratio:"preserveAspectRatio",primitiveunits:"primitiveUnits",refx:"refX",refy:"refY",repeatcount:"repeatCount",repeatdur:"repeatDur",requiredextensions:"requiredExtensions",requiredfeatures:"requiredFeatures",specularconstant:"specularConstant",specularexponent:"specularExponent",spreadmethod:"spreadMethod",startoffset:"startOffset",stddeviation:"stdDeviation",stitchtiles:"stitchTiles",surfacescale:"surfaceScale",systemlanguage:"systemLanguage",tablevalues:"tableValues",targetx:"targetX",targety:"targetY",textlength:"textLength",viewbox:"viewBox",viewtarget:"viewTarget",xchannelselector:"xChannelSelector",ychannelselector:"yChannelSelector",zoomandpan:"zoomAndPan"},o={"xlink:actuate":{prefix:"xlink",name:"actuate",namespace:s.XLINK},"xlink:arcrole":{prefix:"xlink",name:"arcrole",namespace:s.XLINK},"xlink:href":{prefix:"xlink",name:"href",namespace:s.XLINK},"xlink:role":{prefix:"xlink",name:"role",namespace:s.XLINK},"xlink:show":{prefix:"xlink",name:"show",namespace:s.XLINK},"xlink:title":{prefix:"xlink",name:"title",namespace:s.XLINK},"xlink:type":{prefix:"xlink",name:"type",namespace:s.XLINK},"xml:base":{prefix:"xml",name:"base",namespace:s.XML},"xml:lang":{prefix:"xml",name:"lang",namespace:s.XML},"xml:space":{prefix:"xml",name:"space",namespace:s.XML},xmlns:{prefix:"",name:"xmlns",namespace:s.XMLNS},"xmlns:xlink":{prefix:"xmlns",name:"xlink",namespace:s.XMLNS}},a=t.SVG_TAG_NAMES_ADJUSTMENT_MAP={altglyph:"altGlyph",altglyphdef:"altGlyphDef",altglyphitem:"altGlyphItem",animatecolor:"animateColor",animatemotion:"animateMotion",animatetransform:"animateTransform",clippath:"clipPath",feblend:"feBlend",fecolormatrix:"feColorMatrix",fecomponenttransfer:"feComponentTransfer",fecomposite:"feComposite",feconvolvematrix:"feConvolveMatrix",fediffuselighting:"feDiffuseLighting",fedisplacementmap:"feDisplacementMap",fedistantlight:"feDistantLight",feflood:"feFlood",fefunca:"feFuncA",fefuncb:"feFuncB",fefuncg:"feFuncG",fefuncr:"feFuncR",fegaussianblur:"feGaussianBlur",feimage:"feImage",femerge:"feMerge",femergenode:"feMergeNode",femorphology:"feMorphology",feoffset:"feOffset",fepointlight:"fePointLight",fespecularlighting:"feSpecularLighting",fespotlight:"feSpotLight",fetile:"feTile",feturbulence:"feTurbulence",foreignobject:"foreignObject",glyphref:"glyphRef",lineargradient:"linearGradient",radialgradient:"radialGradient",textpath:"textPath"},T={[n.B]:!0,[n.BIG]:!0,[n.BLOCKQUOTE]:!0,[n.BODY]:!0,[n.BR]:!0,[n.CENTER]:!0,[n.CODE]:!0,[n.DD]:!0,[n.DIV]:!0,[n.DL]:!0,[n.DT]:!0,[n.EM]:!0,[n.EMBED]:!0,[n.H1]:!0,[n.H2]:!0,[n.H3]:!0,[n.H4]:!0,[n.H5]:!0,[n.H6]:!0,[n.HEAD]:!0,[n.HR]:!0,[n.I]:!0,[n.IMG]:!0,[n.LI]:!0,[n.LISTING]:!0,[n.MENU]:!0,[n.META]:!0,[n.NOBR]:!0,[n.OL]:!0,[n.P]:!0,[n.PRE]:!0,[n.RUBY]:!0,[n.S]:!0,[n.SMALL]:!0,[n.SPAN]:!0,[n.STRONG]:!0,[n.STRIKE]:!0,[n.SUB]:!0,[n.SUP]:!0,[n.TABLE]:!0,[n.TT]:!0,[n.U]:!0,[n.UL]:!0,[n.VAR]:!0};t.causesExit=function(e){const t=e.tagName;return !(t!==n.FONT||null===Nt.getTokenAttr(e,r.COLOR)&&null===Nt.getTokenAttr(e,r.SIZE)&&null===Nt.getTokenAttr(e,r.FACE))||T[t]},t.adjustTokenMathMLAttrs=function(e){for(let t=0;t<e.attrs.length;t++)if("definitionurl"===e.attrs[t].name){e.attrs[t].name="definitionURL";break}},t.adjustTokenSVGAttrs=function(e){for(let t=0;t<e.attrs.length;t++){const n=i[e.attrs[t].name];n&&(e.attrs[t].name=n);}},t.adjustTokenXMLAttrs=function(e){for(let t=0;t<e.attrs.length;t++){const n=o[e.attrs[t].name];n&&(e.attrs[t].prefix=n.prefix,e.attrs[t].name=n.name,e.attrs[t].namespace=n.namespace);}},t.adjustTokenSVGTagName=function(e){const t=a[e.tagName];t&&(e.tagName=t);},t.isIntegrationPoint=function(e,t,i,o){return !(o&&o!==s.HTML||!function(e,t,i){if(t===s.MATHML&&e===n.ANNOTATION_XML)for(let e=0;e<i.length;e++)if(i[e].name===r.ENCODING){const t=i[e].value.toLowerCase();return "text/html"===t||"application/xhtml+xml"===t}return t===s.SVG&&(e===n.FOREIGN_OBJECT||e===n.DESC||e===n.TITLE)}(e,t,i))||!(o&&o!==s.MATHML||!function(e,t){return t===s.MATHML&&(e===n.MI||e===n.MO||e===n.MN||e===n.MS||e===n.MTEXT)}(e,t))};}));const zt=Ct.TAG_NAMES,qt=Ct.NAMESPACES,Jt=Ct.ATTRS,Zt={scriptingEnabled:!0,sourceCodeLocationInfo:!1,onParseError:null,treeAdapter:xt},$t="hidden",en="INITIAL_MODE",tn="BEFORE_HTML_MODE",nn="BEFORE_HEAD_MODE",sn="IN_HEAD_MODE",rn="IN_HEAD_NO_SCRIPT_MODE",on="AFTER_HEAD_MODE",an="IN_BODY_MODE",Tn="TEXT_MODE",En="IN_TABLE_MODE",hn="IN_TABLE_TEXT_MODE",cn="IN_CAPTION_MODE",_n="IN_COLUMN_GROUP_MODE",ln="IN_TABLE_BODY_MODE",mn="IN_ROW_MODE",pn="IN_CELL_MODE",An="IN_SELECT_MODE",un="IN_SELECT_IN_TABLE_MODE",Nn="IN_TEMPLATE_MODE",dn="AFTER_BODY_MODE",Cn="IN_FRAMESET_MODE",On="AFTER_FRAMESET_MODE",fn="AFTER_AFTER_BODY_MODE",Sn="AFTER_AFTER_FRAMESET_MODE",Rn={[zt.TR]:mn,[zt.TBODY]:ln,[zt.THEAD]:ln,[zt.TFOOT]:ln,[zt.CAPTION]:cn,[zt.COLGROUP]:_n,[zt.TABLE]:En,[zt.BODY]:an,[zt.FRAMESET]:Cn},In={[zt.CAPTION]:En,[zt.COLGROUP]:En,[zt.TBODY]:En,[zt.TFOOT]:En,[zt.THEAD]:En,[zt.COL]:_n,[zt.TR]:ln,[zt.TD]:mn,[zt.TH]:mn},Ln={[en]:{[Nt.CHARACTER_TOKEN]:vn,[Nt.NULL_CHARACTER_TOKEN]:vn,[Nt.WHITESPACE_CHARACTER_TOKEN]:Gn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:function(e,t){e._setDocumentType(t);const n=t.forceQuirks?Ct.DOCUMENT_MODE.QUIRKS:function(e){if(e.name!==vt)return yt.QUIRKS;const t=e.systemId;if(t&&"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"===t.toLowerCase())return yt.QUIRKS;let n=e.publicId;if(null!==n){if(n=n.toLowerCase(),Qt.indexOf(n)>-1)return yt.QUIRKS;let e=null===t?wt:Yt;if(Vt(n,e))return yt.QUIRKS;if(e=null===t?Xt:Wt,Vt(n,e))return yt.LIMITED_QUIRKS}return yt.NO_QUIRKS}(t);(function(e){return e.name===vt&&null===e.publicId&&(null===e.systemId||"about:legacy-compat"===e.systemId)})(t)||e._err("non-conforming-doctype"),e.treeAdapter.setDocumentMode(e.document,n),e.insertionMode=tn;},[Nt.START_TAG_TOKEN]:vn,[Nt.END_TAG_TOKEN]:vn,[Nt.EOF_TOKEN]:vn},[tn]:{[Nt.CHARACTER_TOKEN]:Yn,[Nt.NULL_CHARACTER_TOKEN]:Yn,[Nt.WHITESPACE_CHARACTER_TOKEN]:Gn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML?(e._insertElement(t,qt.HTML),e.insertionMode=nn):Yn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n!==zt.HTML&&n!==zt.HEAD&&n!==zt.BODY&&n!==zt.BR||Yn(e,t);},[Nt.EOF_TOKEN]:Yn},[nn]:{[Nt.CHARACTER_TOKEN]:wn,[Nt.NULL_CHARACTER_TOKEN]:wn,[Nt.WHITESPACE_CHARACTER_TOKEN]:Gn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Bn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.HEAD?(e._insertElement(t,qt.HTML),e.headElement=e.openElements.current,e.insertionMode=sn):wn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HEAD||n===zt.BODY||n===zt.HTML||n===zt.BR?wn(e,t):e._err(L);},[Nt.EOF_TOKEN]:wn},[sn]:{[Nt.CHARACTER_TOKEN]:Wn,[Nt.NULL_CHARACTER_TOKEN]:Wn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Bn,[Nt.START_TAG_TOKEN]:Qn,[Nt.END_TAG_TOKEN]:Xn,[Nt.EOF_TOKEN]:Wn},[rn]:{[Nt.CHARACTER_TOKEN]:Vn,[Nt.NULL_CHARACTER_TOKEN]:Vn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Bn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.BASEFONT||n===zt.BGSOUND||n===zt.HEAD||n===zt.LINK||n===zt.META||n===zt.NOFRAMES||n===zt.STYLE?Qn(e,t):n===zt.NOSCRIPT?e._err("nested-noscript-in-head"):Vn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.NOSCRIPT?(e.openElements.pop(),e.insertionMode=sn):n===zt.BR?Vn(e,t):e._err(L);},[Nt.EOF_TOKEN]:Vn},[on]:{[Nt.CHARACTER_TOKEN]:jn,[Nt.NULL_CHARACTER_TOKEN]:jn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Bn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.BODY?(e._insertElement(t,qt.HTML),e.framesetOk=!1,e.insertionMode=an):n===zt.FRAMESET?(e._insertElement(t,qt.HTML),e.insertionMode=Cn):n===zt.BASE||n===zt.BASEFONT||n===zt.BGSOUND||n===zt.LINK||n===zt.META||n===zt.NOFRAMES||n===zt.SCRIPT||n===zt.STYLE||n===zt.TEMPLATE||n===zt.TITLE?(e._err("abandoned-head-element-child"),e.openElements.push(e.headElement),Qn(e,t),e.openElements.remove(e.headElement)):n===zt.HEAD?e._err(k):jn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.BODY||n===zt.HTML||n===zt.BR?jn(e,t):n===zt.TEMPLATE?Xn(e,t):e._err(L);},[Nt.EOF_TOKEN]:jn},[an]:{[Nt.CHARACTER_TOKEN]:qn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:as,[Nt.END_TAG_TOKEN]:cs,[Nt.EOF_TOKEN]:_s},[Tn]:{[Nt.CHARACTER_TOKEN]:xn,[Nt.NULL_CHARACTER_TOKEN]:xn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Gn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:Gn,[Nt.END_TAG_TOKEN]:function(e,t){t.tagName===zt.SCRIPT&&(e.pendingScript=e.openElements.current),e.openElements.pop(),e.insertionMode=e.originalInsertionMode;},[Nt.EOF_TOKEN]:function(e,t){e._err("eof-in-element-that-can-contain-only-text"),e.openElements.pop(),e.insertionMode=e.originalInsertionMode,e._processToken(t);}},[En]:{[Nt.CHARACTER_TOKEN]:ls,[Nt.NULL_CHARACTER_TOKEN]:ls,[Nt.WHITESPACE_CHARACTER_TOKEN]:ls,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:ms,[Nt.END_TAG_TOKEN]:ps,[Nt.EOF_TOKEN]:_s},[hn]:{[Nt.CHARACTER_TOKEN]:function(e,t){e.pendingCharacterTokens.push(t),e.hasNonWhitespacePendingCharacterToken=!0;},[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:function(e,t){e.pendingCharacterTokens.push(t);},[Nt.COMMENT_TOKEN]:us,[Nt.DOCTYPE_TOKEN]:us,[Nt.START_TAG_TOKEN]:us,[Nt.END_TAG_TOKEN]:us,[Nt.EOF_TOKEN]:us},[cn]:{[Nt.CHARACTER_TOKEN]:qn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.COL||n===zt.COLGROUP||n===zt.TBODY||n===zt.TD||n===zt.TFOOT||n===zt.TH||n===zt.THEAD||n===zt.TR?e.openElements.hasInTableScope(zt.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(zt.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=En,e._processToken(t)):as(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.TABLE?e.openElements.hasInTableScope(zt.CAPTION)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(zt.CAPTION),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=En,n===zt.TABLE&&e._processToken(t)):n!==zt.BODY&&n!==zt.COL&&n!==zt.COLGROUP&&n!==zt.HTML&&n!==zt.TBODY&&n!==zt.TD&&n!==zt.TFOOT&&n!==zt.TH&&n!==zt.THEAD&&n!==zt.TR&&cs(e,t);},[Nt.EOF_TOKEN]:_s},[_n]:{[Nt.CHARACTER_TOKEN]:Ns,[Nt.NULL_CHARACTER_TOKEN]:Ns,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.COL?(e._appendElement(t,qt.HTML),t.ackSelfClosing=!0):n===zt.TEMPLATE?Qn(e,t):Ns(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.COLGROUP?e.openElements.currentTagName===zt.COLGROUP&&(e.openElements.pop(),e.insertionMode=En):n===zt.TEMPLATE?Xn(e,t):n!==zt.COL&&Ns(e,t);},[Nt.EOF_TOKEN]:_s},[ln]:{[Nt.CHARACTER_TOKEN]:ls,[Nt.NULL_CHARACTER_TOKEN]:ls,[Nt.WHITESPACE_CHARACTER_TOKEN]:ls,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TR?(e.openElements.clearBackToTableBodyContext(),e._insertElement(t,qt.HTML),e.insertionMode=mn):n===zt.TH||n===zt.TD?(e.openElements.clearBackToTableBodyContext(),e._insertFakeElement(zt.TR),e.insertionMode=mn,e._processToken(t)):n===zt.CAPTION||n===zt.COL||n===zt.COLGROUP||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=En,e._processToken(t)):ms(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD?e.openElements.hasInTableScope(n)&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=En):n===zt.TABLE?e.openElements.hasTableBodyContextInTableScope()&&(e.openElements.clearBackToTableBodyContext(),e.openElements.pop(),e.insertionMode=En,e._processToken(t)):(n!==zt.BODY&&n!==zt.CAPTION&&n!==zt.COL&&n!==zt.COLGROUP||n!==zt.HTML&&n!==zt.TD&&n!==zt.TH&&n!==zt.TR)&&ps(e,t);},[Nt.EOF_TOKEN]:_s},[mn]:{[Nt.CHARACTER_TOKEN]:ls,[Nt.NULL_CHARACTER_TOKEN]:ls,[Nt.WHITESPACE_CHARACTER_TOKEN]:ls,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TH||n===zt.TD?(e.openElements.clearBackToTableRowContext(),e._insertElement(t,qt.HTML),e.insertionMode=pn,e.activeFormattingElements.insertMarker()):n===zt.CAPTION||n===zt.COL||n===zt.COLGROUP||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR?e.openElements.hasInTableScope(zt.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=ln,e._processToken(t)):ms(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TR?e.openElements.hasInTableScope(zt.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=ln):n===zt.TABLE?e.openElements.hasInTableScope(zt.TR)&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=ln,e._processToken(t)):n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD?(e.openElements.hasInTableScope(n)||e.openElements.hasInTableScope(zt.TR))&&(e.openElements.clearBackToTableRowContext(),e.openElements.pop(),e.insertionMode=ln,e._processToken(t)):(n!==zt.BODY&&n!==zt.CAPTION&&n!==zt.COL&&n!==zt.COLGROUP||n!==zt.HTML&&n!==zt.TD&&n!==zt.TH)&&ps(e,t);},[Nt.EOF_TOKEN]:_s},[pn]:{[Nt.CHARACTER_TOKEN]:qn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.COL||n===zt.COLGROUP||n===zt.TBODY||n===zt.TD||n===zt.TFOOT||n===zt.TH||n===zt.THEAD||n===zt.TR?(e.openElements.hasInTableScope(zt.TD)||e.openElements.hasInTableScope(zt.TH))&&(e._closeTableCell(),e._processToken(t)):as(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.TD||n===zt.TH?e.openElements.hasInTableScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker(),e.insertionMode=mn):n===zt.TABLE||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR?e.openElements.hasInTableScope(n)&&(e._closeTableCell(),e._processToken(t)):n!==zt.BODY&&n!==zt.CAPTION&&n!==zt.COL&&n!==zt.COLGROUP&&n!==zt.HTML&&cs(e,t);},[Nt.EOF_TOKEN]:_s},[An]:{[Nt.CHARACTER_TOKEN]:xn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:ds,[Nt.END_TAG_TOKEN]:Cs,[Nt.EOF_TOKEN]:_s},[un]:{[Nt.CHARACTER_TOKEN]:xn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.TABLE||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR||n===zt.TD||n===zt.TH?(e.openElements.popUntilTagNamePopped(zt.SELECT),e._resetInsertionMode(),e._processToken(t)):ds(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.CAPTION||n===zt.TABLE||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR||n===zt.TD||n===zt.TH?e.openElements.hasInTableScope(n)&&(e.openElements.popUntilTagNamePopped(zt.SELECT),e._resetInsertionMode(),e._processToken(t)):Cs(e,t);},[Nt.EOF_TOKEN]:_s},[Nn]:{[Nt.CHARACTER_TOKEN]:qn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;if(n===zt.BASE||n===zt.BASEFONT||n===zt.BGSOUND||n===zt.LINK||n===zt.META||n===zt.NOFRAMES||n===zt.SCRIPT||n===zt.STYLE||n===zt.TEMPLATE||n===zt.TITLE)Qn(e,t);else {const s=In[n]||an;e._popTmplInsertionMode(),e._pushTmplInsertionMode(s),e.insertionMode=s,e._processToken(t);}},[Nt.END_TAG_TOKEN]:function(e,t){t.tagName===zt.TEMPLATE&&Xn(e,t);},[Nt.EOF_TOKEN]:Os},[dn]:{[Nt.CHARACTER_TOKEN]:fs,[Nt.NULL_CHARACTER_TOKEN]:fs,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:function(e,t){e._appendCommentNode(t,e.openElements.items[0]);},[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML?as(e,t):fs(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML?e.fragmentContext||(e.insertionMode=fn):fs(e,t);},[Nt.EOF_TOKEN]:yn},[Cn]:{[Nt.CHARACTER_TOKEN]:Gn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.FRAMESET?e._insertElement(t,qt.HTML):n===zt.FRAME?(e._appendElement(t,qt.HTML),t.ackSelfClosing=!0):n===zt.NOFRAMES&&Qn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){t.tagName!==zt.FRAMESET||e.openElements.isRootHtmlElementCurrent()||(e.openElements.pop(),e.fragmentContext||e.openElements.currentTagName===zt.FRAMESET||(e.insertionMode=On));},[Nt.EOF_TOKEN]:yn},[On]:{[Nt.CHARACTER_TOKEN]:Gn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:xn,[Nt.COMMENT_TOKEN]:Kn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.NOFRAMES&&Qn(e,t);},[Nt.END_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML&&(e.insertionMode=Sn);},[Nt.EOF_TOKEN]:yn},[fn]:{[Nt.CHARACTER_TOKEN]:Ss,[Nt.NULL_CHARACTER_TOKEN]:Ss,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:bn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){t.tagName===zt.HTML?as(e,t):Ss(e,t);},[Nt.END_TAG_TOKEN]:Ss,[Nt.EOF_TOKEN]:yn},[Sn]:{[Nt.CHARACTER_TOKEN]:Gn,[Nt.NULL_CHARACTER_TOKEN]:Gn,[Nt.WHITESPACE_CHARACTER_TOKEN]:zn,[Nt.COMMENT_TOKEN]:bn,[Nt.DOCTYPE_TOKEN]:Gn,[Nt.START_TAG_TOKEN]:function(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.NOFRAMES&&Qn(e,t);},[Nt.END_TAG_TOKEN]:Gn,[Nt.EOF_TOKEN]:yn}};var kn=class{constructor(e){this.options=function(e,t){return [e,t=t||Object.create(null)].reduce(((e,t)=>(Object.keys(t).forEach((n=>{e[n]=t[n];})),e)),Object.create(null))}(Zt,e),this.treeAdapter=this.options.treeAdapter,this.pendingScript=null,this.options.sourceCodeLocationInfo&&gt.install(this,Ut),this.options.onParseError&&gt.install(this,bt,{onParseError:this.options.onParseError});}parse(e){const t=this.treeAdapter.createDocument();return this._bootstrap(t,null),this.tokenizer.write(e,!0),this._runParsingLoop(null),t}parseFragment(e,t){t||(t=this.treeAdapter.createElement(zt.TEMPLATE,qt.HTML,[]));const n=this.treeAdapter.createElement("documentmock",qt.HTML,[]);this._bootstrap(n,t),this.treeAdapter.getTagName(t)===zt.TEMPLATE&&this._pushTmplInsertionMode(Nn),this._initTokenizerForFragmentParsing(),this._insertFakeRootElement(),this._resetInsertionMode(),this._findFormInFragmentContext(),this.tokenizer.write(e,!0),this._runParsingLoop(null);const s=this.treeAdapter.getFirstChild(n),r=this.treeAdapter.createDocumentFragment();return this._adoptNodes(s,r),r}_bootstrap(e,t){this.tokenizer=new Nt(this.options),this.stopped=!1,this.insertionMode=en,this.originalInsertionMode="",this.document=e,this.fragmentContext=t,this.headElement=null,this.formElement=null,this.openElements=new class{constructor(e,t){this.stackTop=-1,this.items=[],this.current=e,this.currentTagName=null,this.currentTmplContent=null,this.tmplCount=0,this.treeAdapter=t;}_indexOf(e){let t=-1;for(let n=this.stackTop;n>=0;n--)if(this.items[n]===e){t=n;break}return t}_isInTemplate(){return this.currentTagName===Ot.TEMPLATE&&this.treeAdapter.getNamespaceURI(this.current)===ft.HTML}_updateCurrentElement(){this.current=this.items[this.stackTop],this.currentTagName=this.current&&this.treeAdapter.getTagName(this.current),this.currentTmplContent=this._isInTemplate()?this.treeAdapter.getTemplateContent(this.current):null;}push(e){this.items[++this.stackTop]=e,this._updateCurrentElement(),this._isInTemplate()&&this.tmplCount++;}pop(){this.stackTop--,this.tmplCount>0&&this._isInTemplate()&&this.tmplCount--,this._updateCurrentElement();}replace(e,t){const n=this._indexOf(e);this.items[n]=t,n===this.stackTop&&this._updateCurrentElement();}insertAfter(e,t){const n=this._indexOf(e)+1;this.items.splice(n,0,t),n===++this.stackTop&&this._updateCurrentElement();}popUntilTagNamePopped(e){for(;this.stackTop>-1;){const t=this.currentTagName,n=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),t===e&&n===ft.HTML)break}}popUntilElementPopped(e){for(;this.stackTop>-1;){const t=this.current;if(this.pop(),t===e)break}}popUntilNumberedHeaderPopped(){for(;this.stackTop>-1;){const e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===Ot.H1||e===Ot.H2||e===Ot.H3||e===Ot.H4||e===Ot.H5||e===Ot.H6&&t===ft.HTML)break}}popUntilTableCellPopped(){for(;this.stackTop>-1;){const e=this.currentTagName,t=this.treeAdapter.getNamespaceURI(this.current);if(this.pop(),e===Ot.TD||e===Ot.TH&&t===ft.HTML)break}}popAllUpToHtmlElement(){this.stackTop=0,this._updateCurrentElement();}clearBackToTableContext(){for(;this.currentTagName!==Ot.TABLE&&this.currentTagName!==Ot.TEMPLATE&&this.currentTagName!==Ot.HTML||this.treeAdapter.getNamespaceURI(this.current)!==ft.HTML;)this.pop();}clearBackToTableBodyContext(){for(;this.currentTagName!==Ot.TBODY&&this.currentTagName!==Ot.TFOOT&&this.currentTagName!==Ot.THEAD&&this.currentTagName!==Ot.TEMPLATE&&this.currentTagName!==Ot.HTML||this.treeAdapter.getNamespaceURI(this.current)!==ft.HTML;)this.pop();}clearBackToTableRowContext(){for(;this.currentTagName!==Ot.TR&&this.currentTagName!==Ot.TEMPLATE&&this.currentTagName!==Ot.HTML||this.treeAdapter.getNamespaceURI(this.current)!==ft.HTML;)this.pop();}remove(e){for(let t=this.stackTop;t>=0;t--)if(this.items[t]===e){this.items.splice(t,1),this.stackTop--,this._updateCurrentElement();break}}tryPeekProperlyNestedBodyElement(){const e=this.items[1];return e&&this.treeAdapter.getTagName(e)===Ot.BODY?e:null}contains(e){return this._indexOf(e)>-1}getCommonAncestor(e){let t=this._indexOf(e);return --t>=0?this.items[t]:null}isRootHtmlElementCurrent(){return 0===this.stackTop&&this.currentTagName===Ot.HTML}hasInScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]),s=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&s===ft.HTML)return !0;if(It(n,s))return !1}return !0}hasNumberedHeaderInScope(){for(let e=this.stackTop;e>=0;e--){const t=this.treeAdapter.getTagName(this.items[e]),n=this.treeAdapter.getNamespaceURI(this.items[e]);if((t===Ot.H1||t===Ot.H2||t===Ot.H3||t===Ot.H4||t===Ot.H5||t===Ot.H6)&&n===ft.HTML)return !0;if(It(t,n))return !1}return !0}hasInListItemScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]),s=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&s===ft.HTML)return !0;if((n===Ot.UL||n===Ot.OL)&&s===ft.HTML||It(n,s))return !1}return !0}hasInButtonScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]),s=this.treeAdapter.getNamespaceURI(this.items[t]);if(n===e&&s===ft.HTML)return !0;if(n===Ot.BUTTON&&s===ft.HTML||It(n,s))return !1}return !0}hasInTableScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===ft.HTML){if(n===e)return !0;if(n===Ot.TABLE||n===Ot.TEMPLATE||n===Ot.HTML)return !1}}return !0}hasTableBodyContextInTableScope(){for(let e=this.stackTop;e>=0;e--){const t=this.treeAdapter.getTagName(this.items[e]);if(this.treeAdapter.getNamespaceURI(this.items[e])===ft.HTML){if(t===Ot.TBODY||t===Ot.THEAD||t===Ot.TFOOT)return !0;if(t===Ot.TABLE||t===Ot.HTML)return !1}}return !0}hasInSelectScope(e){for(let t=this.stackTop;t>=0;t--){const n=this.treeAdapter.getTagName(this.items[t]);if(this.treeAdapter.getNamespaceURI(this.items[t])===ft.HTML){if(n===e)return !0;if(n!==Ot.OPTION&&n!==Ot.OPTGROUP)return !1}}return !0}generateImpliedEndTags(){for(;St(this.currentTagName);)this.pop();}generateImpliedEndTagsThoroughly(){for(;Rt(this.currentTagName);)this.pop();}generateImpliedEndTagsWithExclusion(e){for(;St(this.currentTagName)&&this.currentTagName!==e;)this.pop();}}(this.document,this.treeAdapter),this.activeFormattingElements=new kt(this.treeAdapter),this.tmplInsertionModeStack=[],this.tmplInsertionModeStackTop=-1,this.currentTmplInsertionMode=null,this.pendingCharacterTokens=[],this.hasNonWhitespacePendingCharacterToken=!1,this.framesetOk=!0,this.skipNextNewLine=!1,this.fosterParentingEnabled=!1;}_err(){}_runParsingLoop(e){for(;!this.stopped;){this._setupTokenizerCDATAMode();const t=this.tokenizer.getNextToken();if(t.type===Nt.HIBERNATION_TOKEN)break;if(this.skipNextNewLine&&(this.skipNextNewLine=!1,t.type===Nt.WHITESPACE_CHARACTER_TOKEN&&"\n"===t.chars[0])){if(1===t.chars.length)continue;t.chars=t.chars.substr(1);}if(this._processInputToken(t),e&&this.pendingScript)break}}runParsingLoopForCurrentChunk(e,t){if(this._runParsingLoop(t),t&&this.pendingScript){const e=this.pendingScript;return this.pendingScript=null,void t(e)}e&&e();}_setupTokenizerCDATAMode(){const e=this._getAdjustedCurrentElement();this.tokenizer.allowCDATA=e&&e!==this.document&&this.treeAdapter.getNamespaceURI(e)!==qt.HTML&&!this._isIntegrationPoint(e);}_switchToTextParsing(e,t){this._insertElement(e,qt.HTML),this.tokenizer.state=t,this.originalInsertionMode=this.insertionMode,this.insertionMode=Tn;}switchToPlaintextParsing(){this.insertionMode=Tn,this.originalInsertionMode=an,this.tokenizer.state=Nt.MODE.PLAINTEXT;}_getAdjustedCurrentElement(){return 0===this.openElements.stackTop&&this.fragmentContext?this.fragmentContext:this.openElements.current}_findFormInFragmentContext(){let e=this.fragmentContext;do{if(this.treeAdapter.getTagName(e)===zt.FORM){this.formElement=e;break}e=this.treeAdapter.getParentNode(e);}while(e)}_initTokenizerForFragmentParsing(){if(this.treeAdapter.getNamespaceURI(this.fragmentContext)===qt.HTML){const e=this.treeAdapter.getTagName(this.fragmentContext);e===zt.TITLE||e===zt.TEXTAREA?this.tokenizer.state=Nt.MODE.RCDATA:e===zt.STYLE||e===zt.XMP||e===zt.IFRAME||e===zt.NOEMBED||e===zt.NOFRAMES||e===zt.NOSCRIPT?this.tokenizer.state=Nt.MODE.RAWTEXT:e===zt.SCRIPT?this.tokenizer.state=Nt.MODE.SCRIPT_DATA:e===zt.PLAINTEXT&&(this.tokenizer.state=Nt.MODE.PLAINTEXT);}}_setDocumentType(e){const t=e.name||"",n=e.publicId||"",s=e.systemId||"";this.treeAdapter.setDocumentType(this.document,t,n,s);}_attachElementToTree(e){if(this._shouldFosterParentOnInsertion())this._fosterParentElement(e);else {const t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.appendChild(t,e);}}_appendElement(e,t){const n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n);}_insertElement(e,t){const n=this.treeAdapter.createElement(e.tagName,t,e.attrs);this._attachElementToTree(n),this.openElements.push(n);}_insertFakeElement(e){const t=this.treeAdapter.createElement(e,qt.HTML,[]);this._attachElementToTree(t),this.openElements.push(t);}_insertTemplate(e){const t=this.treeAdapter.createElement(e.tagName,qt.HTML,e.attrs),n=this.treeAdapter.createDocumentFragment();this.treeAdapter.setTemplateContent(t,n),this._attachElementToTree(t),this.openElements.push(t);}_insertFakeRootElement(){const e=this.treeAdapter.createElement(zt.HTML,qt.HTML,[]);this.treeAdapter.appendChild(this.openElements.current,e),this.openElements.push(e);}_appendCommentNode(e,t){const n=this.treeAdapter.createCommentNode(e.data);this.treeAdapter.appendChild(t,n);}_insertCharacters(e){if(this._shouldFosterParentOnInsertion())this._fosterParentText(e.chars);else {const t=this.openElements.currentTmplContent||this.openElements.current;this.treeAdapter.insertText(t,e.chars);}}_adoptNodes(e,t){for(let n=this.treeAdapter.getFirstChild(e);n;n=this.treeAdapter.getFirstChild(e))this.treeAdapter.detachNode(n),this.treeAdapter.appendChild(t,n);}_shouldProcessTokenInForeignContent(e){const t=this._getAdjustedCurrentElement();if(!t||t===this.document)return !1;const n=this.treeAdapter.getNamespaceURI(t);if(n===qt.HTML)return !1;if(this.treeAdapter.getTagName(t)===zt.ANNOTATION_XML&&n===qt.MATHML&&e.type===Nt.START_TAG_TOKEN&&e.tagName===zt.SVG)return !1;const s=e.type===Nt.CHARACTER_TOKEN||e.type===Nt.NULL_CHARACTER_TOKEN||e.type===Nt.WHITESPACE_CHARACTER_TOKEN;return !((e.type===Nt.START_TAG_TOKEN&&e.tagName!==zt.MGLYPH&&e.tagName!==zt.MALIGNMARK||s)&&this._isIntegrationPoint(t,qt.MATHML)||(e.type===Nt.START_TAG_TOKEN||s)&&this._isIntegrationPoint(t,qt.HTML)||e.type===Nt.EOF_TOKEN)}_processToken(e){Ln[this.insertionMode][e.type](this,e);}_processTokenInBodyMode(e){Ln.IN_BODY_MODE[e.type](this,e);}_processTokenInForeignContent(e){e.type===Nt.CHARACTER_TOKEN?function(e,t){e._insertCharacters(t),e.framesetOk=!1;}(this,e):e.type===Nt.NULL_CHARACTER_TOKEN?function(e,t){t.chars=n,e._insertCharacters(t);}(this,e):e.type===Nt.WHITESPACE_CHARACTER_TOKEN?xn(this,e):e.type===Nt.COMMENT_TOKEN?Kn(this,e):e.type===Nt.START_TAG_TOKEN?function(e,t){if(jt.causesExit(t)&&!e.fragmentContext){for(;e.treeAdapter.getNamespaceURI(e.openElements.current)!==qt.HTML&&!e._isIntegrationPoint(e.openElements.current);)e.openElements.pop();e._processToken(t);}else {const n=e._getAdjustedCurrentElement(),s=e.treeAdapter.getNamespaceURI(n);s===qt.MATHML?jt.adjustTokenMathMLAttrs(t):s===qt.SVG&&(jt.adjustTokenSVGTagName(t),jt.adjustTokenSVGAttrs(t)),jt.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,s):e._insertElement(t,s),t.ackSelfClosing=!0;}}(this,e):e.type===Nt.END_TAG_TOKEN&&function(e,t){for(let n=e.openElements.stackTop;n>0;n--){const s=e.openElements.items[n];if(e.treeAdapter.getNamespaceURI(s)===qt.HTML){e._processToken(t);break}if(e.treeAdapter.getTagName(s).toLowerCase()===t.tagName){e.openElements.popUntilElementPopped(s);break}}}(this,e);}_processInputToken(e){this._shouldProcessTokenInForeignContent(e)?this._processTokenInForeignContent(e):this._processToken(e),e.type===Nt.START_TAG_TOKEN&&e.selfClosing&&!e.ackSelfClosing&&this._err("non-void-html-element-start-tag-with-trailing-solidus");}_isIntegrationPoint(e,t){const n=this.treeAdapter.getTagName(e),s=this.treeAdapter.getNamespaceURI(e),r=this.treeAdapter.getAttrList(e);return jt.isIntegrationPoint(n,s,r,t)}_reconstructActiveFormattingElements(){const e=this.activeFormattingElements.length;if(e){let t=e,n=null;do{if(t--,n=this.activeFormattingElements.entries[t],n.type===kt.MARKER_ENTRY||this.openElements.contains(n.element)){t++;break}}while(t>0);for(let s=t;s<e;s++)n=this.activeFormattingElements.entries[s],this._insertElement(n.token,this.treeAdapter.getNamespaceURI(n.element)),n.element=this.openElements.current;}}_closeTableCell(){this.openElements.generateImpliedEndTags(),this.openElements.popUntilTableCellPopped(),this.activeFormattingElements.clearToLastMarker(),this.insertionMode=mn;}_closePElement(){this.openElements.generateImpliedEndTagsWithExclusion(zt.P),this.openElements.popUntilTagNamePopped(zt.P);}_resetInsertionMode(){for(let e=this.openElements.stackTop,t=!1;e>=0;e--){let n=this.openElements.items[e];0===e&&(t=!0,this.fragmentContext&&(n=this.fragmentContext));const s=this.treeAdapter.getTagName(n),r=Rn[s];if(r){this.insertionMode=r;break}if(!(t||s!==zt.TD&&s!==zt.TH)){this.insertionMode=pn;break}if(!t&&s===zt.HEAD){this.insertionMode=sn;break}if(s===zt.SELECT){this._resetInsertionModeForSelect(e);break}if(s===zt.TEMPLATE){this.insertionMode=this.currentTmplInsertionMode;break}if(s===zt.HTML){this.insertionMode=this.headElement?on:nn;break}if(t){this.insertionMode=an;break}}}_resetInsertionModeForSelect(e){if(e>0)for(let t=e-1;t>0;t--){const e=this.openElements.items[t],n=this.treeAdapter.getTagName(e);if(n===zt.TEMPLATE)break;if(n===zt.TABLE)return void(this.insertionMode=un)}this.insertionMode=An;}_pushTmplInsertionMode(e){this.tmplInsertionModeStack.push(e),this.tmplInsertionModeStackTop++,this.currentTmplInsertionMode=e;}_popTmplInsertionMode(){this.tmplInsertionModeStack.pop(),this.tmplInsertionModeStackTop--,this.currentTmplInsertionMode=this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];}_isElementCausesFosterParenting(e){const t=this.treeAdapter.getTagName(e);return t===zt.TABLE||t===zt.TBODY||t===zt.TFOOT||t===zt.THEAD||t===zt.TR}_shouldFosterParentOnInsertion(){return this.fosterParentingEnabled&&this._isElementCausesFosterParenting(this.openElements.current)}_findFosterParentingLocation(){const e={parent:null,beforeElement:null};for(let t=this.openElements.stackTop;t>=0;t--){const n=this.openElements.items[t],s=this.treeAdapter.getTagName(n),r=this.treeAdapter.getNamespaceURI(n);if(s===zt.TEMPLATE&&r===qt.HTML){e.parent=this.treeAdapter.getTemplateContent(n);break}if(s===zt.TABLE){e.parent=this.treeAdapter.getParentNode(n),e.parent?e.beforeElement=n:e.parent=this.openElements.items[t-1];break}}return e.parent||(e.parent=this.openElements.items[0]),e}_fosterParentElement(e){const t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertBefore(t.parent,e,t.beforeElement):this.treeAdapter.appendChild(t.parent,e);}_fosterParentText(e){const t=this._findFosterParentingLocation();t.beforeElement?this.treeAdapter.insertTextBefore(t.parent,e,t.beforeElement):this.treeAdapter.insertText(t.parent,e);}_isSpecialElement(e){const t=this.treeAdapter.getTagName(e),n=this.treeAdapter.getNamespaceURI(e);return Ct.SPECIAL_ELEMENTS[n][t]}};function Mn(e,t){let n=e.activeFormattingElements.getElementEntryInScopeWithTagName(t.tagName);return n?e.openElements.contains(n.element)?e.openElements.hasInScope(t.tagName)||(n=null):(e.activeFormattingElements.removeEntry(n),n=null):hs(e,t),n}function gn(e,t){let n=null;for(let s=e.openElements.stackTop;s>=0;s--){const r=e.openElements.items[s];if(r===t.element)break;e._isSpecialElement(r)&&(n=r);}return n||(e.openElements.popUntilElementPopped(t.element),e.activeFormattingElements.removeEntry(t)),n}function Pn(e,t,n){let s=t,r=e.openElements.getCommonAncestor(t);for(let i=0,o=r;o!==n;i++,o=r){r=e.openElements.getCommonAncestor(o);const n=e.activeFormattingElements.getElementEntry(o),a=n&&i>=3;!n||a?(a&&e.activeFormattingElements.removeEntry(n),e.openElements.remove(o)):(o=Hn(e,n),s===t&&(e.activeFormattingElements.bookmark=n),e.treeAdapter.detachNode(s),e.treeAdapter.appendChild(o,s),s=o);}return s}function Hn(e,t){const n=e.treeAdapter.getNamespaceURI(t.element),s=e.treeAdapter.createElement(t.token.tagName,n,t.token.attrs);return e.openElements.replace(t.element,s),t.element=s,s}function Dn(e,t,n){if(e._isElementCausesFosterParenting(t))e._fosterParentElement(n);else {const s=e.treeAdapter.getTagName(t),r=e.treeAdapter.getNamespaceURI(t);s===zt.TEMPLATE&&r===qt.HTML&&(t=e.treeAdapter.getTemplateContent(t)),e.treeAdapter.appendChild(t,n);}}function Fn(e,t,n){const s=e.treeAdapter.getNamespaceURI(n.element),r=n.token,i=e.treeAdapter.createElement(r.tagName,s,r.attrs);e._adoptNodes(t,i),e.treeAdapter.appendChild(t,i),e.activeFormattingElements.insertElementAfterBookmark(i,n.token),e.activeFormattingElements.removeEntry(n),e.openElements.remove(n.element),e.openElements.insertAfter(t,i);}function Un(e,t){let n;for(let s=0;s<8&&(n=Mn(e,t),n);s++){const t=gn(e,n);if(!t)break;e.activeFormattingElements.bookmark=n;const s=Pn(e,t,n.element),r=e.openElements.getCommonAncestor(n.element);e.treeAdapter.detachNode(s),Dn(e,r,s),Fn(e,t,n);}}function Gn(){}function Bn(e){e._err("misplaced-doctype");}function Kn(e,t){e._appendCommentNode(t,e.openElements.currentTmplContent||e.openElements.current);}function bn(e,t){e._appendCommentNode(t,e.document);}function xn(e,t){e._insertCharacters(t);}function yn(e){e.stopped=!0;}function vn(e,t){e._err("missing-doctype",{beforeToken:!0}),e.treeAdapter.setDocumentMode(e.document,Ct.DOCUMENT_MODE.QUIRKS),e.insertionMode=tn,e._processToken(t);}function Yn(e,t){e._insertFakeRootElement(),e.insertionMode=nn,e._processToken(t);}function wn(e,t){e._insertFakeElement(zt.HEAD),e.headElement=e.openElements.current,e.insertionMode=sn,e._processToken(t);}function Qn(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.BASE||n===zt.BASEFONT||n===zt.BGSOUND||n===zt.LINK||n===zt.META?(e._appendElement(t,qt.HTML),t.ackSelfClosing=!0):n===zt.TITLE?e._switchToTextParsing(t,Nt.MODE.RCDATA):n===zt.NOSCRIPT?e.options.scriptingEnabled?e._switchToTextParsing(t,Nt.MODE.RAWTEXT):(e._insertElement(t,qt.HTML),e.insertionMode=rn):n===zt.NOFRAMES||n===zt.STYLE?e._switchToTextParsing(t,Nt.MODE.RAWTEXT):n===zt.SCRIPT?e._switchToTextParsing(t,Nt.MODE.SCRIPT_DATA):n===zt.TEMPLATE?(e._insertTemplate(t,qt.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1,e.insertionMode=Nn,e._pushTmplInsertionMode(Nn)):n===zt.HEAD?e._err(k):Wn(e,t);}function Xn(e,t){const n=t.tagName;n===zt.HEAD?(e.openElements.pop(),e.insertionMode=on):n===zt.BODY||n===zt.BR||n===zt.HTML?Wn(e,t):n===zt.TEMPLATE&&e.openElements.tmplCount>0?(e.openElements.generateImpliedEndTagsThoroughly(),e.openElements.currentTagName!==zt.TEMPLATE&&e._err("closing-of-element-with-open-child-elements"),e.openElements.popUntilTagNamePopped(zt.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode()):e._err(L);}function Wn(e,t){e.openElements.pop(),e.insertionMode=on,e._processToken(t);}function Vn(e,t){const n=t.type===Nt.EOF_TOKEN?"open-elements-left-after-eof":"disallowed-content-in-noscript-in-head";e._err(n),e.openElements.pop(),e.insertionMode=sn,e._processToken(t);}function jn(e,t){e._insertFakeElement(zt.BODY),e.insertionMode=an,e._processToken(t);}function zn(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t);}function qn(e,t){e._reconstructActiveFormattingElements(),e._insertCharacters(t),e.framesetOk=!1;}function Jn(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML);}function Zn(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML),e.skipNextNewLine=!0,e.framesetOk=!1;}function $n(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}function es(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.activeFormattingElements.insertMarker(),e.framesetOk=!1;}function ts(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,qt.HTML),e.framesetOk=!1,t.ackSelfClosing=!0;}function ns(e,t){e._appendElement(t,qt.HTML),t.ackSelfClosing=!0;}function ss(e,t){e._switchToTextParsing(t,Nt.MODE.RAWTEXT);}function rs(e,t){e.openElements.currentTagName===zt.OPTION&&e.openElements.pop(),e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML);}function is(e,t){e.openElements.hasInScope(zt.RUBY)&&e.openElements.generateImpliedEndTags(),e._insertElement(t,qt.HTML);}function os(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML);}function as(e,t){const n=t.tagName;switch(n.length){case 1:n===zt.I||n===zt.S||n===zt.B||n===zt.U?$n(e,t):n===zt.P?Jn(e,t):n===zt.A?function(e,t){const n=e.activeFormattingElements.getElementEntryInScopeWithTagName(zt.A);n&&(Un(e,t),e.openElements.remove(n.element),e.activeFormattingElements.removeEntry(n)),e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}(e,t):os(e,t);break;case 2:n===zt.DL||n===zt.OL||n===zt.UL?Jn(e,t):n===zt.H1||n===zt.H2||n===zt.H3||n===zt.H4||n===zt.H5||n===zt.H6?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement();const n=e.openElements.currentTagName;n!==zt.H1&&n!==zt.H2&&n!==zt.H3&&n!==zt.H4&&n!==zt.H5&&n!==zt.H6||e.openElements.pop(),e._insertElement(t,qt.HTML);}(e,t):n===zt.LI||n===zt.DD||n===zt.DT?function(e,t){e.framesetOk=!1;const n=t.tagName;for(let t=e.openElements.stackTop;t>=0;t--){const s=e.openElements.items[t],r=e.treeAdapter.getTagName(s);let i=null;if(n===zt.LI&&r===zt.LI?i=zt.LI:n!==zt.DD&&n!==zt.DT||r!==zt.DD&&r!==zt.DT||(i=r),i){e.openElements.generateImpliedEndTagsWithExclusion(i),e.openElements.popUntilTagNamePopped(i);break}if(r!==zt.ADDRESS&&r!==zt.DIV&&r!==zt.P&&e._isSpecialElement(s))break}e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML);}(e,t):n===zt.EM||n===zt.TT?$n(e,t):n===zt.BR?ts(e,t):n===zt.HR?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._appendElement(t,qt.HTML),e.framesetOk=!1,t.ackSelfClosing=!0;}(e,t):n===zt.RB?is(e,t):n===zt.RT||n===zt.RP?function(e,t){e.openElements.hasInScope(zt.RUBY)&&e.openElements.generateImpliedEndTagsWithExclusion(zt.RTC),e._insertElement(t,qt.HTML);}(e,t):n!==zt.TH&&n!==zt.TD&&n!==zt.TR&&os(e,t);break;case 3:n===zt.DIV||n===zt.DIR||n===zt.NAV?Jn(e,t):n===zt.PRE?Zn(e,t):n===zt.BIG?$n(e,t):n===zt.IMG||n===zt.WBR?ts(e,t):n===zt.XMP?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._reconstructActiveFormattingElements(),e.framesetOk=!1,e._switchToTextParsing(t,Nt.MODE.RAWTEXT);}(e,t):n===zt.SVG?function(e,t){e._reconstructActiveFormattingElements(),jt.adjustTokenSVGAttrs(t),jt.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,qt.SVG):e._insertElement(t,qt.SVG),t.ackSelfClosing=!0;}(e,t):n===zt.RTC?is(e,t):n!==zt.COL&&os(e,t);break;case 4:n===zt.HTML?function(e,t){0===e.openElements.tmplCount&&e.treeAdapter.adoptAttributes(e.openElements.items[0],t.attrs);}(e,t):n===zt.BASE||n===zt.LINK||n===zt.META?Qn(e,t):n===zt.BODY?function(e,t){const n=e.openElements.tryPeekProperlyNestedBodyElement();n&&0===e.openElements.tmplCount&&(e.framesetOk=!1,e.treeAdapter.adoptAttributes(n,t.attrs));}(e,t):n===zt.MAIN||n===zt.MENU?Jn(e,t):n===zt.FORM?function(e,t){const n=e.openElements.tmplCount>0;e.formElement&&!n||(e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML),n||(e.formElement=e.openElements.current));}(e,t):n===zt.CODE||n===zt.FONT?$n(e,t):n===zt.NOBR?function(e,t){e._reconstructActiveFormattingElements(),e.openElements.hasInScope(zt.NOBR)&&(Un(e,t),e._reconstructActiveFormattingElements()),e._insertElement(t,qt.HTML),e.activeFormattingElements.pushElement(e.openElements.current,t);}(e,t):n===zt.AREA?ts(e,t):n===zt.MATH?function(e,t){e._reconstructActiveFormattingElements(),jt.adjustTokenMathMLAttrs(t),jt.adjustTokenXMLAttrs(t),t.selfClosing?e._appendElement(t,qt.MATHML):e._insertElement(t,qt.MATHML),t.ackSelfClosing=!0;}(e,t):n===zt.MENU?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML);}(e,t):n!==zt.HEAD&&os(e,t);break;case 5:n===zt.STYLE||n===zt.TITLE?Qn(e,t):n===zt.ASIDE?Jn(e,t):n===zt.SMALL?$n(e,t):n===zt.TABLE?function(e,t){e.treeAdapter.getDocumentMode(e.document)!==Ct.DOCUMENT_MODE.QUIRKS&&e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML),e.framesetOk=!1,e.insertionMode=En;}(e,t):n===zt.EMBED?ts(e,t):n===zt.INPUT?function(e,t){e._reconstructActiveFormattingElements(),e._appendElement(t,qt.HTML);const n=Nt.getTokenAttr(t,Jt.TYPE);n&&n.toLowerCase()===$t||(e.framesetOk=!1),t.ackSelfClosing=!0;}(e,t):n===zt.PARAM||n===zt.TRACK?ns(e,t):n===zt.IMAGE?function(e,t){t.tagName=zt.IMG,ts(e,t);}(e,t):n!==zt.FRAME&&n!==zt.TBODY&&n!==zt.TFOOT&&n!==zt.THEAD&&os(e,t);break;case 6:n===zt.SCRIPT?Qn(e,t):n===zt.CENTER||n===zt.FIGURE||n===zt.FOOTER||n===zt.HEADER||n===zt.HGROUP||n===zt.DIALOG?Jn(e,t):n===zt.BUTTON?function(e,t){e.openElements.hasInScope(zt.BUTTON)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(zt.BUTTON)),e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.framesetOk=!1;}(e,t):n===zt.STRIKE||n===zt.STRONG?$n(e,t):n===zt.APPLET||n===zt.OBJECT?es(e,t):n===zt.KEYGEN?ts(e,t):n===zt.SOURCE?ns(e,t):n===zt.IFRAME?function(e,t){e.framesetOk=!1,e._switchToTextParsing(t,Nt.MODE.RAWTEXT);}(e,t):n===zt.SELECT?function(e,t){e._reconstructActiveFormattingElements(),e._insertElement(t,qt.HTML),e.framesetOk=!1,e.insertionMode===En||e.insertionMode===cn||e.insertionMode===ln||e.insertionMode===mn||e.insertionMode===pn?e.insertionMode=un:e.insertionMode=An;}(e,t):n===zt.OPTION?rs(e,t):os(e,t);break;case 7:n===zt.BGSOUND?Qn(e,t):n===zt.DETAILS||n===zt.ADDRESS||n===zt.ARTICLE||n===zt.SECTION||n===zt.SUMMARY?Jn(e,t):n===zt.LISTING?Zn(e,t):n===zt.MARQUEE?es(e,t):n===zt.NOEMBED?ss(e,t):n!==zt.CAPTION&&os(e,t);break;case 8:n===zt.BASEFONT?Qn(e,t):n===zt.FRAMESET?function(e,t){const n=e.openElements.tryPeekProperlyNestedBodyElement();e.framesetOk&&n&&(e.treeAdapter.detachNode(n),e.openElements.popAllUpToHtmlElement(),e._insertElement(t,qt.HTML),e.insertionMode=Cn);}(e,t):n===zt.FIELDSET?Jn(e,t):n===zt.TEXTAREA?function(e,t){e._insertElement(t,qt.HTML),e.skipNextNewLine=!0,e.tokenizer.state=Nt.MODE.RCDATA,e.originalInsertionMode=e.insertionMode,e.framesetOk=!1,e.insertionMode=Tn;}(e,t):n===zt.TEMPLATE?Qn(e,t):n===zt.NOSCRIPT?e.options.scriptingEnabled?ss(e,t):os(e,t):n===zt.OPTGROUP?rs(e,t):n!==zt.COLGROUP&&os(e,t);break;case 9:n===zt.PLAINTEXT?function(e,t){e.openElements.hasInButtonScope(zt.P)&&e._closePElement(),e._insertElement(t,qt.HTML),e.tokenizer.state=Nt.MODE.PLAINTEXT;}(e,t):os(e,t);break;case 10:n===zt.BLOCKQUOTE||n===zt.FIGCAPTION?Jn(e,t):os(e,t);break;default:os(e,t);}}function Ts(e,t){const n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n));}function Es(e,t){const n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilTagNamePopped(n),e.activeFormattingElements.clearToLastMarker());}function hs(e,t){const n=t.tagName;for(let t=e.openElements.stackTop;t>0;t--){const s=e.openElements.items[t];if(e.treeAdapter.getTagName(s)===n){e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilElementPopped(s);break}if(e._isSpecialElement(s))break}}function cs(e,t){const n=t.tagName;switch(n.length){case 1:n===zt.A||n===zt.B||n===zt.I||n===zt.S||n===zt.U?Un(e,t):n===zt.P?function(e){e.openElements.hasInButtonScope(zt.P)||e._insertFakeElement(zt.P),e._closePElement();}(e):hs(e,t);break;case 2:n===zt.DL||n===zt.UL||n===zt.OL?Ts(e,t):n===zt.LI?function(e){e.openElements.hasInListItemScope(zt.LI)&&(e.openElements.generateImpliedEndTagsWithExclusion(zt.LI),e.openElements.popUntilTagNamePopped(zt.LI));}(e):n===zt.DD||n===zt.DT?function(e,t){const n=t.tagName;e.openElements.hasInScope(n)&&(e.openElements.generateImpliedEndTagsWithExclusion(n),e.openElements.popUntilTagNamePopped(n));}(e,t):n===zt.H1||n===zt.H2||n===zt.H3||n===zt.H4||n===zt.H5||n===zt.H6?function(e){e.openElements.hasNumberedHeaderInScope()&&(e.openElements.generateImpliedEndTags(),e.openElements.popUntilNumberedHeaderPopped());}(e):n===zt.BR?function(e){e._reconstructActiveFormattingElements(),e._insertFakeElement(zt.BR),e.openElements.pop(),e.framesetOk=!1;}(e):n===zt.EM||n===zt.TT?Un(e,t):hs(e,t);break;case 3:n===zt.BIG?Un(e,t):n===zt.DIR||n===zt.DIV||n===zt.NAV||n===zt.PRE?Ts(e,t):hs(e,t);break;case 4:n===zt.BODY?function(e){e.openElements.hasInScope(zt.BODY)&&(e.insertionMode=dn);}(e):n===zt.HTML?function(e,t){e.openElements.hasInScope(zt.BODY)&&(e.insertionMode=dn,e._processToken(t));}(e,t):n===zt.FORM?function(e){const t=e.openElements.tmplCount>0,n=e.formElement;t||(e.formElement=null),(n||t)&&e.openElements.hasInScope(zt.FORM)&&(e.openElements.generateImpliedEndTags(),t?e.openElements.popUntilTagNamePopped(zt.FORM):e.openElements.remove(n));}(e):n===zt.CODE||n===zt.FONT||n===zt.NOBR?Un(e,t):n===zt.MAIN||n===zt.MENU?Ts(e,t):hs(e,t);break;case 5:n===zt.ASIDE?Ts(e,t):n===zt.SMALL?Un(e,t):hs(e,t);break;case 6:n===zt.CENTER||n===zt.FIGURE||n===zt.FOOTER||n===zt.HEADER||n===zt.HGROUP||n===zt.DIALOG?Ts(e,t):n===zt.APPLET||n===zt.OBJECT?Es(e,t):n===zt.STRIKE||n===zt.STRONG?Un(e,t):hs(e,t);break;case 7:n===zt.ADDRESS||n===zt.ARTICLE||n===zt.DETAILS||n===zt.SECTION||n===zt.SUMMARY||n===zt.LISTING?Ts(e,t):n===zt.MARQUEE?Es(e,t):hs(e,t);break;case 8:n===zt.FIELDSET?Ts(e,t):n===zt.TEMPLATE?Xn(e,t):hs(e,t);break;case 10:n===zt.BLOCKQUOTE||n===zt.FIGCAPTION?Ts(e,t):hs(e,t);break;default:hs(e,t);}}function _s(e,t){e.tmplInsertionModeStackTop>-1?Os(e,t):e.stopped=!0;}function ls(e,t){const n=e.openElements.currentTagName;n===zt.TABLE||n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD||n===zt.TR?(e.pendingCharacterTokens=[],e.hasNonWhitespacePendingCharacterToken=!1,e.originalInsertionMode=e.insertionMode,e.insertionMode=hn,e._processToken(t)):As(e,t);}function ms(e,t){const n=t.tagName;switch(n.length){case 2:n===zt.TD||n===zt.TH||n===zt.TR?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(zt.TBODY),e.insertionMode=ln,e._processToken(t);}(e,t):As(e,t);break;case 3:n===zt.COL?function(e,t){e.openElements.clearBackToTableContext(),e._insertFakeElement(zt.COLGROUP),e.insertionMode=_n,e._processToken(t);}(e,t):As(e,t);break;case 4:n===zt.FORM?function(e,t){e.formElement||0!==e.openElements.tmplCount||(e._insertElement(t,qt.HTML),e.formElement=e.openElements.current,e.openElements.pop());}(e,t):As(e,t);break;case 5:n===zt.TABLE?function(e,t){e.openElements.hasInTableScope(zt.TABLE)&&(e.openElements.popUntilTagNamePopped(zt.TABLE),e._resetInsertionMode(),e._processToken(t));}(e,t):n===zt.STYLE?Qn(e,t):n===zt.TBODY||n===zt.TFOOT||n===zt.THEAD?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,qt.HTML),e.insertionMode=ln;}(e,t):n===zt.INPUT?function(e,t){const n=Nt.getTokenAttr(t,Jt.TYPE);n&&n.toLowerCase()===$t?e._appendElement(t,qt.HTML):As(e,t),t.ackSelfClosing=!0;}(e,t):As(e,t);break;case 6:n===zt.SCRIPT?Qn(e,t):As(e,t);break;case 7:n===zt.CAPTION?function(e,t){e.openElements.clearBackToTableContext(),e.activeFormattingElements.insertMarker(),e._insertElement(t,qt.HTML),e.insertionMode=cn;}(e,t):As(e,t);break;case 8:n===zt.COLGROUP?function(e,t){e.openElements.clearBackToTableContext(),e._insertElement(t,qt.HTML),e.insertionMode=_n;}(e,t):n===zt.TEMPLATE?Qn(e,t):As(e,t);break;default:As(e,t);}}function ps(e,t){const n=t.tagName;n===zt.TABLE?e.openElements.hasInTableScope(zt.TABLE)&&(e.openElements.popUntilTagNamePopped(zt.TABLE),e._resetInsertionMode()):n===zt.TEMPLATE?Xn(e,t):n!==zt.BODY&&n!==zt.CAPTION&&n!==zt.COL&&n!==zt.COLGROUP&&n!==zt.HTML&&n!==zt.TBODY&&n!==zt.TD&&n!==zt.TFOOT&&n!==zt.TH&&n!==zt.THEAD&&n!==zt.TR&&As(e,t);}function As(e,t){const n=e.fosterParentingEnabled;e.fosterParentingEnabled=!0,e._processTokenInBodyMode(t),e.fosterParentingEnabled=n;}function us(e,t){let n=0;if(e.hasNonWhitespacePendingCharacterToken)for(;n<e.pendingCharacterTokens.length;n++)As(e,e.pendingCharacterTokens[n]);else for(;n<e.pendingCharacterTokens.length;n++)e._insertCharacters(e.pendingCharacterTokens[n]);e.insertionMode=e.originalInsertionMode,e._processToken(t);}function Ns(e,t){e.openElements.currentTagName===zt.COLGROUP&&(e.openElements.pop(),e.insertionMode=En,e._processToken(t));}function ds(e,t){const n=t.tagName;n===zt.HTML?as(e,t):n===zt.OPTION?(e.openElements.currentTagName===zt.OPTION&&e.openElements.pop(),e._insertElement(t,qt.HTML)):n===zt.OPTGROUP?(e.openElements.currentTagName===zt.OPTION&&e.openElements.pop(),e.openElements.currentTagName===zt.OPTGROUP&&e.openElements.pop(),e._insertElement(t,qt.HTML)):n===zt.INPUT||n===zt.KEYGEN||n===zt.TEXTAREA||n===zt.SELECT?e.openElements.hasInSelectScope(zt.SELECT)&&(e.openElements.popUntilTagNamePopped(zt.SELECT),e._resetInsertionMode(),n!==zt.SELECT&&e._processToken(t)):n!==zt.SCRIPT&&n!==zt.TEMPLATE||Qn(e,t);}function Cs(e,t){const n=t.tagName;if(n===zt.OPTGROUP){const t=e.openElements.items[e.openElements.stackTop-1],n=t&&e.treeAdapter.getTagName(t);e.openElements.currentTagName===zt.OPTION&&n===zt.OPTGROUP&&e.openElements.pop(),e.openElements.currentTagName===zt.OPTGROUP&&e.openElements.pop();}else n===zt.OPTION?e.openElements.currentTagName===zt.OPTION&&e.openElements.pop():n===zt.SELECT&&e.openElements.hasInSelectScope(zt.SELECT)?(e.openElements.popUntilTagNamePopped(zt.SELECT),e._resetInsertionMode()):n===zt.TEMPLATE&&Xn(e,t);}function Os(e,t){e.openElements.tmplCount>0?(e.openElements.popUntilTagNamePopped(zt.TEMPLATE),e.activeFormattingElements.clearToLastMarker(),e._popTmplInsertionMode(),e._resetInsertionMode(),e._processToken(t)):e.stopped=!0;}function fs(e,t){e.insertionMode=an,e._processToken(t);}function Ss(e,t){e.insertionMode=an,e._processToken(t);}return Ct.TAG_NAMES,Ct.NAMESPACES,e.parse=function(e,t){return new kn(t).parse(e)},e.parseFragment=function(e,t,n){return "string"==typeof e&&(n=t,t=e,e=null),new kn(n).parseFragment(t,e)},Object.defineProperty(e,"__esModule",{value:!0}),e}({});const parse=e.parse;const parseFragment=e.parseFragment;

const docParser = new WeakMap();
function parseDocumentUtil(ownerDocument, html) {
  const doc = parse(html.trim(), getParser(ownerDocument));
  doc.documentElement = doc.firstElementChild;
  doc.head = doc.documentElement.firstElementChild;
  doc.body = doc.head.nextElementSibling;
  return doc;
}
function parseFragmentUtil(ownerDocument, html) {
  if (typeof html === 'string') {
    html = html.trim();
  }
  else {
    html = '';
  }
  const frag = parseFragment(html, getParser(ownerDocument));
  return frag;
}
function getParser(ownerDocument) {
  let parseOptions = docParser.get(ownerDocument);
  if (parseOptions != null) {
    return parseOptions;
  }
  const treeAdapter = {
    createDocument() {
      const doc = ownerDocument.createElement("#document" /* DOCUMENT_NODE */);
      doc['x-mode'] = 'no-quirks';
      return doc;
    },
    setNodeSourceCodeLocation(node, location) {
      node.sourceCodeLocation = location;
    },
    getNodeSourceCodeLocation(node) {
      return node.sourceCodeLocation;
    },
    createDocumentFragment() {
      return ownerDocument.createDocumentFragment();
    },
    createElement(tagName, namespaceURI, attrs) {
      const elm = ownerDocument.createElementNS(namespaceURI, tagName);
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (attr.namespace == null || attr.namespace === 'http://www.w3.org/1999/xhtml') {
          elm.setAttribute(attr.name, attr.value);
        }
        else {
          elm.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
      return elm;
    },
    createCommentNode(data) {
      return ownerDocument.createComment(data);
    },
    appendChild(parentNode, newNode) {
      parentNode.appendChild(newNode);
    },
    insertBefore(parentNode, newNode, referenceNode) {
      parentNode.insertBefore(newNode, referenceNode);
    },
    setTemplateContent(templateElement, contentElement) {
      templateElement.content = contentElement;
    },
    getTemplateContent(templateElement) {
      return templateElement.content;
    },
    setDocumentType(doc, name, publicId, systemId) {
      let doctypeNode = doc.childNodes.find(n => n.nodeType === 10 /* DOCUMENT_TYPE_NODE */);
      if (doctypeNode == null) {
        doctypeNode = ownerDocument.createDocumentTypeNode();
        doc.insertBefore(doctypeNode, doc.firstChild);
      }
      doctypeNode.nodeValue = '!DOCTYPE';
      doctypeNode['x-name'] = name;
      doctypeNode['x-publicId'] = publicId;
      doctypeNode['x-systemId'] = systemId;
    },
    setDocumentMode(doc, mode) {
      doc['x-mode'] = mode;
    },
    getDocumentMode(doc) {
      return doc['x-mode'];
    },
    detachNode(node) {
      node.remove();
    },
    insertText(parentNode, text) {
      const lastChild = parentNode.lastChild;
      if (lastChild != null && lastChild.nodeType === 3 /* TEXT_NODE */) {
        lastChild.nodeValue += text;
      }
      else {
        parentNode.appendChild(ownerDocument.createTextNode(text));
      }
    },
    insertTextBefore(parentNode, text, referenceNode) {
      const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
      if (prevNode != null && prevNode.nodeType === 3 /* TEXT_NODE */) {
        prevNode.nodeValue += text;
      }
      else {
        parentNode.insertBefore(ownerDocument.createTextNode(text), referenceNode);
      }
    },
    adoptAttributes(recipient, attrs) {
      for (let i = 0; i < attrs.length; i++) {
        const attr = attrs[i];
        if (recipient.hasAttributeNS(attr.namespace, attr.name) === false) {
          recipient.setAttributeNS(attr.namespace, attr.name, attr.value);
        }
      }
    },
    getFirstChild(node) {
      return node.childNodes[0];
    },
    getChildNodes(node) {
      return node.childNodes;
    },
    getParentNode(node) {
      return node.parentNode;
    },
    getAttrList(element) {
      const attrs = element.attributes.__items.map(attr => {
        return {
          name: attr.name,
          value: attr.value,
          namespace: attr.namespaceURI,
          prefix: null,
        };
      });
      return attrs;
    },
    getTagName(element) {
      if (element.namespaceURI === 'http://www.w3.org/1999/xhtml') {
        return element.nodeName.toLowerCase();
      }
      else {
        return element.nodeName;
      }
    },
    getNamespaceURI(element) {
      return element.namespaceURI;
    },
    getTextNodeContent(textNode) {
      return textNode.nodeValue;
    },
    getCommentNodeContent(commentNode) {
      return commentNode.nodeValue;
    },
    getDocumentTypeNodeName(doctypeNode) {
      return doctypeNode['x-name'];
    },
    getDocumentTypeNodePublicId(doctypeNode) {
      return doctypeNode['x-publicId'];
    },
    getDocumentTypeNodeSystemId(doctypeNode) {
      return doctypeNode['x-systemId'];
    },
    isTextNode(node) {
      return node.nodeType === 3 /* TEXT_NODE */;
    },
    isCommentNode(node) {
      return node.nodeType === 8 /* COMMENT_NODE */;
    },
    isDocumentTypeNode(node) {
      return node.nodeType === 10 /* DOCUMENT_TYPE_NODE */;
    },
    isElementNode(node) {
      return node.nodeType === 1 /* ELEMENT_NODE */;
    },
  };
  parseOptions = {
    treeAdapter: treeAdapter,
  };
  docParser.set(ownerDocument, parseOptions);
  return parseOptions;
}

class MockNode {
  constructor(ownerDocument, nodeType, nodeName, nodeValue) {
    this.ownerDocument = ownerDocument;
    this.nodeType = nodeType;
    this.nodeName = nodeName;
    this._nodeValue = nodeValue;
    this.parentNode = null;
    this.childNodes = [];
  }
  appendChild(newNode) {
    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
      const nodes = newNode.childNodes.slice();
      for (const child of nodes) {
        this.appendChild(child);
      }
    }
    else {
      newNode.remove();
      newNode.parentNode = this;
      this.childNodes.push(newNode);
      connectNode(this.ownerDocument, newNode);
    }
    return newNode;
  }
  append(...items) {
    items.forEach(item => {
      const isNode = typeof item === 'object' && item !== null && 'nodeType' in item;
      this.appendChild(isNode ? item : this.ownerDocument.createTextNode(String(item)));
    });
  }
  prepend(...items) {
    const firstChild = this.firstChild;
    items.forEach(item => {
      const isNode = typeof item === 'object' && item !== null && 'nodeType' in item;
      this.insertBefore(isNode ? item : this.ownerDocument.createTextNode(String(item)), firstChild);
    });
  }
  cloneNode(deep) {
    throw new Error(`invalid node type to clone: ${this.nodeType}, deep: ${deep}`);
  }
  compareDocumentPosition(_other) {
    // unimplemented
    // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
    return -1;
  }
  get firstChild() {
    return this.childNodes[0] || null;
  }
  insertBefore(newNode, referenceNode) {
    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
      for (let i = 0, ii = newNode.childNodes.length; i < ii; i++) {
        insertBefore(this, newNode.childNodes[i], referenceNode);
      }
    }
    else {
      insertBefore(this, newNode, referenceNode);
    }
    return newNode;
  }
  get isConnected() {
    let node = this;
    while (node != null) {
      if (node.nodeType === 9 /* DOCUMENT_NODE */) {
        return true;
      }
      node = node.parentNode;
      if (node != null && node.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {
        node = node.host;
      }
    }
    return false;
  }
  isSameNode(node) {
    return this === node;
  }
  get lastChild() {
    return this.childNodes[this.childNodes.length - 1] || null;
  }
  get nextSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) + 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  get nodeValue() {
    return this._nodeValue;
  }
  set nodeValue(value) {
    this._nodeValue = value;
  }
  get parentElement() {
    return this.parentNode || null;
  }
  set parentElement(value) {
    this.parentNode = value;
  }
  get previousSibling() {
    if (this.parentNode != null) {
      const index = this.parentNode.childNodes.indexOf(this) - 1;
      return this.parentNode.childNodes[index] || null;
    }
    return null;
  }
  contains(otherNode) {
    return this.childNodes.includes(otherNode);
  }
  removeChild(childNode) {
    const index = this.childNodes.indexOf(childNode);
    if (index > -1) {
      this.childNodes.splice(index, 1);
      if (this.nodeType === 1 /* ELEMENT_NODE */) {
        const wasConnected = this.isConnected;
        childNode.parentNode = null;
        if (wasConnected === true) {
          disconnectNode(childNode);
        }
      }
      else {
        childNode.parentNode = null;
      }
    }
    else {
      throw new Error(`node not found within childNodes during removeChild`);
    }
    return childNode;
  }
  remove() {
    if (this.parentNode != null) {
      this.parentNode.removeChild(this);
    }
  }
  replaceChild(newChild, oldChild) {
    if (oldChild.parentNode === this) {
      this.insertBefore(newChild, oldChild);
      oldChild.remove();
      return newChild;
    }
    return null;
  }
  get textContent() {
    return this._nodeValue;
  }
  set textContent(value) {
    this._nodeValue = String(value);
  }
}
MockNode.ELEMENT_NODE = 1;
MockNode.TEXT_NODE = 3;
MockNode.PROCESSING_INSTRUCTION_NODE = 7;
MockNode.COMMENT_NODE = 8;
MockNode.DOCUMENT_NODE = 9;
MockNode.DOCUMENT_TYPE_NODE = 10;
MockNode.DOCUMENT_FRAGMENT_NODE = 11;
class MockNodeList {
  constructor(ownerDocument, childNodes, length) {
    this.ownerDocument = ownerDocument;
    this.childNodes = childNodes;
    this.length = length;
  }
}
class MockElement extends MockNode {
  constructor(ownerDocument, nodeName) {
    super(ownerDocument, 1 /* ELEMENT_NODE */, typeof nodeName === 'string' ? nodeName : null, null);
    this.namespaceURI = null;
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  attachShadow(_opts) {
    const shadowRoot = this.ownerDocument.createDocumentFragment();
    this.shadowRoot = shadowRoot;
    return shadowRoot;
  }
  get shadowRoot() {
    return this.__shadowRoot || null;
  }
  set shadowRoot(shadowRoot) {
    if (shadowRoot != null) {
      shadowRoot.host = this;
      this.__shadowRoot = shadowRoot;
    }
    else {
      delete this.__shadowRoot;
    }
  }
  get attributes() {
    if (this.__attributeMap == null) {
      this.__attributeMap = createAttributeProxy(false);
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
  get children() {
    return this.childNodes.filter(n => n.nodeType === 1 /* ELEMENT_NODE */);
  }
  get childElementCount() {
    return this.childNodes.filter(n => n.nodeType === 1 /* ELEMENT_NODE */).length;
  }
  get className() {
    return this.getAttributeNS(null, 'class') || '';
  }
  set className(value) {
    this.setAttributeNS(null, 'class', value);
  }
  get classList() {
    return new MockClassList(this);
  }
  click() {
    dispatchEvent(this, new MockEvent('click', { bubbles: true, cancelable: true, composed: true }));
  }
  cloneNode(_deep) {
    // implemented on MockElement.prototype from within element.ts
    return null;
  }
  closest(selector) {
    let elm = this;
    while (elm != null) {
      if (elm.matches(selector)) {
        return elm;
      }
      elm = elm.parentNode;
    }
    return null;
  }
  get dataset() {
    return dataset(this);
  }
  get dir() {
    return this.getAttributeNS(null, 'dir') || '';
  }
  set dir(value) {
    this.setAttributeNS(null, 'dir', value);
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get firstElementChild() {
    return this.children[0] || null;
  }
  getAttribute(attrName) {
    if (attrName === 'style') {
      if (this.__style != null && this.__style.length > 0) {
        return this.style.cssText;
      }
      return null;
    }
    const attr = this.attributes.getNamedItem(attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      return attr.value;
    }
    return null;
  }
  getBoundingClientRect() {
    return { bottom: 0, height: 0, left: 0, right: 0, top: 0, width: 0, x: 0, y: 0 };
  }
  getRootNode(opts) {
    const isComposed = opts != null && opts.composed === true;
    let node = this;
    while (node.parentNode != null) {
      node = node.parentNode;
      if (isComposed === true && node.parentNode == null && node.host != null) {
        node = node.host;
      }
    }
    return node;
  }
  get draggable() {
    return this.getAttributeNS(null, 'draggable') === 'true';
  }
  set draggable(value) {
    this.setAttributeNS(null, 'draggable', value);
  }
  hasChildNodes() {
    return this.childNodes.length > 0;
  }
  get id() {
    return this.getAttributeNS(null, 'id') || '';
  }
  set id(value) {
    this.setAttributeNS(null, 'id', value);
  }
  get innerHTML() {
    if (this.childNodes.length === 0) {
      return '';
    }
    return serializeNodeToHtml(this, {
      newLines: false,
      indentSpaces: 0,
    });
  }
  set innerHTML(html) {
    if (NON_ESCAPABLE_CONTENT.has(this.nodeName) === true) {
      setTextContent(this, html);
    }
    else {
      for (let i = this.childNodes.length - 1; i >= 0; i--) {
        this.removeChild(this.childNodes[i]);
      }
      if (typeof html === 'string') {
        const frag = parseFragmentUtil(this.ownerDocument, html);
        while (frag.childNodes.length > 0) {
          this.appendChild(frag.childNodes[0]);
        }
      }
    }
  }
  get innerText() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join('');
  }
  set innerText(value) {
    setTextContent(this, value);
  }
  insertAdjacentElement(position, elm) {
    if (position === 'beforebegin') {
      insertBefore(this.parentNode, elm, this);
    }
    else if (position === 'afterbegin') {
      this.prepend(elm);
    }
    else if (position === 'beforeend') {
      this.appendChild(elm);
    }
    else if (position === 'afterend') {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
    return elm;
  }
  insertAdjacentHTML(position, html) {
    const frag = parseFragmentUtil(this.ownerDocument, html);
    if (position === 'beforebegin') {
      while (frag.childNodes.length > 0) {
        insertBefore(this.parentNode, frag.childNodes[0], this);
      }
    }
    else if (position === 'afterbegin') {
      while (frag.childNodes.length > 0) {
        this.prepend(frag.childNodes[frag.childNodes.length - 1]);
      }
    }
    else if (position === 'beforeend') {
      while (frag.childNodes.length > 0) {
        this.appendChild(frag.childNodes[0]);
      }
    }
    else if (position === 'afterend') {
      while (frag.childNodes.length > 0) {
        insertBefore(this.parentNode, frag.childNodes[frag.childNodes.length - 1], this.nextSibling);
      }
    }
  }
  insertAdjacentText(position, text) {
    const elm = this.ownerDocument.createTextNode(text);
    if (position === 'beforebegin') {
      insertBefore(this.parentNode, elm, this);
    }
    else if (position === 'afterbegin') {
      this.prepend(elm);
    }
    else if (position === 'beforeend') {
      this.appendChild(elm);
    }
    else if (position === 'afterend') {
      insertBefore(this.parentNode, elm, this.nextSibling);
    }
  }
  hasAttribute(attrName) {
    if (attrName === 'style') {
      return this.__style != null && this.__style.length > 0;
    }
    return this.getAttribute(attrName) !== null;
  }
  hasAttributeNS(namespaceURI, name) {
    return this.getAttributeNS(namespaceURI, name) !== null;
  }
  get hidden() {
    return this.hasAttributeNS(null, 'hidden');
  }
  set hidden(isHidden) {
    if (isHidden === true) {
      this.setAttributeNS(null, 'hidden', '');
    }
    else {
      this.removeAttributeNS(null, 'hidden');
    }
  }
  get lang() {
    return this.getAttributeNS(null, 'lang') || '';
  }
  set lang(value) {
    this.setAttributeNS(null, 'lang', value);
  }
  get lastElementChild() {
    const children = this.children;
    return children[children.length - 1] || null;
  }
  matches(selector) {
    return matches(selector, this);
  }
  get nextElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null &&
      (parentElement.nodeType === 1 /* ELEMENT_NODE */ || parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ || parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) + 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  get outerHTML() {
    return serializeNodeToHtml(this, {
      newLines: false,
      outerHtml: true,
      indentSpaces: 0,
    });
  }
  get previousElementSibling() {
    const parentElement = this.parentElement;
    if (parentElement != null &&
      (parentElement.nodeType === 1 /* ELEMENT_NODE */ || parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ || parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {
      const children = parentElement.children;
      const index = children.indexOf(this) - 1;
      return parentElement.children[index] || null;
    }
    return null;
  }
  getElementsByClassName(classNames) {
    const classes = classNames
      .trim()
      .split(' ')
      .filter(c => c.length > 0);
    const results = [];
    getElementsByClassName(this, classes, results);
    return results;
  }
  getElementsByTagName(tagName) {
    const results = [];
    getElementsByTagName(this, tagName.toLowerCase(), results);
    return results;
  }
  querySelector(selector) {
    return selectOne(selector, this);
  }
  querySelectorAll(selector) {
    return selectAll(selector, this);
  }
  removeAttribute(attrName) {
    if (attrName === 'style') {
      delete this.__style;
    }
    else {
      const attr = this.attributes.getNamedItem(attrName);
      if (attr != null) {
        this.attributes.removeNamedItemNS(attr);
        if (checkAttributeChanged(this) === true) {
          attributeChanged(this, attrName, attr.value, null);
        }
      }
    }
  }
  removeAttributeNS(namespaceURI, attrName) {
    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);
    if (attr != null) {
      this.attributes.removeNamedItemNS(attr);
      if (checkAttributeChanged(this) === true) {
        attributeChanged(this, attrName, attr.value, null);
      }
    }
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  setAttribute(attrName, value) {
    if (attrName === 'style') {
      this.style = value;
    }
    else {
      const attributes = this.attributes;
      let attr = attributes.getNamedItem(attrName);
      const checkAttrChanged = checkAttributeChanged(this);
      if (attr != null) {
        if (checkAttrChanged === true) {
          const oldValue = attr.value;
          attr.value = value;
          if (oldValue !== attr.value) {
            attributeChanged(this, attr.name, oldValue, attr.value);
          }
        }
        else {
          attr.value = value;
        }
      }
      else {
        if (attributes.caseInsensitive) {
          attrName = attrName.toLowerCase();
        }
        attr = new MockAttr(attrName, value);
        attributes.__items.push(attr);
        if (checkAttrChanged === true) {
          attributeChanged(this, attrName, null, attr.value);
        }
      }
    }
  }
  setAttributeNS(namespaceURI, attrName, value) {
    const attributes = this.attributes;
    let attr = attributes.getNamedItemNS(namespaceURI, attrName);
    const checkAttrChanged = checkAttributeChanged(this);
    if (attr != null) {
      if (checkAttrChanged === true) {
        const oldValue = attr.value;
        attr.value = value;
        if (oldValue !== attr.value) {
          attributeChanged(this, attr.name, oldValue, attr.value);
        }
      }
      else {
        attr.value = value;
      }
    }
    else {
      attr = new MockAttr(attrName, value, namespaceURI);
      attributes.__items.push(attr);
      if (checkAttrChanged === true) {
        attributeChanged(this, attrName, null, attr.value);
      }
    }
  }
  get style() {
    if (this.__style == null) {
      this.__style = createCSSStyleDeclaration();
    }
    return this.__style;
  }
  set style(val) {
    if (typeof val === 'string') {
      if (this.__style == null) {
        this.__style = createCSSStyleDeclaration();
      }
      this.__style.cssText = val;
    }
    else {
      this.__style = val;
    }
  }
  get tabIndex() {
    return parseInt(this.getAttributeNS(null, 'tabindex') || '-1', 10);
  }
  set tabIndex(value) {
    this.setAttributeNS(null, 'tabindex', value);
  }
  get tagName() {
    return this.nodeName;
  }
  set tagName(value) {
    this.nodeName = value;
  }
  get textContent() {
    const text = [];
    getTextContent(this.childNodes, text);
    return text.join('');
  }
  set textContent(value) {
    setTextContent(this, value);
  }
  get title() {
    return this.getAttributeNS(null, 'title') || '';
  }
  set title(value) {
    this.setAttributeNS(null, 'title', value);
  }
  onanimationstart() {
    /**/
  }
  onanimationend() {
    /**/
  }
  onanimationiteration() {
    /**/
  }
  onabort() {
    /**/
  }
  onauxclick() {
    /**/
  }
  onbeforecopy() {
    /**/
  }
  onbeforecut() {
    /**/
  }
  onbeforepaste() {
    /**/
  }
  onblur() {
    /**/
  }
  oncancel() {
    /**/
  }
  oncanplay() {
    /**/
  }
  oncanplaythrough() {
    /**/
  }
  onchange() {
    /**/
  }
  onclick() {
    /**/
  }
  onclose() {
    /**/
  }
  oncontextmenu() {
    /**/
  }
  oncopy() {
    /**/
  }
  oncuechange() {
    /**/
  }
  oncut() {
    /**/
  }
  ondblclick() {
    /**/
  }
  ondrag() {
    /**/
  }
  ondragend() {
    /**/
  }
  ondragenter() {
    /**/
  }
  ondragleave() {
    /**/
  }
  ondragover() {
    /**/
  }
  ondragstart() {
    /**/
  }
  ondrop() {
    /**/
  }
  ondurationchange() {
    /**/
  }
  onemptied() {
    /**/
  }
  onended() {
    /**/
  }
  onerror() {
    /**/
  }
  onfocus() {
    /**/
  }
  onfocusin() {
    /**/
  }
  onfocusout() {
    /**/
  }
  onformdata() {
    /**/
  }
  onfullscreenchange() {
    /**/
  }
  onfullscreenerror() {
    /**/
  }
  ongotpointercapture() {
    /**/
  }
  oninput() {
    /**/
  }
  oninvalid() {
    /**/
  }
  onkeydown() {
    /**/
  }
  onkeypress() {
    /**/
  }
  onkeyup() {
    /**/
  }
  onload() {
    /**/
  }
  onloadeddata() {
    /**/
  }
  onloadedmetadata() {
    /**/
  }
  onloadstart() {
    /**/
  }
  onlostpointercapture() {
    /**/
  }
  onmousedown() {
    /**/
  }
  onmouseenter() {
    /**/
  }
  onmouseleave() {
    /**/
  }
  onmousemove() {
    /**/
  }
  onmouseout() {
    /**/
  }
  onmouseover() {
    /**/
  }
  onmouseup() {
    /**/
  }
  onmousewheel() {
    /**/
  }
  onpaste() {
    /**/
  }
  onpause() {
    /**/
  }
  onplay() {
    /**/
  }
  onplaying() {
    /**/
  }
  onpointercancel() {
    /**/
  }
  onpointerdown() {
    /**/
  }
  onpointerenter() {
    /**/
  }
  onpointerleave() {
    /**/
  }
  onpointermove() {
    /**/
  }
  onpointerout() {
    /**/
  }
  onpointerover() {
    /**/
  }
  onpointerup() {
    /**/
  }
  onprogress() {
    /**/
  }
  onratechange() {
    /**/
  }
  onreset() {
    /**/
  }
  onresize() {
    /**/
  }
  onscroll() {
    /**/
  }
  onsearch() {
    /**/
  }
  onseeked() {
    /**/
  }
  onseeking() {
    /**/
  }
  onselect() {
    /**/
  }
  onselectstart() {
    /**/
  }
  onstalled() {
    /**/
  }
  onsubmit() {
    /**/
  }
  onsuspend() {
    /**/
  }
  ontimeupdate() {
    /**/
  }
  ontoggle() {
    /**/
  }
  onvolumechange() {
    /**/
  }
  onwaiting() {
    /**/
  }
  onwebkitfullscreenchange() {
    /**/
  }
  onwebkitfullscreenerror() {
    /**/
  }
  onwheel() {
    /**/
  }
  toString(opts) {
    return serializeNodeToHtml(this, opts);
  }
}
function getElementsByClassName(elm, classNames, foundElms) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    for (let j = 0, jj = classNames.length; j < jj; j++) {
      if (childElm.classList.contains(classNames[j])) {
        foundElms.push(childElm);
      }
    }
    getElementsByClassName(childElm, classNames, foundElms);
  }
}
function getElementsByTagName(elm, tagName, foundElms) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (tagName === '*' || childElm.nodeName.toLowerCase() === tagName) {
      foundElms.push(childElm);
    }
    getElementsByTagName(childElm, tagName, foundElms);
  }
}
function resetElement(elm) {
  resetEventListeners(elm);
  delete elm.__attributeMap;
  delete elm.__shadowRoot;
  delete elm.__style;
}
function insertBefore(parentNode, newNode, referenceNode) {
  if (newNode !== referenceNode) {
    newNode.remove();
    newNode.parentNode = parentNode;
    newNode.ownerDocument = parentNode.ownerDocument;
    if (referenceNode != null) {
      const index = parentNode.childNodes.indexOf(referenceNode);
      if (index > -1) {
        parentNode.childNodes.splice(index, 0, newNode);
      }
      else {
        throw new Error(`referenceNode not found in parentNode.childNodes`);
      }
    }
    else {
      parentNode.childNodes.push(newNode);
    }
    connectNode(parentNode.ownerDocument, newNode);
  }
  return newNode;
}
class MockHTMLElement extends MockElement {
  constructor(ownerDocument, nodeName) {
    super(ownerDocument, typeof nodeName === 'string' ? nodeName.toUpperCase() : null);
    this.namespaceURI = 'http://www.w3.org/1999/xhtml';
  }
  get tagName() {
    return this.nodeName;
  }
  set tagName(value) {
    this.nodeName = value;
  }
  get attributes() {
    if (this.__attributeMap == null) {
      this.__attributeMap = createAttributeProxy(true);
    }
    return this.__attributeMap;
  }
  set attributes(attrs) {
    this.__attributeMap = attrs;
  }
}
class MockTextNode extends MockNode {
  constructor(ownerDocument, text) {
    super(ownerDocument, 3 /* TEXT_NODE */, "#text" /* TEXT_NODE */, text);
  }
  cloneNode(_deep) {
    return new MockTextNode(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
  get data() {
    return this.nodeValue;
  }
  set data(text) {
    this.nodeValue = text;
  }
  get wholeText() {
    if (this.parentNode != null) {
      const text = [];
      for (let i = 0, ii = this.parentNode.childNodes.length; i < ii; i++) {
        const childNode = this.parentNode.childNodes[i];
        if (childNode.nodeType === 3 /* TEXT_NODE */) {
          text.push(childNode.nodeValue);
        }
      }
      return text.join('');
    }
    return this.nodeValue;
  }
}
function getTextContent(childNodes, text) {
  for (let i = 0, ii = childNodes.length; i < ii; i++) {
    const childNode = childNodes[i];
    if (childNode.nodeType === 3 /* TEXT_NODE */) {
      text.push(childNode.nodeValue);
    }
    else if (childNode.nodeType === 1 /* ELEMENT_NODE */) {
      getTextContent(childNode.childNodes, text);
    }
  }
}
function setTextContent(elm, text) {
  for (let i = elm.childNodes.length - 1; i >= 0; i--) {
    elm.removeChild(elm.childNodes[i]);
  }
  const textNode = new MockTextNode(elm.ownerDocument, text);
  elm.appendChild(textNode);
}

class MockComment extends MockNode {
  constructor(ownerDocument, data) {
    super(ownerDocument, 8 /* COMMENT_NODE */, "#comment" /* COMMENT_NODE */, data);
  }
  cloneNode(_deep) {
    return new MockComment(null, this.nodeValue);
  }
  get textContent() {
    return this.nodeValue;
  }
  set textContent(text) {
    this.nodeValue = text;
  }
}

class MockDocumentFragment extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, null);
    this.nodeName = "#document-fragment" /* DOCUMENT_FRAGMENT_NODE */;
    this.nodeType = 11 /* DOCUMENT_FRAGMENT_NODE */;
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  cloneNode(deep) {
    const cloned = new MockDocumentFragment(null);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const childNode = this.childNodes[i];
        if (childNode.nodeType === 1 /* ELEMENT_NODE */ || childNode.nodeType === 3 /* TEXT_NODE */ || childNode.nodeType === 8 /* COMMENT_NODE */) {
          const clonedChildNode = this.childNodes[i].cloneNode(true);
          cloned.appendChild(clonedChildNode);
        }
      }
    }
    return cloned;
  }
}

class MockDocumentTypeNode extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, '!DOCTYPE');
    this.nodeType = 10 /* DOCUMENT_TYPE_NODE */;
    this.setAttribute('html', '');
  }
}

class MockCSSRule {
  constructor(parentStyleSheet) {
    this.parentStyleSheet = parentStyleSheet;
    this.cssText = '';
    this.type = 0;
  }
}
class MockCSSStyleSheet {
  constructor(ownerNode) {
    this.type = 'text/css';
    this.parentStyleSheet = null;
    this.cssRules = [];
    this.ownerNode = ownerNode;
  }
  get rules() {
    return this.cssRules;
  }
  set rules(rules) {
    this.cssRules = rules;
  }
  deleteRule(index) {
    if (index >= 0 && index < this.cssRules.length) {
      this.cssRules.splice(index, 1);
      updateStyleTextNode(this.ownerNode);
    }
  }
  insertRule(rule, index = 0) {
    if (typeof index !== 'number') {
      index = 0;
    }
    if (index < 0) {
      index = 0;
    }
    if (index > this.cssRules.length) {
      index = this.cssRules.length;
    }
    const cssRule = new MockCSSRule(this);
    cssRule.cssText = rule;
    this.cssRules.splice(index, 0, cssRule);
    updateStyleTextNode(this.ownerNode);
    return index;
  }
}
function getStyleElementText(styleElm) {
  const output = [];
  for (let i = 0; i < styleElm.childNodes.length; i++) {
    output.push(styleElm.childNodes[i].nodeValue);
  }
  return output.join('');
}
function setStyleElementText(styleElm, text) {
  // keeping the innerHTML and the sheet.cssRules connected
  // is not technically correct, but since we're doing
  // SSR we'll need to turn any assigned cssRules into
  // real text, not just properties that aren't rendered
  const sheet = styleElm.sheet;
  sheet.cssRules.length = 0;
  sheet.insertRule(text);
  updateStyleTextNode(styleElm);
}
function updateStyleTextNode(styleElm) {
  const childNodeLen = styleElm.childNodes.length;
  if (childNodeLen > 1) {
    for (let i = childNodeLen - 1; i >= 1; i--) {
      styleElm.removeChild(styleElm.childNodes[i]);
    }
  }
  else if (childNodeLen < 1) {
    styleElm.appendChild(styleElm.ownerDocument.createTextNode(''));
  }
  const textNode = styleElm.childNodes[0];
  textNode.nodeValue = styleElm.sheet.cssRules.map(r => r.cssText).join('\n');
}

function createElement(ownerDocument, tagName) {
  if (typeof tagName !== 'string' || tagName === '' || !/^[a-z0-9-_:]+$/i.test(tagName)) {
    throw new Error(`The tag name provided (${tagName}) is not a valid name.`);
  }
  tagName = tagName.toLowerCase();
  switch (tagName) {
    case 'a':
      return new MockAnchorElement(ownerDocument);
    case 'base':
      return new MockBaseElement(ownerDocument);
    case 'button':
      return new MockButtonElement(ownerDocument);
    case 'canvas':
      return new MockCanvasElement(ownerDocument);
    case 'form':
      return new MockFormElement(ownerDocument);
    case 'img':
      return new MockImageElement(ownerDocument);
    case 'input':
      return new MockInputElement(ownerDocument);
    case 'link':
      return new MockLinkElement(ownerDocument);
    case 'meta':
      return new MockMetaElement(ownerDocument);
    case 'script':
      return new MockScriptElement(ownerDocument);
    case 'style':
      return new MockStyleElement(ownerDocument);
    case 'template':
      return new MockTemplateElement(ownerDocument);
    case 'title':
      return new MockTitleElement(ownerDocument);
  }
  if (ownerDocument != null && tagName.includes('-')) {
    const win = ownerDocument.defaultView;
    if (win != null && win.customElements != null) {
      return createCustomElement(win.customElements, ownerDocument, tagName);
    }
  }
  return new MockHTMLElement(ownerDocument, tagName);
}
function createElementNS(ownerDocument, namespaceURI, tagName) {
  if (namespaceURI === 'http://www.w3.org/1999/xhtml') {
    return createElement(ownerDocument, tagName);
  }
  else if (namespaceURI === 'http://www.w3.org/2000/svg') {
    return new MockSVGElement(ownerDocument, tagName);
  }
  else {
    return new MockElement(ownerDocument, tagName);
  }
}
class MockAnchorElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'a');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
class MockButtonElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'button');
  }
}
patchPropAttributes(MockButtonElement.prototype, {
  type: String,
}, {
  type: 'submit',
});
class MockImageElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'img');
  }
  get draggable() {
    return this.getAttributeNS(null, 'draggable') !== 'false';
  }
  set draggable(value) {
    this.setAttributeNS(null, 'draggable', value);
  }
  get src() {
    return fullUrl(this, 'src');
  }
  set src(value) {
    this.setAttribute('src', value);
  }
}
patchPropAttributes(MockImageElement.prototype, {
  height: Number,
  width: Number,
});
class MockInputElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'input');
  }
  get list() {
    const listId = this.getAttribute('list');
    if (listId) {
      return this.ownerDocument.getElementById(listId);
    }
    return null;
  }
}
patchPropAttributes(MockInputElement.prototype, {
  accept: String,
  autocomplete: String,
  autofocus: Boolean,
  capture: String,
  checked: Boolean,
  disabled: Boolean,
  form: String,
  formaction: String,
  formenctype: String,
  formmethod: String,
  formnovalidate: String,
  formtarget: String,
  height: Number,
  inputmode: String,
  max: String,
  maxLength: Number,
  min: String,
  minLength: Number,
  multiple: Boolean,
  name: String,
  pattern: String,
  placeholder: String,
  required: Boolean,
  readOnly: Boolean,
  size: Number,
  spellCheck: Boolean,
  src: String,
  step: String,
  type: String,
  value: String,
  width: Number,
}, {
  type: 'text',
});
class MockFormElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'form');
  }
}
patchPropAttributes(MockFormElement.prototype, {
  name: String,
});
class MockLinkElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'link');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
patchPropAttributes(MockLinkElement.prototype, {
  crossorigin: String,
  media: String,
  rel: String,
  type: String,
});
class MockMetaElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'meta');
  }
}
patchPropAttributes(MockMetaElement.prototype, {
  charset: String,
  content: String,
  name: String,
});
class MockScriptElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'script');
  }
  get src() {
    return fullUrl(this, 'src');
  }
  set src(value) {
    this.setAttribute('src', value);
  }
}
patchPropAttributes(MockScriptElement.prototype, {
  type: String,
});
class MockStyleElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'style');
    this.sheet = new MockCSSStyleSheet(this);
  }
  get innerHTML() {
    return getStyleElementText(this);
  }
  set innerHTML(value) {
    setStyleElementText(this, value);
  }
  get innerText() {
    return getStyleElementText(this);
  }
  set innerText(value) {
    setStyleElementText(this, value);
  }
  get textContent() {
    return getStyleElementText(this);
  }
  set textContent(value) {
    setStyleElementText(this, value);
  }
}
class MockSVGElement extends MockElement {
  // SVGElement properties and methods
  get ownerSVGElement() {
    return null;
  }
  get viewportElement() {
    return null;
  }
  focus() {
    /**/
  }
  onunload() {
    /**/
  }
  // SVGGeometryElement properties and methods
  get pathLength() {
    return 0;
  }
  isPointInFill(_pt) {
    return false;
  }
  isPointInStroke(_pt) {
    return false;
  }
  getTotalLength() {
    return 0;
  }
}
class MockBaseElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'base');
  }
  get href() {
    return fullUrl(this, 'href');
  }
  set href(value) {
    this.setAttribute('href', value);
  }
}
class MockTemplateElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'template');
    this.content = new MockDocumentFragment(ownerDocument);
  }
  get innerHTML() {
    return this.content.innerHTML;
  }
  set innerHTML(html) {
    this.content.innerHTML = html;
  }
  cloneNode(deep) {
    const cloned = new MockTemplateElement(null);
    cloned.attributes = cloneAttributes(this.attributes);
    const styleCssText = this.getAttribute('style');
    if (styleCssText != null && styleCssText.length > 0) {
      cloned.setAttribute('style', styleCssText);
    }
    cloned.content = this.content.cloneNode(deep);
    if (deep) {
      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
        const clonedChildNode = this.childNodes[i].cloneNode(true);
        cloned.appendChild(clonedChildNode);
      }
    }
    return cloned;
  }
}
class MockTitleElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'title');
  }
  get text() {
    return this.textContent;
  }
  set text(value) {
    this.textContent = value;
  }
}
class MockCanvasElement extends MockHTMLElement {
  constructor(ownerDocument) {
    super(ownerDocument, 'canvas');
  }
  getContext() {
    return {
      fillRect() {
        return;
      },
      clearRect() { },
      getImageData: function (_, __, w, h) {
        return {
          data: new Array(w * h * 4),
        };
      },
      putImageData() { },
      createImageData: function () {
        return [];
      },
      setTransform() { },
      drawImage() { },
      save() { },
      fillText() { },
      restore() { },
      beginPath() { },
      moveTo() { },
      lineTo() { },
      closePath() { },
      stroke() { },
      translate() { },
      scale() { },
      rotate() { },
      arc() { },
      fill() { },
      measureText() {
        return { width: 0 };
      },
      transform() { },
      rect() { },
      clip() { },
    };
  }
}
function fullUrl(elm, attrName) {
  const val = elm.getAttribute(attrName) || '';
  if (elm.ownerDocument != null) {
    const win = elm.ownerDocument.defaultView;
    if (win != null) {
      const loc = win.location;
      if (loc != null) {
        try {
          const url = new URL(val, loc.href);
          return url.href;
        }
        catch (e) { }
      }
    }
  }
  return val.replace(/\'|\"/g, '').trim();
}
function patchPropAttributes(prototype, attrs, defaults = {}) {
  Object.keys(attrs).forEach(propName => {
    const attr = attrs[propName];
    const defaultValue = defaults[propName];
    if (attr === Boolean) {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName);
        },
        set(value) {
          if (value) {
            this.setAttribute(propName, '');
          }
          else {
            this.removeAttribute(propName);
          }
        },
      });
    }
    else if (attr === Number) {
      Object.defineProperty(prototype, propName, {
        get() {
          const value = this.getAttribute(propName);
          return value ? parseInt(value, 10) : defaultValue === undefined ? 0 : defaultValue;
        },
        set(value) {
          this.setAttribute(propName, value);
        },
      });
    }
    else {
      Object.defineProperty(prototype, propName, {
        get() {
          return this.hasAttribute(propName) ? this.getAttribute(propName) : defaultValue || '';
        },
        set(value) {
          this.setAttribute(propName, value);
        },
      });
    }
  });
}
MockElement.prototype.cloneNode = function (deep) {
  // because we're creating elements, which extending specific HTML base classes there
  // is a MockElement circular reference that bundling has trouble dealing with so
  // the fix is to add cloneNode() to MockElement's prototype after the HTML classes
  const cloned = createElement(this.ownerDocument, this.nodeName);
  cloned.attributes = cloneAttributes(this.attributes);
  const styleCssText = this.getAttribute('style');
  if (styleCssText != null && styleCssText.length > 0) {
    cloned.setAttribute('style', styleCssText);
  }
  if (deep) {
    for (let i = 0, ii = this.childNodes.length; i < ii; i++) {
      const clonedChildNode = this.childNodes[i].cloneNode(true);
      cloned.appendChild(clonedChildNode);
    }
  }
  return cloned;
};

let sharedDocument;
function parseHtmlToDocument(html, ownerDocument = null) {
  if (ownerDocument == null) {
    if (sharedDocument == null) {
      sharedDocument = new MockDocument();
    }
    ownerDocument = sharedDocument;
  }
  return parseDocumentUtil(ownerDocument, html);
}
function parseHtmlToFragment(html, ownerDocument = null) {
  if (ownerDocument == null) {
    if (sharedDocument == null) {
      sharedDocument = new MockDocument();
    }
    ownerDocument = sharedDocument;
  }
  return parseFragmentUtil(ownerDocument, html);
}

class MockHeaders {
  constructor(init) {
    this._values = [];
    if (typeof init === 'object') {
      if (typeof init[Symbol.iterator] === 'function') {
        const kvs = [];
        for (const kv of init) {
          if (typeof kv[Symbol.iterator] === 'function') {
            kvs.push([...kv]);
          }
        }
        for (const kv of kvs) {
          this.append(kv[0], kv[1]);
        }
      }
      else {
        for (const key in init) {
          this.append(key, init[key]);
        }
      }
    }
  }
  append(key, value) {
    this._values.push([key, value + '']);
  }
  delete(key) {
    key = key.toLowerCase();
    for (let i = this._values.length - 1; i >= 0; i--) {
      if (this._values[i][0].toLowerCase() === key) {
        this._values.splice(i, 1);
      }
    }
  }
  entries() {
    const entries = [];
    for (const kv of this.keys()) {
      entries.push([kv, this.get(kv)]);
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: entries[index],
          done: !entries[index],
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  forEach(cb) {
    for (const kv of this.entries()) {
      cb(kv[1], kv[0]);
    }
  }
  get(key) {
    const rtn = [];
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        rtn.push(kv[1]);
      }
    }
    return rtn.length > 0 ? rtn.join(', ') : null;
  }
  has(key) {
    key = key.toLowerCase();
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key) {
        return true;
      }
    }
    return false;
  }
  keys() {
    const keys = [];
    for (const kv of this._values) {
      const key = kv[0].toLowerCase();
      if (!keys.includes(key)) {
        keys.push(key);
      }
    }
    let index = -1;
    return {
      next() {
        index++;
        return {
          value: keys[index],
          done: !keys[index],
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  set(key, value) {
    for (const kv of this._values) {
      if (kv[0].toLowerCase() === key.toLowerCase()) {
        kv[1] = value + '';
        return;
      }
    }
    this.append(key, value);
  }
  values() {
    const values = this._values;
    let index = -1;
    return {
      next() {
        index++;
        const done = !values[index];
        return {
          value: done ? undefined : values[index][1],
          done,
        };
      },
      [Symbol.iterator]() {
        return this;
      },
    };
  }
  [Symbol.iterator]() {
    return this.entries();
  }
}

class MockRequest {
  constructor(input, init = {}) {
    this._method = 'GET';
    this._url = '/';
    this.bodyUsed = false;
    this.cache = 'default';
    this.credentials = 'same-origin';
    this.integrity = '';
    this.keepalive = false;
    this.mode = 'cors';
    this.redirect = 'follow';
    this.referrer = 'about:client';
    this.referrerPolicy = '';
    if (typeof input === 'string') {
      this.url = input;
    }
    else if (input) {
      Object.assign(this, input);
      this.headers = new MockHeaders(input.headers);
    }
    Object.assign(this, init);
    if (init.headers) {
      this.headers = new MockHeaders(init.headers);
    }
    if (!this.headers) {
      this.headers = new MockHeaders();
    }
  }
  get url() {
    if (typeof this._url === 'string') {
      return new URL(this._url, location.href).href;
    }
    return new URL('/', location.href).href;
  }
  set url(value) {
    this._url = value;
  }
  get method() {
    if (typeof this._method === 'string') {
      return this._method.toUpperCase();
    }
    return 'GET';
  }
  set method(value) {
    this._method = value;
  }
  clone() {
    const clone = { ...this };
    clone.headers = new MockHeaders(this.headers);
    return new MockRequest(clone);
  }
}
class MockResponse {
  constructor(body, init = {}) {
    this.ok = true;
    this.status = 200;
    this.statusText = '';
    this.type = 'default';
    this.url = '';
    this._body = body;
    if (init) {
      Object.assign(this, init);
    }
    this.headers = new MockHeaders(init.headers);
  }
  async json() {
    return JSON.parse(this._body);
  }
  async text() {
    return this._body;
  }
  clone() {
    const initClone = { ...this };
    initClone.headers = new MockHeaders(this.headers);
    return new MockResponse(this._body, initClone);
  }
}

function setupGlobal(gbl) {
  if (gbl.window == null) {
    const win = (gbl.window = new MockWindow());
    WINDOW_FUNCTIONS.forEach(fnName => {
      if (!(fnName in gbl)) {
        gbl[fnName] = win[fnName].bind(win);
      }
    });
    WINDOW_PROPS.forEach(propName => {
      if (!(propName in gbl)) {
        Object.defineProperty(gbl, propName, {
          get() {
            return win[propName];
          },
          set(val) {
            win[propName] = val;
          },
          configurable: true,
          enumerable: true,
        });
      }
    });
    GLOBAL_CONSTRUCTORS.forEach(([cstrName]) => {
      gbl[cstrName] = win[cstrName];
    });
  }
  return gbl.window;
}
function teardownGlobal(gbl) {
  const win = gbl.window;
  if (win && typeof win.close === 'function') {
    win.close();
  }
}
function patchWindow(winToBePatched) {
  const mockWin = new MockWindow(false);
  WINDOW_FUNCTIONS.forEach(fnName => {
    if (typeof winToBePatched[fnName] !== 'function') {
      winToBePatched[fnName] = mockWin[fnName].bind(mockWin);
    }
  });
  WINDOW_PROPS.forEach(propName => {
    if (winToBePatched === undefined) {
      Object.defineProperty(winToBePatched, propName, {
        get() {
          return mockWin[propName];
        },
        set(val) {
          mockWin[propName] = val;
        },
        configurable: true,
        enumerable: true,
      });
    }
  });
}
function addGlobalsToWindowPrototype(mockWinPrototype) {
  GLOBAL_CONSTRUCTORS.forEach(([cstrName, Cstr]) => {
    Object.defineProperty(mockWinPrototype, cstrName, {
      get() {
        return this['__' + cstrName] || Cstr;
      },
      set(cstr) {
        this['__' + cstrName] = cstr;
      },
      configurable: true,
      enumerable: true,
    });
  });
}
const WINDOW_FUNCTIONS = [
  'addEventListener',
  'alert',
  'blur',
  'cancelAnimationFrame',
  'cancelIdleCallback',
  'clearInterval',
  'clearTimeout',
  'close',
  'confirm',
  'dispatchEvent',
  'focus',
  'getComputedStyle',
  'matchMedia',
  'open',
  'prompt',
  'removeEventListener',
  'requestAnimationFrame',
  'requestIdleCallback',
  'URL',
];
const WINDOW_PROPS = [
  'customElements',
  'devicePixelRatio',
  'document',
  'history',
  'innerHeight',
  'innerWidth',
  'localStorage',
  'location',
  'navigator',
  'pageXOffset',
  'pageYOffset',
  'performance',
  'screenLeft',
  'screenTop',
  'screenX',
  'screenY',
  'scrollX',
  'scrollY',
  'sessionStorage',
  'CSS',
  'CustomEvent',
  'Event',
  'Element',
  'HTMLElement',
  'Node',
  'NodeList',
  'KeyboardEvent',
  'MouseEvent',
];
const GLOBAL_CONSTRUCTORS = [
  ['CustomEvent', MockCustomEvent],
  ['Event', MockEvent],
  ['Headers', MockHeaders],
  ['KeyboardEvent', MockKeyboardEvent],
  ['MouseEvent', MockMouseEvent],
  ['Request', MockRequest],
  ['Response', MockResponse],
  ['HTMLAnchorElement', MockAnchorElement],
  ['HTMLBaseElement', MockBaseElement],
  ['HTMLButtonElement', MockButtonElement],
  ['HTMLCanvasElement', MockCanvasElement],
  ['HTMLFormElement', MockFormElement],
  ['HTMLImageElement', MockImageElement],
  ['HTMLInputElement', MockInputElement],
  ['HTMLLinkElement', MockLinkElement],
  ['HTMLMetaElement', MockMetaElement],
  ['HTMLScriptElement', MockScriptElement],
  ['HTMLStyleElement', MockStyleElement],
  ['HTMLTemplateElement', MockTemplateElement],
  ['HTMLTitleElement', MockTitleElement],
];

const consoleNoop = () => {
  /**/
};
function createConsole() {
  return {
    debug: consoleNoop,
    error: consoleNoop,
    info: consoleNoop,
    log: consoleNoop,
    warn: consoleNoop,
    dir: consoleNoop,
    dirxml: consoleNoop,
    table: consoleNoop,
    trace: consoleNoop,
    group: consoleNoop,
    groupCollapsed: consoleNoop,
    groupEnd: consoleNoop,
    clear: consoleNoop,
    count: consoleNoop,
    countReset: consoleNoop,
    assert: consoleNoop,
    profile: consoleNoop,
    profileEnd: consoleNoop,
    time: consoleNoop,
    timeLog: consoleNoop,
    timeEnd: consoleNoop,
    timeStamp: consoleNoop,
    context: consoleNoop,
    memory: consoleNoop,
  };
}

class MockHistory {
  constructor() {
    this.items = [];
  }
  get length() {
    return this.items.length;
  }
  back() {
    this.go(-1);
  }
  forward() {
    this.go(1);
  }
  go(_value) {
    //
  }
  pushState(_state, _title, _url) {
    //
  }
  replaceState(_state, _title, _url) {
    //
  }
}

class MockIntersectionObserver {
  constructor() {
    /**/
  }
  disconnect() {
    /**/
  }
  observe() {
    /**/
  }
  takeRecords() {
    return [];
  }
  unobserve() {
    /**/
  }
}

class MockLocation {
  constructor() {
    this.ancestorOrigins = null;
    this.protocol = '';
    this.host = '';
    this.hostname = '';
    this.port = '';
    this.pathname = '';
    this.search = '';
    this.hash = '';
    this.username = '';
    this.password = '';
    this.origin = '';
    this._href = '';
  }
  get href() {
    return this._href;
  }
  set href(value) {
    const url = new URL(value, 'http://mockdoc.stenciljs.com');
    this._href = url.href;
    this.protocol = url.protocol;
    this.host = url.host;
    this.hostname = url.hostname;
    this.port = url.port;
    this.pathname = url.pathname;
    this.search = url.search;
    this.hash = url.hash;
    this.username = url.username;
    this.password = url.password;
    this.origin = url.origin;
  }
  assign(_url) {
    //
  }
  reload(_forcedReload) {
    //
  }
  replace(_url) {
    //
  }
  toString() {
    return this.href;
  }
}

class MockNavigator {
  constructor() {
    this.appCodeName = 'MockNavigator';
    this.appName = 'MockNavigator';
    this.appVersion = 'MockNavigator';
    this.platform = 'MockNavigator';
    this.userAgent = 'MockNavigator';
  }
}

/**
 * https://developer.mozilla.org/en-US/docs/Web/API/Performance
 */
class MockPerformance {
  constructor() {
    this.timeOrigin = Date.now();
  }
  addEventListener() {
    //
  }
  clearMarks() {
    //
  }
  clearMeasures() {
    //
  }
  clearResourceTimings() {
    //
  }
  dispatchEvent() {
    return true;
  }
  getEntries() {
    return [];
  }
  getEntriesByName() {
    return [];
  }
  getEntriesByType() {
    return [];
  }
  mark() {
    //
  }
  measure() {
    //
  }
  get navigation() {
    return {};
  }
  now() {
    return Date.now() - this.timeOrigin;
  }
  get onresourcetimingbufferfull() {
    return null;
  }
  removeEventListener() {
    //
  }
  setResourceTimingBufferSize() {
    //
  }
  get timing() {
    return {};
  }
  toJSON() {
    //
  }
}
function resetPerformance(perf) {
  if (perf != null) {
    try {
      perf.timeOrigin = Date.now();
    }
    catch (e) { }
  }
}

class MockStorage {
  constructor() {
    this.items = new Map();
  }
  key(_value) {
    //
  }
  getItem(key) {
    key = String(key);
    if (this.items.has(key)) {
      return this.items.get(key);
    }
    return null;
  }
  setItem(key, value) {
    if (value == null) {
      value = 'null';
    }
    this.items.set(String(key), String(value));
  }
  removeItem(key) {
    this.items.delete(String(key));
  }
  clear() {
    this.items.clear();
  }
}

const nativeClearInterval = clearInterval;
const nativeClearTimeout = clearTimeout;
const nativeSetInterval = setInterval;
const nativeSetTimeout = setTimeout;
const nativeURL = URL;
class MockWindow {
  constructor(html = null) {
    if (html !== false) {
      this.document = new MockDocument(html, this);
    }
    else {
      this.document = null;
    }
    this.performance = new MockPerformance();
    this.customElements = new MockCustomElementRegistry(this);
    this.console = createConsole();
    resetWindowDefaults(this);
    resetWindowDimensions(this);
  }
  addEventListener(type, handler) {
    addEventListener(this, type, handler);
  }
  alert(msg) {
    if (this.console) {
      this.console.debug(msg);
    }
    else {
      console.debug(msg);
    }
  }
  blur() {
    /**/
  }
  cancelAnimationFrame(id) {
    this.__clearTimeout(id);
  }
  cancelIdleCallback(id) {
    this.__clearTimeout(id);
  }
  get CharacterData() {
    if (this.__charDataCstr == null) {
      const ownerDocument = this.document;
      this.__charDataCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct CharacterData');
        }
      };
    }
    return this.__charDataCstr;
  }
  set CharacterData(charDataCstr) {
    this.__charDataCstr = charDataCstr;
  }
  clearInterval(id) {
    this.__clearInterval(id);
  }
  clearTimeout(id) {
    this.__clearTimeout(id);
  }
  close() {
    resetWindow(this);
  }
  confirm() {
    return false;
  }
  get CSS() {
    return {
      supports: () => true,
    };
  }
  get Document() {
    if (this.__docCstr == null) {
      const win = this;
      this.__docCstr = class extends MockDocument {
        constructor() {
          super(false, win);
          throw new Error('Illegal constructor: cannot construct Document');
        }
      };
    }
    return this.__docCstr;
  }
  set Document(docCstr) {
    this.__docCstr = docCstr;
  }
  get DocumentFragment() {
    if (this.__docFragCstr == null) {
      const ownerDocument = this.document;
      this.__docFragCstr = class extends MockDocumentFragment {
        constructor() {
          super(ownerDocument);
          throw new Error('Illegal constructor: cannot construct DocumentFragment');
        }
      };
    }
    return this.__docFragCstr;
  }
  set DocumentFragment(docFragCstr) {
    this.__docFragCstr = docFragCstr;
  }
  get DocumentType() {
    if (this.__docTypeCstr == null) {
      const ownerDocument = this.document;
      this.__docTypeCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct DocumentType');
        }
      };
    }
    return this.__docTypeCstr;
  }
  set DocumentType(docTypeCstr) {
    this.__docTypeCstr = docTypeCstr;
  }
  get DOMTokenList() {
    if (this.__domTokenListCstr == null) {
      this.__domTokenListCstr = class MockDOMTokenList {
      };
    }
    return this.__domTokenListCstr;
  }
  set DOMTokenList(domTokenListCstr) {
    this.__domTokenListCstr = domTokenListCstr;
  }
  dispatchEvent(ev) {
    return dispatchEvent(this, ev);
  }
  get Element() {
    if (this.__elementCstr == null) {
      const ownerDocument = this.document;
      this.__elementCstr = class extends MockElement {
        constructor() {
          super(ownerDocument, '');
          throw new Error('Illegal constructor: cannot construct Element');
        }
      };
    }
    return this.__elementCstr;
  }
  fetch(input, init) {
    if (typeof fetch === 'function') {
      return fetch(input, init);
    }
    throw new Error(`fetch() not implemented`);
  }
  focus() {
    /**/
  }
  getComputedStyle(_) {
    return {
      cssText: '',
      length: 0,
      parentRule: null,
      getPropertyPriority() {
        return null;
      },
      getPropertyValue() {
        return '';
      },
      item() {
        return null;
      },
      removeProperty() {
        return null;
      },
      setProperty() {
        return null;
      },
    };
  }
  get globalThis() {
    return this;
  }
  get history() {
    if (this.__history == null) {
      this.__history = new MockHistory();
    }
    return this.__history;
  }
  set history(hsty) {
    this.__history = hsty;
  }
  get JSON() {
    return JSON;
  }
  get HTMLElement() {
    if (this.__htmlElementCstr == null) {
      const ownerDocument = this.document;
      this.__htmlElementCstr = class extends MockHTMLElement {
        constructor() {
          super(ownerDocument, '');
          const observedAttributes = this.constructor.observedAttributes;
          if (Array.isArray(observedAttributes) && typeof this.attributeChangedCallback === 'function') {
            observedAttributes.forEach(attrName => {
              const attrValue = this.getAttribute(attrName);
              if (attrValue != null) {
                this.attributeChangedCallback(attrName, null, attrValue);
              }
            });
          }
        }
      };
    }
    return this.__htmlElementCstr;
  }
  set HTMLElement(htmlElementCstr) {
    this.__htmlElementCstr = htmlElementCstr;
  }
  get IntersectionObserver() {
    return MockIntersectionObserver;
  }
  get localStorage() {
    if (this.__localStorage == null) {
      this.__localStorage = new MockStorage();
    }
    return this.__localStorage;
  }
  set localStorage(locStorage) {
    this.__localStorage = locStorage;
  }
  get location() {
    if (this.__location == null) {
      this.__location = new MockLocation();
    }
    return this.__location;
  }
  set location(val) {
    if (typeof val === 'string') {
      if (this.__location == null) {
        this.__location = new MockLocation();
      }
      this.__location.href = val;
    }
    else {
      this.__location = val;
    }
  }
  matchMedia() {
    return {
      matches: false,
    };
  }
  get Node() {
    if (this.__nodeCstr == null) {
      const ownerDocument = this.document;
      this.__nodeCstr = class extends MockNode {
        constructor() {
          super(ownerDocument, 0, 'test', '');
          throw new Error('Illegal constructor: cannot construct Node');
        }
      };
    }
    return this.__nodeCstr;
  }
  get NodeList() {
    if (this.__nodeListCstr == null) {
      const ownerDocument = this.document;
      this.__nodeListCstr = class extends MockNodeList {
        constructor() {
          super(ownerDocument, [], 0);
          throw new Error('Illegal constructor: cannot construct NodeList');
        }
      };
    }
    return this.__nodeListCstr;
  }
  get navigator() {
    if (this.__navigator == null) {
      this.__navigator = new MockNavigator();
    }
    return this.__navigator;
  }
  set navigator(nav) {
    this.__navigator = nav;
  }
  get parent() {
    return null;
  }
  prompt() {
    return '';
  }
  open() {
    return null;
  }
  get origin() {
    return this.location.origin;
  }
  removeEventListener(type, handler) {
    removeEventListener(this, type, handler);
  }
  requestAnimationFrame(callback) {
    return this.setTimeout(() => {
      callback(Date.now());
    }, 0);
  }
  requestIdleCallback(callback) {
    return this.setTimeout(() => {
      callback({
        didTimeout: false,
        timeRemaining: () => 0,
      });
    }, 0);
  }
  scroll(_x, _y) {
    /**/
  }
  scrollBy(_x, _y) {
    /**/
  }
  scrollTo(_x, _y) {
    /**/
  }
  get self() {
    return this;
  }
  get sessionStorage() {
    if (this.__sessionStorage == null) {
      this.__sessionStorage = new MockStorage();
    }
    return this.__sessionStorage;
  }
  set sessionStorage(locStorage) {
    this.__sessionStorage = locStorage;
  }
  setInterval(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    if (this.__allowInterval) {
      const intervalId = this.__setInterval(() => {
        if (this.__timeouts) {
          this.__timeouts.delete(intervalId);
          try {
            callback(...args);
          }
          catch (e) {
            if (this.console) {
              this.console.error(e);
            }
            else {
              console.error(e);
            }
          }
        }
      }, ms);
      if (this.__timeouts) {
        this.__timeouts.add(intervalId);
      }
      return intervalId;
    }
    const timeoutId = this.__setTimeout(() => {
      if (this.__timeouts) {
        this.__timeouts.delete(timeoutId);
        try {
          callback(...args);
        }
        catch (e) {
          if (this.console) {
            this.console.error(e);
          }
          else {
            console.error(e);
          }
        }
      }
    }, ms);
    if (this.__timeouts) {
      this.__timeouts.add(timeoutId);
    }
    return timeoutId;
  }
  setTimeout(callback, ms, ...args) {
    if (this.__timeouts == null) {
      this.__timeouts = new Set();
    }
    ms = Math.min(ms, this.__maxTimeout);
    const timeoutId = this.__setTimeout(() => {
      if (this.__timeouts) {
        this.__timeouts.delete(timeoutId);
        try {
          callback(...args);
        }
        catch (e) {
          if (this.console) {
            this.console.error(e);
          }
          else {
            console.error(e);
          }
        }
      }
    }, ms);
    if (this.__timeouts) {
      this.__timeouts.add(timeoutId);
    }
    return timeoutId;
  }
  get top() {
    return this;
  }
  get window() {
    return this;
  }
  onanimationstart() {
    /**/
  }
  onanimationend() {
    /**/
  }
  onanimationiteration() {
    /**/
  }
  onabort() {
    /**/
  }
  onauxclick() {
    /**/
  }
  onbeforecopy() {
    /**/
  }
  onbeforecut() {
    /**/
  }
  onbeforepaste() {
    /**/
  }
  onblur() {
    /**/
  }
  oncancel() {
    /**/
  }
  oncanplay() {
    /**/
  }
  oncanplaythrough() {
    /**/
  }
  onchange() {
    /**/
  }
  onclick() {
    /**/
  }
  onclose() {
    /**/
  }
  oncontextmenu() {
    /**/
  }
  oncopy() {
    /**/
  }
  oncuechange() {
    /**/
  }
  oncut() {
    /**/
  }
  ondblclick() {
    /**/
  }
  ondrag() {
    /**/
  }
  ondragend() {
    /**/
  }
  ondragenter() {
    /**/
  }
  ondragleave() {
    /**/
  }
  ondragover() {
    /**/
  }
  ondragstart() {
    /**/
  }
  ondrop() {
    /**/
  }
  ondurationchange() {
    /**/
  }
  onemptied() {
    /**/
  }
  onended() {
    /**/
  }
  onerror() {
    /**/
  }
  onfocus() {
    /**/
  }
  onfocusin() {
    /**/
  }
  onfocusout() {
    /**/
  }
  onformdata() {
    /**/
  }
  onfullscreenchange() {
    /**/
  }
  onfullscreenerror() {
    /**/
  }
  ongotpointercapture() {
    /**/
  }
  oninput() {
    /**/
  }
  oninvalid() {
    /**/
  }
  onkeydown() {
    /**/
  }
  onkeypress() {
    /**/
  }
  onkeyup() {
    /**/
  }
  onload() {
    /**/
  }
  onloadeddata() {
    /**/
  }
  onloadedmetadata() {
    /**/
  }
  onloadstart() {
    /**/
  }
  onlostpointercapture() {
    /**/
  }
  onmousedown() {
    /**/
  }
  onmouseenter() {
    /**/
  }
  onmouseleave() {
    /**/
  }
  onmousemove() {
    /**/
  }
  onmouseout() {
    /**/
  }
  onmouseover() {
    /**/
  }
  onmouseup() {
    /**/
  }
  onmousewheel() {
    /**/
  }
  onpaste() {
    /**/
  }
  onpause() {
    /**/
  }
  onplay() {
    /**/
  }
  onplaying() {
    /**/
  }
  onpointercancel() {
    /**/
  }
  onpointerdown() {
    /**/
  }
  onpointerenter() {
    /**/
  }
  onpointerleave() {
    /**/
  }
  onpointermove() {
    /**/
  }
  onpointerout() {
    /**/
  }
  onpointerover() {
    /**/
  }
  onpointerup() {
    /**/
  }
  onprogress() {
    /**/
  }
  onratechange() {
    /**/
  }
  onreset() {
    /**/
  }
  onresize() {
    /**/
  }
  onscroll() {
    /**/
  }
  onsearch() {
    /**/
  }
  onseeked() {
    /**/
  }
  onseeking() {
    /**/
  }
  onselect() {
    /**/
  }
  onselectstart() {
    /**/
  }
  onstalled() {
    /**/
  }
  onsubmit() {
    /**/
  }
  onsuspend() {
    /**/
  }
  ontimeupdate() {
    /**/
  }
  ontoggle() {
    /**/
  }
  onvolumechange() {
    /**/
  }
  onwaiting() {
    /**/
  }
  onwebkitfullscreenchange() {
    /**/
  }
  onwebkitfullscreenerror() {
    /**/
  }
  onwheel() {
    /**/
  }
}
addGlobalsToWindowPrototype(MockWindow.prototype);
function resetWindowDefaults(win) {
  win.__clearInterval = nativeClearInterval;
  win.__clearTimeout = nativeClearTimeout;
  win.__setInterval = nativeSetInterval;
  win.__setTimeout = nativeSetTimeout;
  win.__maxTimeout = 30000;
  win.__allowInterval = true;
  win.URL = nativeURL;
}
function cloneWindow(srcWin, opts = {}) {
  if (srcWin == null) {
    return null;
  }
  const clonedWin = new MockWindow(false);
  if (!opts.customElementProxy) {
    srcWin.customElements = null;
  }
  if (srcWin.document != null) {
    const clonedDoc = new MockDocument(false, clonedWin);
    clonedWin.document = clonedDoc;
    clonedDoc.documentElement = srcWin.document.documentElement.cloneNode(true);
  }
  else {
    clonedWin.document = new MockDocument(null, clonedWin);
  }
  return clonedWin;
}
function cloneDocument(srcDoc) {
  if (srcDoc == null) {
    return null;
  }
  const dstWin = cloneWindow(srcDoc.defaultView);
  return dstWin.document;
}
/**
 * Constrain setTimeout() to 1ms, but still async. Also
 * only allow setInterval() to fire once, also constrained to 1ms.
 */
function constrainTimeouts(win) {
  win.__allowInterval = false;
  win.__maxTimeout = 0;
}
function resetWindow(win) {
  if (win != null) {
    if (win.__timeouts) {
      win.__timeouts.forEach(timeoutId => {
        nativeClearInterval(timeoutId);
        nativeClearTimeout(timeoutId);
      });
      win.__timeouts.clear();
    }
    if (win.customElements && win.customElements.clear) {
      win.customElements.clear();
    }
    resetDocument(win.document);
    resetPerformance(win.performance);
    for (const key in win) {
      if (win.hasOwnProperty(key) && key !== 'document' && key !== 'performance' && key !== 'customElements') {
        delete win[key];
      }
    }
    resetWindowDefaults(win);
    resetWindowDimensions(win);
    resetEventListeners(win);
    if (win.document != null) {
      try {
        win.document.defaultView = win;
      }
      catch (e) { }
    }
    // ensure we don't hold onto nodeFetch values
    win.fetch = null;
    win.Headers = null;
    win.Request = null;
    win.Response = null;
    win.FetchError = null;
  }
}
function resetWindowDimensions(win) {
  try {
    win.devicePixelRatio = 1;
    win.innerHeight = 768;
    win.innerWidth = 1366;
    win.pageXOffset = 0;
    win.pageYOffset = 0;
    win.screenLeft = 0;
    win.screenTop = 0;
    win.screenX = 0;
    win.screenY = 0;
    win.scrollX = 0;
    win.scrollY = 0;
    win.screen = {
      availHeight: win.innerHeight,
      availLeft: 0,
      availTop: 0,
      availWidth: win.innerWidth,
      colorDepth: 24,
      height: win.innerHeight,
      keepAwake: false,
      orientation: {
        angle: 0,
        type: 'portrait-primary',
      },
      pixelDepth: 24,
      width: win.innerWidth,
    };
  }
  catch (e) { }
}

class MockDocument extends MockHTMLElement {
  constructor(html = null, win = null) {
    super(null, null);
    this.nodeName = "#document" /* DOCUMENT_NODE */;
    this.nodeType = 9 /* DOCUMENT_NODE */;
    this.defaultView = win;
    this.cookie = '';
    this.referrer = '';
    this.appendChild(this.createDocumentTypeNode());
    if (typeof html === 'string') {
      const parsedDoc = parseDocumentUtil(this, html);
      const documentElement = parsedDoc.children.find(elm => elm.nodeName === 'HTML');
      if (documentElement != null) {
        this.appendChild(documentElement);
        setOwnerDocument(documentElement, this);
      }
    }
    else if (html !== false) {
      const documentElement = new MockHTMLElement(this, 'html');
      this.appendChild(documentElement);
      documentElement.appendChild(new MockHTMLElement(this, 'head'));
      documentElement.appendChild(new MockHTMLElement(this, 'body'));
    }
  }
  get dir() {
    return this.documentElement.dir;
  }
  set dir(value) {
    this.documentElement.dir = value;
  }
  get location() {
    if (this.defaultView != null) {
      return this.defaultView.location;
    }
    return null;
  }
  set location(val) {
    if (this.defaultView != null) {
      this.defaultView.location = val;
    }
  }
  get baseURI() {
    const baseNode = this.head.childNodes.find(node => node.nodeName === 'BASE');
    if (baseNode) {
      return baseNode.href;
    }
    return this.URL;
  }
  get URL() {
    return this.location.href;
  }
  get styleSheets() {
    return this.querySelectorAll('style');
  }
  get scripts() {
    return this.querySelectorAll('script');
  }
  get forms() {
    return this.querySelectorAll('form');
  }
  get images() {
    return this.querySelectorAll('img');
  }
  get scrollingElement() {
    return this.documentElement;
  }
  get documentElement() {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeName === 'HTML') {
        return this.childNodes[i];
      }
    }
    const documentElement = new MockHTMLElement(this, 'html');
    this.appendChild(documentElement);
    return documentElement;
  }
  set documentElement(documentElement) {
    for (let i = this.childNodes.length - 1; i >= 0; i--) {
      if (this.childNodes[i].nodeType !== 10 /* DOCUMENT_TYPE_NODE */) {
        this.childNodes[i].remove();
      }
    }
    if (documentElement != null) {
      this.appendChild(documentElement);
      setOwnerDocument(documentElement, this);
    }
  }
  get head() {
    const documentElement = this.documentElement;
    for (let i = 0; i < documentElement.childNodes.length; i++) {
      if (documentElement.childNodes[i].nodeName === 'HEAD') {
        return documentElement.childNodes[i];
      }
    }
    const head = new MockHTMLElement(this, 'head');
    documentElement.insertBefore(head, documentElement.firstChild);
    return head;
  }
  set head(head) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'HEAD') {
        documentElement.childNodes[i].remove();
      }
    }
    if (head != null) {
      documentElement.insertBefore(head, documentElement.firstChild);
      setOwnerDocument(head, this);
    }
  }
  get body() {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'BODY') {
        return documentElement.childNodes[i];
      }
    }
    const body = new MockHTMLElement(this, 'body');
    documentElement.appendChild(body);
    return body;
  }
  set body(body) {
    const documentElement = this.documentElement;
    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {
      if (documentElement.childNodes[i].nodeName === 'BODY') {
        documentElement.childNodes[i].remove();
      }
    }
    if (body != null) {
      documentElement.appendChild(body);
      setOwnerDocument(body, this);
    }
  }
  appendChild(newNode) {
    newNode.remove();
    newNode.parentNode = this;
    this.childNodes.push(newNode);
    return newNode;
  }
  createComment(data) {
    return new MockComment(this, data);
  }
  createAttribute(attrName) {
    return new MockAttr(attrName.toLowerCase(), '');
  }
  createAttributeNS(namespaceURI, attrName) {
    return new MockAttr(attrName, '', namespaceURI);
  }
  createElement(tagName) {
    if (tagName === "#document" /* DOCUMENT_NODE */) {
      const doc = new MockDocument(false);
      doc.nodeName = tagName;
      doc.parentNode = null;
      return doc;
    }
    return createElement(this, tagName);
  }
  createElementNS(namespaceURI, tagName) {
    const elmNs = createElementNS(this, namespaceURI, tagName);
    elmNs.namespaceURI = namespaceURI;
    return elmNs;
  }
  createTextNode(text) {
    return new MockTextNode(this, text);
  }
  createDocumentFragment() {
    return new MockDocumentFragment(this);
  }
  createDocumentTypeNode() {
    return new MockDocumentTypeNode(this);
  }
  getElementById(id) {
    return getElementById(this, id);
  }
  getElementsByName(elmName) {
    return getElementsByName(this, elmName.toLowerCase());
  }
  get title() {
    const title = this.head.childNodes.find(elm => elm.nodeName === 'TITLE');
    if (title != null && typeof title.textContent === 'string') {
      return title.textContent.trim();
    }
    return '';
  }
  set title(value) {
    const head = this.head;
    let title = head.childNodes.find(elm => elm.nodeName === 'TITLE');
    if (title == null) {
      title = this.createElement('title');
      head.appendChild(title);
    }
    title.textContent = value;
  }
}
function createDocument(html = null) {
  return new MockWindow(html).document;
}
function createFragment(html) {
  return parseHtmlToFragment(html, null);
}
function resetDocument(doc) {
  if (doc != null) {
    resetEventListeners(doc);
    const documentElement = doc.documentElement;
    if (documentElement != null) {
      resetElement(documentElement);
      for (let i = 0, ii = documentElement.childNodes.length; i < ii; i++) {
        const childNode = documentElement.childNodes[i];
        resetElement(childNode);
        childNode.childNodes.length = 0;
      }
    }
    for (const key in doc) {
      if (doc.hasOwnProperty(key) && !DOC_KEY_KEEPERS.has(key)) {
        delete doc[key];
      }
    }
    try {
      doc.nodeName = "#document" /* DOCUMENT_NODE */;
    }
    catch (e) { }
    try {
      doc.nodeType = 9 /* DOCUMENT_NODE */;
    }
    catch (e) { }
    try {
      doc.cookie = '';
    }
    catch (e) { }
    try {
      doc.referrer = '';
    }
    catch (e) { }
  }
}
const DOC_KEY_KEEPERS = new Set([
  'nodeName',
  'nodeType',
  'nodeValue',
  'ownerDocument',
  'parentNode',
  'childNodes',
  '_shadowRoot',
]);
function getElementById(elm, id) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.id === id) {
      return childElm;
    }
    const childElmFound = getElementById(childElm, id);
    if (childElmFound != null) {
      return childElmFound;
    }
  }
  return null;
}
function getElementsByName(elm, elmName, foundElms = []) {
  const children = elm.children;
  for (let i = 0, ii = children.length; i < ii; i++) {
    const childElm = children[i];
    if (childElm.name && childElm.name.toLowerCase() === elmName) {
      foundElms.push(childElm);
    }
    getElementsByName(childElm, elmName, foundElms);
  }
  return foundElms;
}
function setOwnerDocument(elm, ownerDocument) {
  for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {
    elm.childNodes[i].ownerDocument = ownerDocument;
    if (elm.childNodes[i].nodeType === 1 /* ELEMENT_NODE */) {
      setOwnerDocument(elm.childNodes[i], ownerDocument);
    }
  }
}

function hydrateFactory($stencilWindow, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve) {
  var globalThis = $stencilWindow;
  var self = $stencilWindow;
  var top = $stencilWindow;
  var parent = $stencilWindow;

  var addEventListener = $stencilWindow.addEventListener.bind($stencilWindow);
  var alert = $stencilWindow.alert.bind($stencilWindow);
  var blur = $stencilWindow.blur.bind($stencilWindow);
  var cancelAnimationFrame = $stencilWindow.cancelAnimationFrame.bind($stencilWindow);
  var cancelIdleCallback = $stencilWindow.cancelIdleCallback.bind($stencilWindow);
  var clearInterval = $stencilWindow.clearInterval.bind($stencilWindow);
  var clearTimeout = $stencilWindow.clearTimeout.bind($stencilWindow);
  var close = () => {};
  var confirm = $stencilWindow.confirm.bind($stencilWindow);
  var dispatchEvent = $stencilWindow.dispatchEvent.bind($stencilWindow);
  var focus = $stencilWindow.focus.bind($stencilWindow);
  var getComputedStyle = $stencilWindow.getComputedStyle.bind($stencilWindow);
  var matchMedia = $stencilWindow.matchMedia.bind($stencilWindow);
  var open = $stencilWindow.open.bind($stencilWindow);
  var prompt = $stencilWindow.prompt.bind($stencilWindow);
  var removeEventListener = $stencilWindow.removeEventListener.bind($stencilWindow);
  var requestAnimationFrame = $stencilWindow.requestAnimationFrame.bind($stencilWindow);
  var requestIdleCallback = $stencilWindow.requestIdleCallback.bind($stencilWindow);
  var setInterval = $stencilWindow.setInterval.bind($stencilWindow);
  var setTimeout = $stencilWindow.setTimeout.bind($stencilWindow);

  var CharacterData = $stencilWindow.CharacterData;
  var CSS = $stencilWindow.CSS;
  var CustomEvent = $stencilWindow.CustomEvent;
  var Document = $stencilWindow.Document;
  var DocumentFragment = $stencilWindow.DocumentFragment;
  var DocumentType = $stencilWindow.DocumentType;
  var DOMTokenList = $stencilWindow.DOMTokenList;
  var Element = $stencilWindow.Element;
  var Event = $stencilWindow.Event;
  var HTMLAnchorElement = $stencilWindow.HTMLAnchorElement;
  var HTMLBaseElement = $stencilWindow.HTMLBaseElement;
  var HTMLButtonElement = $stencilWindow.HTMLButtonElement;
  var HTMLCanvasElement = $stencilWindow.HTMLCanvasElement;
  var HTMLElement = $stencilWindow.HTMLElement;
  var HTMLFormElement = $stencilWindow.HTMLFormElement;
  var HTMLImageElement = $stencilWindow.HTMLImageElement;
  var HTMLInputElement = $stencilWindow.HTMLInputElement;
  var HTMLLinkElement = $stencilWindow.HTMLLinkElement;
  var HTMLMetaElement = $stencilWindow.HTMLMetaElement;
  var HTMLScriptElement = $stencilWindow.HTMLScriptElement;
  var HTMLStyleElement = $stencilWindow.HTMLStyleElement;
  var HTMLTemplateElement = $stencilWindow.HTMLTemplateElement;
  var HTMLTitleElement = $stencilWindow.HTMLTitleElement;
  var IntersectionObserver = $stencilWindow.IntersectionObserver;
  var KeyboardEvent = $stencilWindow.KeyboardEvent;
  var MouseEvent = $stencilWindow.MouseEvent;
  var Node = $stencilWindow.Node;
  var NodeList = $stencilWindow.NodeList;
  var URL = $stencilWindow.URL;

  var console = $stencilWindow.console;
  var customElements = $stencilWindow.customElements;
  var history = $stencilWindow.history;
  var localStorage = $stencilWindow.localStorage;
  var location = $stencilWindow.location;
  var navigator = $stencilWindow.navigator;
  var performance = $stencilWindow.performance;
  var sessionStorage = $stencilWindow.sessionStorage;

  var devicePixelRatio = $stencilWindow.devicePixelRatio;
  var innerHeight = $stencilWindow.innerHeight;
  var innerWidth = $stencilWindow.innerWidth;
  var origin = $stencilWindow.origin;
  var pageXOffset = $stencilWindow.pageXOffset;
  var pageYOffset = $stencilWindow.pageYOffset;
  var screen = $stencilWindow.screen;
  var screenLeft = $stencilWindow.screenLeft;
  var screenTop = $stencilWindow.screenTop;
  var screenX = $stencilWindow.screenX;
  var screenY = $stencilWindow.screenY;
  var scrollX = $stencilWindow.scrollX;
  var scrollY = $stencilWindow.scrollY;
  var exports = {};

  var fetch, FetchError, Headers, Request, Response;

  if (typeof $stencilWindow.fetch === 'function') {
  fetch = $stencilWindow.fetch;
  } else {
  fetch = $stencilWindow.fetch = function() { throw new Error('fetch() is not implemented'); };
  }

  if (typeof $stencilWindow.FetchError === 'function') {
  FetchError = $stencilWindow.FetchError;
  } else {
  FetchError = $stencilWindow.FetchError = class FetchError { constructor() { throw new Error('FetchError is not implemented'); } };
  }

  if (typeof $stencilWindow.Headers === 'function') {
  Headers = $stencilWindow.Headers;
  } else {
  Headers = $stencilWindow.Headers = class Headers { constructor() { throw new Error('Headers is not implemented'); } };
  }

  if (typeof $stencilWindow.Request === 'function') {
  Request = $stencilWindow.Request;
  } else {
  Request = $stencilWindow.Request = class Request { constructor() { throw new Error('Request is not implemented'); } };
  }

  if (typeof $stencilWindow.Response === 'function') {
  Response = $stencilWindow.Response;
  } else {
  Response = $stencilWindow.Response = class Response { constructor() { throw new Error('Response is not implemented'); } };
  }

  function hydrateAppClosure($stencilWindow) {
  const window = $stencilWindow;
  const document = $stencilWindow.document;
  /*hydrateAppClosure start*/


var process = require('process');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var process__default = /*#__PURE__*/_interopDefaultLegacy(process);

var global$1 = (typeof global !== "undefined" ? global :
  typeof self !== "undefined" ? self :
  typeof window !== "undefined" ? window : {});

const NAMESPACE = 'my-component';
const BUILD = /* my-component */ { allRenderFn: true, appendChildSlotFix: false, asyncLoading: true, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: false, cmpShouldUpdate: false, cmpWillLoad: true, cmpWillRender: false, cmpWillUpdate: false, connectedCallback: false, constructableCSS: false, cssAnnotations: true, cssVarShim: false, devTools: false, disconnectedCallback: false, dynamicImportShim: false, element: false, event: false, hasRenderFn: true, hostListener: false, hostListenerTarget: false, hostListenerTargetBody: false, hostListenerTargetDocument: false, hostListenerTargetParent: false, hostListenerTargetWindow: false, hotModuleReplacement: false, hydrateClientSide: true, hydrateServerSide: true, hydratedAttribute: false, hydratedClass: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: false, observeAttribute: true, profile: false, prop: true, propBoolean: false, propMutable: true, propNumber: true, propString: true, reflect: false, safari10: false, scoped: false, scriptDataOpts: false, shadowDelegatesFocus: false, shadowDom: true, shadowDomShim: true, slot: true, slotChildNodesFix: false, slotRelocation: true, state: false, style: true, svg: true, taskQueue: true, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: false, vdomKey: false, vdomListener: true, vdomPropOrAttr: true, vdomRef: false, vdomRender: true, vdomStyle: false, vdomText: true, vdomXlink: false, watchCallback: true };

function componentOnReady() {
 return getHostRef(this).$onReadyPromise$;
}

function forceUpdate() {}

function hydrateApp(e, t, o, n, s) {
 function l() {
  if (global$1.clearTimeout(p), i.clear(), r.clear(), !h) {
   h = !0;
   try {
    t.clientHydrateAnnotations && insertVdomAnnotations(e.document, t.staticComponents), 
    e.dispatchEvent(new e.Event("DOMContentLoaded")), e.document.createElement = c, 
    e.document.createElementNS = $;
   } catch (e) {
    renderCatchError(t, o, e);
   }
  }
  n(e, t, o, s);
 }
 function a(e) {
  renderCatchError(t, o, e), l();
 }
 const r = new Set, i = new Set, d = new Set, c = e.document.createElement, $ = e.document.createElementNS, m = Promise.resolve();
 let p, h = !1;
 try {
  function u() {
   return g(this);
  }
  function f(e) {
   if (isValidComponent(e, t) && !getHostRef(e)) {
    const t = loadModule({
     $tagName$: e.nodeName.toLowerCase(),
     $flags$: null
    });
    null != t && null != t.cmpMeta && (i.add(e), e.connectedCallback = u, registerHost(e, t.cmpMeta), 
    function o(e, t) {
     if ("function" != typeof e.componentOnReady && (e.componentOnReady = componentOnReady), 
     "function" != typeof e.forceUpdate && (e.forceUpdate = forceUpdate), 1 & t.$flags$ && (e.shadowRoot = e), 
     null != t.$members$) {
      const o = getHostRef(e);
      Object.entries(t.$members$).forEach((([n, s]) => {
       const l = s[0];
       if (31 & l) {
        const a = s[1] || n, r = e.getAttribute(a);
        if (null != r) {
         const e = parsePropertyValue(r, l);
         o.$instanceValues$.set(n, e);
        }
        const i = e[n];
        void 0 !== i && (o.$instanceValues$.set(n, i), delete e[n]), Object.defineProperty(e, n, {
         get() {
          return getValue(this, n);
         },
         set(e) {
          setValue(this, n, e, t);
         },
         configurable: !0,
         enumerable: !0
        });
       } else 64 & l && Object.defineProperty(e, n, {
        value() {
         const e = getHostRef(this), t = arguments;
         return e.$onInstancePromise$.then((() => e.$lazyInstance$[n].apply(e.$lazyInstance$, t))).catch(consoleError);
        }
       });
      }));
     }
    }(e, t.cmpMeta));
   }
  }
  function g(n) {
   return i.delete(n), isValidComponent(n, t) && o.hydratedCount < t.maxHydrateCount && !r.has(n) && shouldHydrate(n) ? (r.add(n), 
   async function s(e, t, o, n, l) {
    o = o.toLowerCase();
    const a = loadModule({
     $tagName$: o,
     $flags$: null
    });
    if (null != a && null != a.cmpMeta) {
     l.add(n);
     try {
      connectedCallback(n), await n.componentOnReady(), t.hydratedCount++;
      const e = getHostRef(n), s = e.$modeName$ ? e.$modeName$ : "$";
      t.components.some((e => e.tag === o && e.mode === s)) || t.components.push({
       tag: o,
       mode: s,
       count: 0,
       depth: -1
      });
     } catch (t) {
      e.console.error(t);
     }
     l.delete(n);
    }
   }(e, o, n.nodeName, n, d)) : m;
  }
  e.document.createElement = function t(o) {
   const n = c.call(e.document, o);
   return f(n), n;
  }, e.document.createElementNS = function t(o, n) {
   const s = $.call(e.document, o, n);
   return f(s), s;
  }, p = global$1.setTimeout((function L() {
   a(`Hydrate exceeded timeout${function e(t) {
    return Array.from(t).map(waitingOnElementMsg);
   }(d)}`);
  }), t.timeout), plt.$resourcesUrl$ = new URL(t.resourcesUrl || "./", doc.baseURI).href, 
  function e(t) {
   if (null != t && 1 === t.nodeType) {
    f(t);
    const o = t.children;
    for (let t = 0, n = o.length; t < n; t++) e(o[t]);
   }
  }(e.document.body), function e() {
   const t = Array.from(i).filter((e => e.parentElement));
   return t.length > 0 ? Promise.all(t.map(g)).then(e) : m;
  }().then(l).catch(a);
 } catch (e) {
  a(e);
 }
}

function isValidComponent(e, t) {
 if (null != e && 1 === e.nodeType) {
  const o = e.nodeName;
  if ("string" == typeof o && o.includes("-")) return !t.excludeComponents.includes(o.toLowerCase());
 }
 return !1;
}

function shouldHydrate(e) {
 if (9 === e.nodeType) return !0;
 if (NO_HYDRATE_TAGS.has(e.nodeName)) return !1;
 if (e.hasAttribute("no-prerender")) return !1;
 const t = e.parentNode;
 return null == t || shouldHydrate(t);
}

function renderCatchError(e, t, o) {
 const n = {
  level: "error",
  type: "build",
  header: "Hydrate Error",
  messageText: "",
  relFilePath: null,
  absFilePath: null,
  lines: []
 };
 if (e.url) try {
  const t = new URL(e.url);
  "/" !== t.pathname && (n.header += ": " + t.pathname);
 } catch (e) {}
 null != o && (null != o.stack ? n.messageText = o.stack.toString() : null != o.message ? n.messageText = o.message.toString() : n.messageText = o.toString()), 
 t.diagnostics.push(n);
}

function printTag(e) {
 let t = `<${e.nodeName.toLowerCase()}`;
 if (Array.isArray(e.attributes)) for (let o = 0; o < e.attributes.length; o++) {
  const n = e.attributes[o];
  t += ` ${n.name}`, "" !== n.value && (t += `="${n.value}"`);
 }
 return t += ">", t;
}

function waitingOnElementMsg(e) {
 let t = "";
 if (e) {
  const o = [];
  t = " - waiting on:";
  let n = e;
  for (;n && 9 !== n.nodeType && "BODY" !== n.nodeName; ) o.unshift(printTag(n)), 
  n = n.parentElement;
  let s = "";
  for (const e of o) s += "  ", t += `\n${s}${e}`;
 }
 return t;
}

const createTime = (e, t = "") => {
 return () => {};
}, rootAppliedStyles = new WeakMap, registerStyle = (e, t, o) => {
 let n = styles.get(e);
 n = t, styles.set(e, n);
}, addStyle = (e, t, o, n) => {
 let s = getScopeId(t), l = styles.get(s);
 if (e = 11 === e.nodeType ? e : doc, l) if ("string" == typeof l) {
  e = e.head || e;
  let o, a = rootAppliedStyles.get(e);
  if (a || rootAppliedStyles.set(e, a = new Set), !a.has(s)) {
   if (e.host && (o = e.querySelector(`[sty-id="${s}"]`))) o.innerHTML = l; else {
    o = doc.createElement("style"), o.innerHTML = l;
    o.setAttribute("sty-id", s), 
    e.insertBefore(o, e.querySelector("link"));
   }
   a && a.add(s);
  }
 }
 return s;
}, attachStyles = e => {
 const t = e.$cmpMeta$, o = e.$hostElement$, n = t.$flags$, s = createTime("attachStyles", t.$tagName$), l = addStyle(o.getRootNode(), t);
 10 & n && (o["s-sc"] = l, 
 o.classList.add(l + "-h"), BUILD.scoped  ), 
 s();
}, getScopeId = (e, t) => "sc-" + (e.$tagName$), EMPTY_OBJ = {}, isComplexType = e => "object" == (e = typeof e) || "function" === e, isPromise = e => !!e && ("object" == typeof e || "function" == typeof e) && "function" == typeof e.then, h = (e, t, ...o) => {
 let n = null, l = null, a = !1, r = !1, i = [];
 const d = t => {
  for (let o = 0; o < t.length; o++) n = t[o], Array.isArray(n) ? d(n) : null != n && "boolean" != typeof n && ((a = "function" != typeof e && !isComplexType(n)) ? n = String(n) : BUILD.isDev  , 
  a && r ? i[i.length - 1].$text$ += n : i.push(a ? newVNode(null, n) : n), r = a);
 };
 if (d(o), t && (t.name && (l = t.name), BUILD.vdomClass)) {
  const e = t.className || t.class;
  e && (t.class = "object" != typeof e ? e : Object.keys(e).filter((t => e[t])).join(" "));
 }
 const c = newVNode(e, null);
 return c.$attrs$ = t, i.length > 0 && (c.$children$ = i), (c.$name$ = l), c;
}, newVNode = (e, t) => {
 const o = {
  $flags$: 0,
  $tag$: e,
  $text$: t,
  $elm$: null,
  $children$: null
 };
 return (o.$attrs$ = null), (o.$name$ = null), o;
}, Host = {}, isHost = e => e && e.$tag$ === Host, setAccessor = (e, t, o, n, s, l) => {
 if (o !== n) {
  let a = isMemberInElement(e, t), r = t.toLowerCase();
  if ("class" === t) {
   const t = e.classList, s = parseClassList(o), l = parseClassList(n);
   t.remove(...s.filter((e => e && !l.includes(e)))), t.add(...l.filter((e => e && !s.includes(e))));
  } else if ((a ) || "o" !== t[0] || "n" !== t[1]) {
   {
    const i = isComplexType(n);
    if ((a || i && null !== n) && !s) try {
     if (e.tagName.includes("-")) e[t] = n; else {
      let s = null == n ? "" : n;
      "list" === t ? a = !1 : null != o && e[t] == s || (e[t] = s);
     }
    } catch (e) {}
    null == n || !1 === n ? !1 === n && "" !== e.getAttribute(t) || (e.removeAttribute(t)) : (!a || 4 & l || s) && !i && (n = !0 === n ? "" : n, 
    e.setAttribute(t, n));
   }
  } else t = "-" === t[2] ? t.slice(3) : isMemberInElement(win, r) ? r.slice(2) : r[2] + t.slice(3), 
  o && plt.rel(e, t, o, !1), n && plt.ael(e, t, n, !1);
 }
}, parseClassListRegex = /\s/, parseClassList = e => e ? e.split(parseClassListRegex) : [], updateElement = (e, t, o, n) => {
 const s = 11 === t.$elm$.nodeType && t.$elm$.host ? t.$elm$.host : t.$elm$, l = e && e.$attrs$ || EMPTY_OBJ, a = t.$attrs$ || EMPTY_OBJ;
 for (n in l) n in a || setAccessor(s, n, l[n], void 0, o, t.$flags$);
 for (n in a) setAccessor(s, n, l[n], a[n], o, t.$flags$);
};

let scopeId, contentRef, hostTagName, useNativeShadowDom = !1, checkSlotFallbackVisibility = !1, checkSlotRelocate = !1, isSvgMode = !1;

const createElm = (e, t, o, n) => {
 let s, l, a, r = t.$children$[o], i = 0;
 if (!useNativeShadowDom && (checkSlotRelocate = !0, "slot" === r.$tag$ && (scopeId && n.classList.add(scopeId + "-s"), 
 r.$flags$ |= r.$children$ ? 2 : 1)), null !== r.$text$) s = r.$elm$ = doc.createTextNode(r.$text$); else if (1 & r.$flags$) s = r.$elm$ = slotReferenceDebugNode(r) ; else {
  if (!isSvgMode && (isSvgMode = "svg" === r.$tag$), s = r.$elm$ = doc.createElementNS(isSvgMode ? "http://www.w3.org/2000/svg" : "http://www.w3.org/1999/xhtml", 2 & r.$flags$ ? "slot-fb" : r.$tag$) , 
  isSvgMode && "foreignObject" === r.$tag$ && (isSvgMode = !1), updateElement(null, r, isSvgMode), 
  null != scopeId && s["s-si"] !== scopeId && s.classList.add(s["s-si"] = scopeId), 
  r.$children$) for (i = 0; i < r.$children$.length; ++i) l = createElm(e, r, i, s), 
  l && s.appendChild(l);
  ("svg" === r.$tag$ ? isSvgMode = !1 : "foreignObject" === s.tagName && (isSvgMode = !0));
 }
 return (s["s-hn"] = hostTagName, 3 & r.$flags$ && (s["s-sr"] = !0, 
 s["s-cr"] = contentRef, s["s-sn"] = r.$name$ || "", a = e && e.$children$ && e.$children$[o], 
 a && a.$tag$ === r.$tag$ && e.$elm$ && putBackInOriginalLocation(e.$elm$, !1))), 
 s;
}, putBackInOriginalLocation = (e, t) => {
 plt.$flags$ |= 1;
 const o = e.childNodes;
 for (let e = o.length - 1; e >= 0; e--) {
  const n = o[e];
  n["s-hn"] !== hostTagName && n["s-ol"] && (parentReferenceNode(n).insertBefore(n, referenceNode(n)), 
  n["s-ol"].remove(), n["s-ol"] = void 0, checkSlotRelocate = !0), t && putBackInOriginalLocation(n, t);
 }
 plt.$flags$ &= -2;
}, addVnodes = (e, t, o, n, s, l) => {
 let a, r = e["s-cr"] && e["s-cr"].parentNode || e;
 for (r.shadowRoot && r.tagName === hostTagName && (r = r.shadowRoot); s <= l; ++s) n[s] && (a = createElm(null, o, s, e), 
 a && (n[s].$elm$ = a, r.insertBefore(a, referenceNode(t) )));
}, removeVnodes = (e, t, o, n, s) => {
 for (;t <= o; ++t) (n = e[t]) && (s = n.$elm$, (checkSlotFallbackVisibility = !0, 
 s["s-ol"] ? s["s-ol"].remove() : putBackInOriginalLocation(s, !0)), s.remove());
}, isSameVnode = (e, t) => e.$tag$ === t.$tag$ && ("slot" === e.$tag$ ? e.$name$ === t.$name$ : !BUILD.vdomKey ), referenceNode = e => e && e["s-ol"] || e, parentReferenceNode = e => (e["s-ol"] ? e["s-ol"] : e).parentNode, patch = (e, t) => {
 const o = t.$elm$ = e.$elm$, n = e.$children$, s = t.$children$, l = t.$tag$, a = t.$text$;
 let r;
 null !== a ? (r = o["s-cr"]) ? r.parentNode.textContent = a : e.$text$ !== a && (o.data = a) : ((isSvgMode = "svg" === l || "foreignObject" !== l && isSvgMode), 
 ("slot" === l || updateElement(e, t, isSvgMode)), 
 null !== n && null !== s ? ((e, t, o, n) => {
  let s, a = 0, r = 0, c = t.length - 1, $ = t[0], m = t[c], p = n.length - 1, h = n[0], u = n[p];
  for (;a <= c && r <= p; ) if (null == $) $ = t[++a]; else if (null == m) m = t[--c]; else if (null == h) h = n[++r]; else if (null == u) u = n[--p]; else if (isSameVnode($, h)) patch($, h), 
  $ = t[++a], h = n[++r]; else if (isSameVnode(m, u)) patch(m, u), m = t[--c], u = n[--p]; else if (isSameVnode($, u)) "slot" !== $.$tag$ && "slot" !== u.$tag$ || putBackInOriginalLocation($.$elm$.parentNode, !1), 
  patch($, u), e.insertBefore($.$elm$, m.$elm$.nextSibling), $ = t[++a], u = n[--p]; else if (isSameVnode(m, h)) "slot" !== $.$tag$ && "slot" !== u.$tag$ || putBackInOriginalLocation(m.$elm$.parentNode, !1), 
  patch(m, h), e.insertBefore(m.$elm$, $.$elm$), m = t[--c], h = n[++r]; else {
   (s = createElm(t && t[r], o, r, e), h = n[++r]), 
   s && (parentReferenceNode($.$elm$).insertBefore(s, referenceNode($.$elm$)) );
  }
  a > c ? addVnodes(e, null == n[p + 1] ? null : n[p + 1].$elm$, o, n, r, p) : r > p && removeVnodes(t, a, c);
 })(o, n, t, s) : null !== s ? (null !== e.$text$ && (o.textContent = ""), 
 addVnodes(o, null, t, s, 0, s.length - 1)) : null !== n && removeVnodes(n, 0, n.length - 1), 
 isSvgMode && "svg" === l && (isSvgMode = !1));
}, updateFallbackSlotVisibility = e => {
 let t, o, n, s, l, a, r = e.childNodes;
 for (o = 0, n = r.length; o < n; o++) if (t = r[o], 1 === t.nodeType) {
  if (t["s-sr"]) for (l = t["s-sn"], t.hidden = !1, s = 0; s < n; s++) if (a = r[s].nodeType, 
  r[s]["s-hn"] !== t["s-hn"] || "" !== l) {
   if (1 === a && l === r[s].getAttribute("slot")) {
    t.hidden = !0;
    break;
   }
  } else if (1 === a || 3 === a && "" !== r[s].textContent.trim()) {
   t.hidden = !0;
   break;
  }
  updateFallbackSlotVisibility(t);
 }
}, relocateNodes = [], relocateSlotContent = e => {
 let t, o, n, s, l, a, r = 0, i = e.childNodes, d = i.length;
 for (;r < d; r++) {
  if (t = i[r], t["s-sr"] && (o = t["s-cr"]) && o.parentNode) for (n = o.parentNode.childNodes, 
  s = t["s-sn"], a = n.length - 1; a >= 0; a--) o = n[a], o["s-cn"] || o["s-nr"] || o["s-hn"] === t["s-hn"] || (isNodeLocatedInSlot(o, s) ? (l = relocateNodes.find((e => e.$nodeToRelocate$ === o)), 
  checkSlotFallbackVisibility = !0, o["s-sn"] = o["s-sn"] || s, l ? l.$slotRefNode$ = t : relocateNodes.push({
   $slotRefNode$: t,
   $nodeToRelocate$: o
  }), o["s-sr"] && relocateNodes.map((e => {
   isNodeLocatedInSlot(e.$nodeToRelocate$, o["s-sn"]) && (l = relocateNodes.find((e => e.$nodeToRelocate$ === o)), 
   l && !e.$slotRefNode$ && (e.$slotRefNode$ = l.$slotRefNode$));
  }))) : relocateNodes.some((e => e.$nodeToRelocate$ === o)) || relocateNodes.push({
   $nodeToRelocate$: o
  }));
  1 === t.nodeType && relocateSlotContent(t);
 }
}, isNodeLocatedInSlot = (e, t) => 1 === e.nodeType ? null === e.getAttribute("slot") && "" === t || e.getAttribute("slot") === t : e["s-sn"] === t || "" === t, renderVdom = (e, t) => {
 const o = e.$hostElement$, s = e.$vnode$ || newVNode(null, null), l = isHost(t) ? t : h(null, null, t);
 if (hostTagName = o.tagName, BUILD.isDev  ) ;
 if (l.$tag$ = null, l.$flags$ |= 4, e.$vnode$ = l, l.$elm$ = s.$elm$ = o.shadowRoot || o, 
 (scopeId = o["s-sc"]), (contentRef = o["s-cr"], 
 useNativeShadowDom = supportsShadow, checkSlotFallbackVisibility = !1), patch(s, l), 
 BUILD.slotRelocation) {
  if (plt.$flags$ |= 1, checkSlotRelocate) {
   let e, t, o, n, s, a;
   relocateSlotContent(l.$elm$);
   let r = 0;
   for (;r < relocateNodes.length; r++) e = relocateNodes[r], t = e.$nodeToRelocate$, 
   t["s-ol"] || (o = originalLocationDebugNode(t) , 
   o["s-nr"] = t, t.parentNode.insertBefore(t["s-ol"] = o, t));
   for (r = 0; r < relocateNodes.length; r++) if (e = relocateNodes[r], t = e.$nodeToRelocate$, 
   e.$slotRefNode$) {
    for (n = e.$slotRefNode$.parentNode, s = e.$slotRefNode$.nextSibling, o = t["s-ol"]; o = o.previousSibling; ) if (a = o["s-nr"], 
    a && a["s-sn"] === t["s-sn"] && n === a.parentNode && (a = a.nextSibling, !a || !a["s-nr"])) {
     s = a;
     break;
    }
    (!s && n !== t.parentNode || t.nextSibling !== s) && t !== s && (!t["s-hn"] && t["s-ol"] && (t["s-hn"] = t["s-ol"].parentNode.nodeName), 
    n.insertBefore(t, s));
   } else 1 === t.nodeType && (t.hidden = !0);
  }
  checkSlotFallbackVisibility && updateFallbackSlotVisibility(l.$elm$), plt.$flags$ &= -2, 
  relocateNodes.length = 0;
 }
}, slotReferenceDebugNode = e => doc.createComment(`<slot${e.$name$ ? ' name="' + e.$name$ + '"' : ""}> (host=${hostTagName.toLowerCase()})`), originalLocationDebugNode = e => doc.createComment("org-location for " + (e.localName ? `<${e.localName}> (host=${e["s-hn"]})` : `[${e.textContent}]`)), getElement = e => getHostRef(e).$hostElement$ , emitEvent = (e, t, o) => {
 const n = plt.ce(t, o);
 return e.dispatchEvent(n), n;
}, attachToAncestor = (e, t) => {
 t && !e.$onRenderResolve$ && t["s-p"] && t["s-p"].push(new Promise((t => e.$onRenderResolve$ = t)));
}, scheduleUpdate = (e, t) => {
 if ((e.$flags$ |= 16), 4 & e.$flags$) return void (e.$flags$ |= 512);
 attachToAncestor(e, e.$ancestorComponent$);
 const o = () => dispatchHooks(e, t);
 return writeTask(o) ;
}, dispatchHooks = (e, t) => {
 const n = createTime("scheduleUpdate", e.$cmpMeta$.$tagName$), s = e.$lazyInstance$ ;
 let l;
 return t ? ((l = safeCall(s, "componentWillLoad"))) : (BUILD.cmpWillUpdate ), n(), then(l, (() => updateComponent(e, s, t)));
}, updateComponent = async (e, t, o) => {
 const n = e.$hostElement$, s = createTime("update", e.$cmpMeta$.$tagName$), l = n["s-rc"];
 o && attachStyles(e);
 const a = createTime("render", e.$cmpMeta$.$tagName$);
 if (await callRender(e, t) , 
 BUILD.hydrateServerSide) try {
  serverSideConnected(n), o && (1 & e.$cmpMeta$.$flags$ ? n["s-en"] = "" : 2 & e.$cmpMeta$.$flags$ && (n["s-en"] = "c"));
 } catch (e) {
  consoleError(e, n);
 }
 if (l && (l.map((e => e())), n["s-rc"] = void 0), a(), s(), 
 BUILD.asyncLoading) {
  const t = n["s-p"], o = () => postUpdateComponent(e);
  0 === t.length ? o() : (Promise.all(t).then(o), e.$flags$ |= 4, t.length = 0);
 }
};

let renderingRef = null;

const callRender = (e, t, o) => {
 try {
  if (renderingRef = t, t = t.render(), (e.$flags$ &= -17), 
  (e.$flags$ |= 2), BUILD.hasRenderFn ) {
   return Promise.resolve(t).then((t => renderVdom(e, t)));
  }
 } catch (t) {
  consoleError(t, e.$hostElement$);
 }
 return renderingRef = null, null;
}, getRenderingRef = () => renderingRef, postUpdateComponent = e => {
 const t = e.$cmpMeta$.$tagName$, o = e.$hostElement$, n = createTime("postUpdate", t), s = e.$lazyInstance$ , l = e.$ancestorComponent$;
 (safeCall(s, "componentDidRender"), 
 BUILD.isDev ), 64 & e.$flags$ ? (n()) : (e.$flags$ |= 64, addHydratedFlag(o), 
 (safeCall(s, "componentDidLoad"), 
 BUILD.isDev ), n(), (e.$onReadyResolve$(o), l || appDidLoad())), e.$onInstanceResolve$(o), (e.$onRenderResolve$ && (e.$onRenderResolve$(), 
 e.$onRenderResolve$ = void 0), 512 & e.$flags$ && nextTick((() => scheduleUpdate(e, !1))), 
 e.$flags$ &= -517);
}, forceUpdate$1 = e => {
 {
  const t = getHostRef(e), o = t.$hostElement$.isConnected;
  return o && 2 == (18 & t.$flags$) && scheduleUpdate(t, !1), o;
 }
}, appDidLoad = e => {
 addHydratedFlag(doc.documentElement), nextTick((() => emitEvent(win, "appload", {
  detail: {
   namespace: NAMESPACE
  }
 }))), BUILD.profile  ;
}, safeCall = (e, t, o) => {
 if (e && e[t]) try {
  return e[t](o);
 } catch (e) {
  consoleError(e);
 }
}, then = (e, t) => e && e.then ? e.then(t) : t(), addHydratedFlag = e => e.classList.add("hydrated") , serverSideConnected = e => {
 const t = e.children;
 if (null != t) for (let e = 0, o = t.length; e < o; e++) {
  const o = t[e];
  "function" == typeof o.connectedCallback && o.connectedCallback(), serverSideConnected(o);
 }
}, clientHydrate = (e, t, o, n, s, l, a) => {
 let r, i, d, c;
 if (1 === l.nodeType) {
  for (r = l.getAttribute("c-id"), r && (i = r.split("."), i[0] !== a && "0" !== i[0] || (d = {
   $flags$: 0,
   $hostId$: i[0],
   $nodeId$: i[1],
   $depth$: i[2],
   $index$: i[3],
   $tag$: l.tagName.toLowerCase(),
   $elm$: l,
   $attrs$: null,
   $children$: null,
   $key$: null,
   $name$: null,
   $text$: null
  }, t.push(d), l.removeAttribute("c-id"), e.$children$ || (e.$children$ = []), e.$children$[d.$index$] = d, 
  e = d, n && "0" === d.$depth$ && (n[d.$index$] = d.$elm$))), c = l.childNodes.length - 1; c >= 0; c--) clientHydrate(e, t, o, n, s, l.childNodes[c], a);
  if (l.shadowRoot) for (c = l.shadowRoot.childNodes.length - 1; c >= 0; c--) clientHydrate(e, t, o, n, s, l.shadowRoot.childNodes[c], a);
 } else if (8 === l.nodeType) i = l.nodeValue.split("."), i[1] !== a && "0" !== i[1] || (r = i[0], 
 d = {
  $flags$: 0,
  $hostId$: i[1],
  $nodeId$: i[2],
  $depth$: i[3],
  $index$: i[4],
  $elm$: l,
  $attrs$: null,
  $children$: null,
  $key$: null,
  $name$: null,
  $tag$: null,
  $text$: null
 }, "t" === r ? (d.$elm$ = l.nextSibling, d.$elm$ && 3 === d.$elm$.nodeType && (d.$text$ = d.$elm$.textContent, 
 t.push(d), l.remove(), e.$children$ || (e.$children$ = []), e.$children$[d.$index$] = d, 
 n && "0" === d.$depth$ && (n[d.$index$] = d.$elm$))) : d.$hostId$ === a && ("s" === r ? (d.$tag$ = "slot", 
 i[5] ? l["s-sn"] = d.$name$ = i[5] : l["s-sn"] = "", l["s-sr"] = !0, n && (d.$elm$ = doc.createElement(d.$tag$), 
 d.$name$ && d.$elm$.setAttribute("name", d.$name$), l.parentNode.insertBefore(d.$elm$, l), 
 l.remove(), "0" === d.$depth$ && (n[d.$index$] = d.$elm$)), o.push(d), e.$children$ || (e.$children$ = []), 
 e.$children$[d.$index$] = d) : "r" === r && (n ? l.remove() : (s["s-cr"] = l, 
 l["s-cn"] = !0)))); else if (e && "style" === e.$tag$) {
  const t = newVNode(null, l.textContent);
  t.$elm$ = l, t.$index$ = "0", e.$children$ = [ t ];
 }
}, initializeDocumentHydrate = (e, t) => {
 if (1 === e.nodeType) {
  let o = 0;
  for (;o < e.childNodes.length; o++) initializeDocumentHydrate(e.childNodes[o], t);
  if (e.shadowRoot) for (o = 0; o < e.shadowRoot.childNodes.length; o++) initializeDocumentHydrate(e.shadowRoot.childNodes[o], t);
 } else if (8 === e.nodeType) {
  const o = e.nodeValue.split(".");
  "o" === o[0] && (t.set(o[1] + "." + o[2], e), e.nodeValue = "", e["s-en"] = o[3]);
 }
}, parsePropertyValue = (e, t) => null == e || isComplexType(e) ? e : 2 & t ? parseFloat(e) : 1 & t ? String(e) : e, getValue = (e, t) => getHostRef(e).$instanceValues$.get(t), setValue = (e, t, o, n) => {
 const s = getHostRef(e), l = s.$hostElement$ , a = s.$instanceValues$.get(t), r = s.$flags$, i = s.$lazyInstance$ ;
 if (o = parsePropertyValue(o, n.$members$[t][0]), !(8 & r && void 0 !== a || o === a) && (s.$instanceValues$.set(t, o), 
 i)) {
  if (n.$watchers$ && 128 & r) {
   const e = n.$watchers$[t];
   e && e.map((e => {
    try {
     i[e](o, a, t);
    } catch (e) {
     consoleError(e, l);
    }
   }));
  }
  if (2 == (18 & r)) {
   scheduleUpdate(s, !1);
  }
 }
}, proxyComponent = (e, t, o) => {
 if (t.$members$) {
  e.watchers && (t.$watchers$ = e.watchers);
  const n = Object.entries(t.$members$), s = e.prototype;
  if (n.map((([e, [n]]) => {
   (31 & n || (2 & o) && 32 & n) ? Object.defineProperty(s, e, {
    get() {
     return getValue(this, e);
    },
    set(s) {
     setValue(this, e, s, t);
    },
    configurable: !0,
    enumerable: !0
   }) : 1 & o && 64 & n && Object.defineProperty(s, e, {
    value(...t) {
     const o = getHostRef(this);
     return o.$onInstancePromise$.then((() => o.$lazyInstance$[e](...t)));
    }
   });
  })), (1 & o)) {
   const o = new Map;
   s.attributeChangedCallback = function(e, t, n) {
    plt.jmp((() => {
     const t = o.get(e);
     this[t] = (null !== n || "boolean" != typeof this[t]) && n;
    }));
   }, e.observedAttributes = n.filter((([e, t]) => 15 & t[0])).map((([e, n]) => {
    const s = n[1] || e;
    return o.set(s, e), s;
   }));
  }
 }
 return e;
}, initializeComponent = async (e, t, o, n, s) => {
 if (0 == (32 & t.$flags$)) {
  {
   if (t.$flags$ |= 32, (s = loadModule(o)).then) {
    const e = (() => {});
    s = await s, e();
   }
   !s.isProxied && ((o.$watchers$ = s.watchers), 
   proxyComponent(s, o, 2), s.isProxied = !0);
   const e = createTime("createInstance", o.$tagName$);
   (t.$flags$ |= 8);
   try {
    new s(t);
   } catch (e) {
    consoleError(e);
   }
   (t.$flags$ &= -9), (t.$flags$ |= 128), e(), 
   fireConnectedCallback();
  }
  if (s.style) {
   let n = s.style;
   const l = getScopeId(o);
   if (!styles.has(l)) {
    const e = createTime("registerStyles", o.$tagName$);
    registerStyle(l, n), e();
   }
  }
 }
 const r = t.$ancestorComponent$, i = () => scheduleUpdate(t, !0);
 r && r["s-rc"] ? r["s-rc"].push(i) : i();
}, fireConnectedCallback = e => {
}, connectedCallback = e => {
 if (0 == (1 & plt.$flags$)) {
  const t = getHostRef(e), o = t.$cmpMeta$, n = createTime("connectedCallback", o.$tagName$);
  if (1 & t.$flags$) ; else {
   let n;
   if (t.$flags$ |= 1, (n = e.getAttribute("s-id"), n)) {
    ((e, t, o, n) => {
     const s = createTime("hydrateClient", t), l = e.shadowRoot, a = [], r = l ? [] : null, i = n.$vnode$ = newVNode(t, null);
     plt.$orgLocNodes$ || initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = new Map), 
     e["s-id"] = o, e.removeAttribute("s-id"), clientHydrate(i, a, [], r, e, e, o), a.map((e => {
      const o = e.$hostId$ + "." + e.$nodeId$, n = plt.$orgLocNodes$.get(o), s = e.$elm$;
      n && supportsShadow && "" === n["s-en"] && n.parentNode.insertBefore(s, n.nextSibling), 
      l || (s["s-hn"] = t, n && (s["s-ol"] = n, s["s-ol"]["s-nr"] = s)), plt.$orgLocNodes$.delete(o);
     })), l && r.map((e => {
      e && l.appendChild(e);
     })), s();
    })(e, o.$tagName$, n, t);
   }
   if (!n && (BUILD.hydrateServerSide ) && setContentReference(e), 
   BUILD.asyncLoading) {
    let o = e;
    for (;o = o.parentNode || o.host; ) if (1 === o.nodeType && o.hasAttribute("s-id") && o["s-p"] || o["s-p"]) {
     attachToAncestor(t, t.$ancestorComponent$ = o);
     break;
    }
   }
   initializeComponent(e, t, o);
  }
  n();
 }
}, setContentReference = e => {
 const t = e["s-cr"] = doc.createComment("");
 t["s-cn"] = !0, e.insertBefore(t, e.firstChild);
}, insertVdomAnnotations = (e, t) => {
 if (null != e) {
  const o = {
   hostIds: 0,
   rootLevelIds: 0,
   staticComponents: new Set(t)
  }, n = [];
  parseVNodeAnnotations(e, e.body, o, n), n.forEach((t => {
   if (null != t) {
    const n = t["s-nr"];
    let s = n["s-host-id"], l = n["s-node-id"], a = `${s}.${l}`;
    if (null == s) if (s = 0, o.rootLevelIds++, l = o.rootLevelIds, a = `${s}.${l}`, 
    1 === n.nodeType) n.setAttribute("c-id", a); else if (3 === n.nodeType) {
     if (0 === s && "" === n.nodeValue.trim()) return void t.remove();
     const o = e.createComment(a);
     o.nodeValue = `t.${a}`, n.parentNode.insertBefore(o, n);
    }
    let r = `o.${a}`;
    const i = t.parentElement;
    i && ("" === i["s-en"] ? r += "." : "c" === i["s-en"] && (r += ".c")), t.nodeValue = r;
   }
  }));
 }
}, parseVNodeAnnotations = (e, t, o, n) => {
 null != t && (null != t["s-nr"] && n.push(t), 1 === t.nodeType && t.childNodes.forEach((t => {
  const s = getHostRef(t);
  if (null != s && !o.staticComponents.has(t.nodeName.toLowerCase())) {
   const n = {
    nodeIds: 0
   };
   insertVNodeAnnotations(e, t, s.$vnode$, o, n);
  }
  parseVNodeAnnotations(e, t, o, n);
 })));
}, insertVNodeAnnotations = (e, t, o, n, s) => {
 if (null != o) {
  const l = ++n.hostIds;
  if (t.setAttribute("s-id", l), null != t["s-cr"] && (t["s-cr"].nodeValue = `r.${l}`), 
  null != o.$children$) {
   const t = 0;
   o.$children$.forEach(((o, n) => {
    insertChildVNodeAnnotations(e, o, s, l, t, n);
   }));
  }
  if (t && o && o.$elm$ && !t.hasAttribute("c-id")) {
   const e = t.parentElement;
   if (e && e.childNodes) {
    const n = Array.from(e.childNodes), s = n.find((e => 8 === e.nodeType && e["s-sr"]));
    if (s) {
     const e = n.indexOf(t) - 1;
     o.$elm$.setAttribute("c-id", `${s["s-host-id"]}.${s["s-node-id"]}.0.${e}`);
    }
   }
  }
 }
}, insertChildVNodeAnnotations = (e, t, o, n, s, l) => {
 const a = t.$elm$;
 if (null == a) return;
 const r = o.nodeIds++, i = `${n}.${r}.${s}.${l}`;
 if (a["s-host-id"] = n, a["s-node-id"] = r, 1 === a.nodeType) a.setAttribute("c-id", i); else if (3 === a.nodeType) {
  const t = a.parentNode, o = t.nodeName;
  if ("STYLE" !== o && "SCRIPT" !== o) {
   const o = `t.${i}`, n = e.createComment(o);
   t.insertBefore(n, a);
  }
 } else if (8 === a.nodeType && a["s-sr"]) {
  const e = `s.${i}.${a["s-sn"] || ""}`;
  a.nodeValue = e;
 }
 if (null != t.$children$) {
  const l = s + 1;
  t.$children$.forEach(((t, s) => {
   insertChildVNodeAnnotations(e, t, o, n, l, s);
  }));
 }
}, NO_HYDRATE_TAGS = new Set([ "CODE", "HEAD", "IFRAME", "INPUT", "OBJECT", "OUTPUT", "NOSCRIPT", "PRE", "SCRIPT", "SELECT", "STYLE", "TEMPLATE", "TEXTAREA" ]), hAsync = (e, t, ...o) => {
 if (Array.isArray(o) && o.length > 0) {
  const n = o.flat(1 / 0);
  return n.some(isPromise) ? Promise.all(n).then((o => h(e, t, ...o))).catch((o => h(e, t))) : h(e, t, ...o);
 }
 return h(e, t);
};

const cmpModules = new Map, getModule = e => {
 if ("string" == typeof e) {
  e = e.toLowerCase();
  const t = cmpModules.get(e);
  if (null != t) return t[e];
 }
 return null;
}, loadModule = (e, t, o) => getModule(e.$tagName$), isMemberInElement = (e, t) => {
 if (null != e) {
  if (t in e) return !0;
  const o = getModule(e.nodeName);
  if (null != o) {
   const e = o;
   if (null != e && null != e.cmpMeta && null != e.cmpMeta.$members$) return t in e.cmpMeta.$members$;
  }
 }
 return !1;
}, registerComponents = e => {
 for (const t of e) {
  const e = t.cmpMeta.$tagName$;
  cmpModules.set(e, {
   [e]: t
  });
 }
}, win = window, doc = win.document, writeTask = e => {
 process__default['default'].nextTick((() => {
  try {
   e();
  } catch (e) {
   consoleError(e);
  }
 }));
}, resolved = Promise.resolve(), nextTick = e => resolved.then(e), defaultConsoleError = e => {
 null != e && console.error(e.stack || e.message || e);
}, consoleError = (e, t) => (defaultConsoleError)(e, t), plt = {
 $flags$: 0,
 $resourcesUrl$: "",
 jmp: e => e(),
 raf: e => requestAnimationFrame(e),
 ael: (e, t, o, n) => e.addEventListener(t, o, n),
 rel: (e, t, o, n) => e.removeEventListener(t, o, n),
 ce: (e, t) => new win.CustomEvent(e, t)
}, supportsShadow = !1, hostRefs = new WeakMap, getHostRef = e => hostRefs.get(e), registerInstance = (e, t) => hostRefs.set(t.$lazyInstance$ = e, t), registerHost = (e, t) => {
 const o = {
  $flags$: 0,
  $cmpMeta$: t,
  $hostElement$: e,
  $instanceValues$: new Map,
  $renderCount$: 0
 };
 return o.$onInstancePromise$ = new Promise((e => o.$onInstanceResolve$ = e)), o.$onReadyPromise$ = new Promise((e => o.$onReadyResolve$ = e)), 
 e["s-p"] = [], e["s-rc"] = [], hostRefs.set(e, o);
}, styles = new Map;

var xhtml = "http://www.w3.org/1999/xhtml";

var namespaces = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};

function namespace(name) {
  var prefix = name += "", i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins
}

function creatorInherit(name) {
  return function() {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === xhtml && document.documentElement.namespaceURI === xhtml
        ? document.createElement(name)
        : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

function creator(name) {
  var fullname = namespace(name);
  return (fullname.local
      ? creatorFixed
      : creatorInherit)(fullname);
}

function none() {}

function selector(selector) {
  return selector == null ? none : function() {
    return this.querySelector(selector);
  };
}

function selection_select(select) {
  if (typeof select !== "function") select = selector(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new Selection$1(subgroups, this._parents);
}

function array$1(x) {
  return typeof x === "object" && "length" in x
    ? x // Array, TypedArray, NodeList, array-like
    : Array.from(x); // Map, Set, iterable, string, or anything else
}

function empty() {
  return [];
}

function selectorAll(selector) {
  return selector == null ? empty : function() {
    return this.querySelectorAll(selector);
  };
}

function arrayAll(select) {
  return function() {
    var group = select.apply(this, arguments);
    return group == null ? [] : array$1(group);
  };
}

function selection_selectAll(select) {
  if (typeof select === "function") select = arrayAll(select);
  else select = selectorAll(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new Selection$1(subgroups, parents);
}

function matcher(selector) {
  return function() {
    return this.matches(selector);
  };
}

function childMatcher(selector) {
  return function(node) {
    return node.matches(selector);
  };
}

var find$1 = Array.prototype.find;

function childFind(match) {
  return function() {
    return find$1.call(this.children, match);
  };
}

function childFirst() {
  return this.firstElementChild;
}

function selection_selectChild(match) {
  return this.select(match == null ? childFirst
      : childFind(typeof match === "function" ? match : childMatcher(match)));
}

var filter = Array.prototype.filter;

function children() {
  return this.children;
}

function childrenFilter(match) {
  return function() {
    return filter.call(this.children, match);
  };
}

function selection_selectChildren(match) {
  return this.selectAll(match == null ? children
      : childrenFilter(typeof match === "function" ? match : childMatcher(match)));
}

function selection_filter(match) {
  if (typeof match !== "function") match = matcher(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new Selection$1(subgroups, this._parents);
}

function sparse(update) {
  return new Array(update.length);
}

function selection_enter() {
  return new Selection$1(this._enter || this._groups.map(sparse), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
  querySelector: function(selector) { return this._parent.querySelector(selector); },
  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
};

function constant$5(x) {
  return function() {
    return x;
  };
}

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length;

  // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.
  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Put any non-null nodes that don’t fit into exit.
  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = new Map,
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue;

  // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.
  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
      if (nodeByKeyValue.has(keyValue)) {
        exit[i] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  }

  // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.
  for (i = 0; i < dataLength; ++i) {
    keyValue = key.call(parent, data[i], i, data) + "";
    if (node = nodeByKeyValue.get(keyValue)) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Add any remaining nodes that were not bound to data to exit.
  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {
      exit[i] = node;
    }
  }
}

function datum(node) {
  return node.__data__;
}

function selection_data(value, key) {
  if (!arguments.length) return Array.from(this, datum);

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;

  if (typeof value !== "function") value = constant$5(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = array$1(value.call(parent, parent && parent.__data__, j, parents)),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);

    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

    // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength);
        previous._next = next || null;
      }
    }
  }

  update = new Selection$1(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}

function selection_exit() {
  return new Selection$1(this._exit || this._groups.map(sparse), this._parents);
}

function selection_join(onenter, onupdate, onexit) {
  var enter = this.enter(), update = this, exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove(); else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}

function selection_merge(selection) {
  if (!(selection instanceof Selection$1)) throw new Error("invalid merge");

  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new Selection$1(merges, this._parents);
}

function selection_order() {

  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}

function selection_sort(compare) {
  if (!compare) compare = ascending$1;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }

  return new Selection$1(sortgroups, this._parents).order();
}

function ascending$1(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

function selection_call() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}

function selection_nodes() {
  return Array.from(this);
}

function selection_node() {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}

function selection_size() {
  let size = 0;
  for (const node of this) ++size; // eslint-disable-line no-unused-vars
  return size;
}

function selection_empty() {
  return !this.node();
}

function selection_each(callback) {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}

function attrRemove$1(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attrRemoveNS$1(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant$1(name, value) {
  return function() {
    this.setAttribute(name, value);
  };
}

function attrConstantNS$1(fullname, value) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction$1(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);
    else this.setAttribute(name, v);
  };
}

function attrFunctionNS$1(fullname, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
    else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

function selection_attr(name, value) {
  var fullname = namespace(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local
        ? node.getAttributeNS(fullname.space, fullname.local)
        : node.getAttribute(fullname);
  }

  return this.each((value == null
      ? (fullname.local ? attrRemoveNS$1 : attrRemove$1) : (typeof value === "function"
      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)
      : (fullname.local ? attrConstantNS$1 : attrConstant$1)))(fullname, value));
}

function defaultView(node) {
  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
      || (node.document && node) // node is a Window
      || node.defaultView; // node is a Document
}

function styleRemove$1(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function styleConstant$1(name, value, priority) {
  return function() {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction$1(name, value, priority) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);
    else this.style.setProperty(name, v, priority);
  };
}

function selection_style(name, value, priority) {
  return arguments.length > 1
      ? this.each((value == null
            ? styleRemove$1 : typeof value === "function"
            ? styleFunction$1
            : styleConstant$1)(name, value, priority == null ? "" : priority))
      : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name)
      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
}

function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function() {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];
    else this[name] = v;
  };
}

function selection_property(name, value) {
  return arguments.length > 1
      ? this.each((value == null
          ? propertyRemove : typeof value === "function"
          ? propertyFunction
          : propertyConstant)(name, value))
      : this.node()[name];
}

function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function(name) {
    var i = this._names.indexOf(name);
    if (i < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i = this._names.indexOf(name);
    if (i >= 0) {
      this._names.splice(i, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function() {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

function selection_classed(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n = names.length;
    while (++i < n) if (!list.contains(names[i])) return false;
    return true;
  }

  return this.each((typeof value === "function"
      ? classedFunction : value
      ? classedTrue
      : classedFalse)(names, value));
}

function textRemove() {
  this.textContent = "";
}

function textConstant$1(value) {
  return function() {
    this.textContent = value;
  };
}

function textFunction$1(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

function selection_text(value) {
  return arguments.length
      ? this.each(value == null
          ? textRemove : (typeof value === "function"
          ? textFunction$1
          : textConstant$1)(value))
      : this.node().textContent;
}

function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function() {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

function selection_html(value) {
  return arguments.length
      ? this.each(value == null
          ? htmlRemove : (typeof value === "function"
          ? htmlFunction
          : htmlConstant)(value))
      : this.node().innerHTML;
}

function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

function selection_raise() {
  return this.each(raise);
}

function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

function selection_lower() {
  return this.each(lower);
}

function selection_append(name) {
  var create = typeof name === "function" ? name : creator(name);
  return this.select(function() {
    return this.appendChild(create.apply(this, arguments));
  });
}

function constantNull() {
  return null;
}

function selection_insert(name, before) {
  var create = typeof name === "function" ? name : creator(name),
      select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
  return this.select(function() {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}

function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

function selection_remove() {
  return this.each(remove);
}

function selection_cloneShallow() {
  var clone = this.cloneNode(false), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_clone(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}

function selection_datum(value) {
  return arguments.length
      ? this.property("__data__", value)
      : this.node().__data__;
}

function contextListener(listener) {
  return function(event) {
    listener.call(this, event, this.__data__);
  };
}

function parseTypenames$1(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {type: t, name: name};
  });
}

function onRemove(typename) {
  return function() {
    var on = this.__on;
    if (!on) return;
    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
      } else {
        on[++i] = o;
      }
    }
    if (++i) on.length = i;
    else delete this.__on;
  };
}

function onAdd(typename, value, options) {
  return function() {
    var on = this.__on, o, listener = contextListener(value);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
        this.addEventListener(o.type, o.listener = listener, o.options = options);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, options);
    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};
    if (!on) this.__on = [o];
    else on.push(o);
  };
}

function selection_on(typename, value, options) {
  var typenames = parseTypenames$1(typename + ""), i, n = typenames.length, t;

  if (arguments.length < 2) {
    var on = this.node().__on;
    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));
  return this;
}

function dispatchEvent(node, type, params) {
  var window = defaultView(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
    else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function() {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function() {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

function selection_dispatch(type, params) {
  return this.each((typeof params === "function"
      ? dispatchFunction
      : dispatchConstant)(type, params));
}

function* selection_iterator() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) yield node;
    }
  }
}

var root = [null];

function Selection$1(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection$1([[document.documentElement]], root);
}

function selection_selection() {
  return this;
}

Selection$1.prototype = selection.prototype = {
  constructor: Selection$1,
  select: selection_select,
  selectAll: selection_selectAll,
  selectChild: selection_selectChild,
  selectChildren: selection_selectChildren,
  filter: selection_filter,
  data: selection_data,
  enter: selection_enter,
  exit: selection_exit,
  join: selection_join,
  merge: selection_merge,
  selection: selection_selection,
  order: selection_order,
  sort: selection_sort,
  call: selection_call,
  nodes: selection_nodes,
  node: selection_node,
  size: selection_size,
  empty: selection_empty,
  each: selection_each,
  attr: selection_attr,
  style: selection_style,
  property: selection_property,
  classed: selection_classed,
  text: selection_text,
  html: selection_html,
  raise: selection_raise,
  lower: selection_lower,
  append: selection_append,
  insert: selection_insert,
  remove: selection_remove,
  clone: selection_clone,
  datum: selection_datum,
  on: selection_on,
  dispatch: selection_dispatch,
  [Symbol.iterator]: selection_iterator
};

function select(selector) {
  return typeof selector === "string"
      ? new Selection$1([[document.querySelector(selector)]], [document.documentElement])
      : new Selection$1([[selector]], root);
}

function sourceEvent(event) {
  let sourceEvent;
  while (sourceEvent = event.sourceEvent) event = sourceEvent;
  return event;
}

function pointer(event, node) {
  event = sourceEvent(event);
  if (node === undefined) node = event.currentTarget;
  if (node) {
    var svg = node.ownerSVGElement || node;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      point.x = event.clientX, point.y = event.clientY;
      point = point.matrixTransform(node.getScreenCTM().inverse());
      return [point.x, point.y];
    }
    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }
  return [event.pageX, event.pageY];
}

function selectAll(selector) {
  return typeof selector === "string"
      ? new Selection$1([document.querySelectorAll(selector)], [document.documentElement])
      : new Selection$1([selector == null ? [] : array$1(selector)], root);
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

function bisector(f) {
  let delta = f;
  let compare = f;

  if (f.length === 1) {
    delta = (d, x) => f(d) - x;
    compare = ascendingComparator(f);
  }

  function left(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    while (lo < hi) {
      const mid = (lo + hi) >>> 1;
      if (compare(a[mid], x) < 0) lo = mid + 1;
      else hi = mid;
    }
    return lo;
  }

  function right(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    while (lo < hi) {
      const mid = (lo + hi) >>> 1;
      if (compare(a[mid], x) > 0) hi = mid;
      else lo = mid + 1;
    }
    return lo;
  }

  function center(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }

  return {left, center, right};
}

function ascendingComparator(f) {
  return (d, x) => ascending(f(d), x);
}

function number$2(x) {
  return x === null ? NaN : +x;
}

const ascendingBisect = bisector(ascending);
const bisectRight = ascendingBisect.right;
bisector(number$2).center;

function descending(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}

class InternMap extends Map {
  constructor(entries, key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    if (entries != null) for (const [key, value] of entries) this.set(key, value);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value) {
    return super.set(intern_set(this, key), value);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
}

function intern_get({_intern, _key}, value) {
  const key = _key(value);
  return _intern.has(key) ? _intern.get(key) : value;
}

function intern_set({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) return _intern.get(key);
  _intern.set(key, value);
  return value;
}

function intern_delete({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) {
    value = _intern.get(value);
    _intern.delete(key);
  }
  return value;
}

function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}

function identity$5(x) {
  return x;
}

function groups(values, ...keys) {
  return nest(values, Array.from, identity$5, keys);
}

function nest(values, map, reduce, keys) {
  return (function regroup(values, i) {
    if (i >= keys.length) return reduce(values);
    const groups = new InternMap();
    const keyof = keys[i++];
    let index = -1;
    for (const value of values) {
      const key = keyof(value, ++index, values);
      const group = groups.get(key);
      if (group) group.push(value);
      else groups.set(key, [value]);
    }
    for (const [key, values] of groups) {
      groups.set(key, regroup(values, i));
    }
    return map(groups);
  })(values, 0);
}

var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function ticks(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    let r0 = Math.round(start / step), r1 = Math.round(stop / step);
    if (r0 * step < start) ++r0;
    if (r1 * step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start * step), r1 = Math.round(stop * step);
    if (r0 / step < start) ++r0;
    if (r1 / step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}

function max$1(values, valueof) {
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  }
  return max;
}

function range(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}

var slice = Array.prototype.slice;

function identity$4(x) {
  return x;
}

var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon$2 = 1e-6;

function translateX(x) {
  return "translate(" + x + ",0)";
}

function translateY(y) {
  return "translate(0," + y + ")";
}

function number$1(scale) {
  return d => +scale(d);
}

function center(scale, offset) {
  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;
  if (scale.round()) offset = Math.round(offset);
  return d => +scale(d) + offset;
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      offset = typeof window !== "undefined" && window.devicePixelRatio > 1 ? 0 : 0.5,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,
        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$4) : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + offset,
        range1 = +range[range.length - 1] + offset,
        position = (scale.bandwidth ? center : number$1)(scale.copy(), offset),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");

    path = path.merge(path.enter().insert("path", ".tick")
        .attr("class", "domain")
        .attr("stroke", "currentColor"));

    tick = tick.merge(tickEnter);

    line = line.merge(tickEnter.append("line")
        .attr("stroke", "currentColor")
        .attr(x + "2", k * tickSizeInner));

    text = text.merge(tickEnter.append("text")
        .attr("fill", "currentColor")
        .attr(x, k * spacing)
        .attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);

      tickExit = tickExit.transition(context)
          .attr("opacity", epsilon$2)
          .attr("transform", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute("transform"); });

      tickEnter
          .attr("opacity", epsilon$2)
          .attr("transform", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });
    }

    tickExit.remove();

    path
        .attr("d", orient === left || orient === right
            ? (tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H" + offset + "V" + range1 + "H" + k * tickSizeOuter : "M" + offset + "," + range0 + "V" + range1)
            : (tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V" + offset + "H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + "," + offset + "H" + range1));

    tick
        .attr("opacity", 1)
        .attr("transform", function(d) { return transform(position(d) + offset); });

    line
        .attr(x + "2", k * tickSizeInner);

    text
        .attr(x, k * spacing)
        .text(format);

    selection.filter(entering)
        .attr("fill", "none")
        .attr("font-size", 10)
        .attr("font-family", "sans-serif")
        .attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");

    selection
        .each(function() { this.__axis = position; });
  }

  axis.scale = function(_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function() {
    return tickArguments = slice.call(arguments), axis;
  };

  axis.tickArguments = function(_) {
    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function(_) {
    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function(_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function(_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function(_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function(_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function(_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  axis.offset = function(_) {
    return arguments.length ? (offset = +_, axis) : offset;
  };

  return axis;
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}

var noop = {value: () => {}};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || (t in _) || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {type: t, name: name};
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function(typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length;

    // If no callback was specified, return the callback of the given type and name.
    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get$1(_[t], typename.name))) return t;
      return;
    }

    // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.
    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);
      else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);
    }

    return this;
  },
  copy: function() {
    var copy = {}, _ = this._;
    for (var t in _) copy[t] = _[t].slice();
    return new Dispatch(copy);
  },
  call: function(type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function(type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get$1(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set$1(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }
  if (callback != null) type.push({name: name, value: callback});
  return type;
}

function nopropagation$1(event) {
  event.stopImmediatePropagation();
}

function noevent$1(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

function dragDisable(view) {
  var root = view.document.documentElement,
      selection = select(view).on("dragstart.drag", noevent$1, true);
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", noevent$1, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = select(view).on("dragstart.drag", null);
  if (noclick) {
    selection.on("click.drag", noevent$1, true);
    setTimeout(function() { selection.on("click.drag", null); }, 0);
  }
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}

var constant$4 = x => () => x;

function DragEvent(type, {
  sourceEvent,
  subject,
  target,
  identifier,
  active,
  x, y, dx, dy,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {value: type, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
    subject: {value: subject, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    identifier: {value: identifier, enumerable: true, configurable: true},
    active: {value: active, enumerable: true, configurable: true},
    x: {value: x, enumerable: true, configurable: true},
    y: {value: y, enumerable: true, configurable: true},
    dx: {value: dx, enumerable: true, configurable: true},
    dy: {value: dy, enumerable: true, configurable: true},
    _: {value: dispatch}
  });
}

DragEvent.prototype.on = function() {
  var value = this._.on.apply(this._, arguments);
  return value === this._ ? this : value;
};

// Ignore right-click, since that should open the context menu.
function defaultFilter$1(event) {
  return !event.ctrlKey && !event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(event, d) {
  return d == null ? {x: event.x, y: event.y} : d;
}

function defaultTouchable$1() {
  return navigator.maxTouchPoints || ("ontouchstart" in this);
}

function drag() {
  var filter = defaultFilter$1,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable$1,
      gestures = {},
      listeners = dispatch("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection
        .on("mousedown.drag", mousedowned)
      .filter(touchable)
        .on("touchstart.drag", touchstarted)
        .on("touchmove.drag", touchmoved)
        .on("touchend.drag touchcancel.drag", touchended)
        .style("touch-action", "none")
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned(event, d) {
    if (touchending || !filter.call(this, event, d)) return;
    var gesture = beforestart(this, container.call(this, event, d), event, d, "mouse");
    if (!gesture) return;
    select(event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    dragDisable(event.view);
    nopropagation$1(event);
    mousemoving = false;
    mousedownx = event.clientX;
    mousedowny = event.clientY;
    gesture("start", event);
  }

  function mousemoved(event) {
    noevent$1(event);
    if (!mousemoving) {
      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }
    gestures.mouse("drag", event);
  }

  function mouseupped(event) {
    select(event.view).on("mousemove.drag mouseup.drag", null);
    yesdrag(event.view, mousemoving);
    noevent$1(event);
    gestures.mouse("end", event);
  }

  function touchstarted(event, d) {
    if (!filter.call(this, event, d)) return;
    var touches = event.changedTouches,
        c = container.call(this, event, d),
        n = touches.length, i, gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {
        nopropagation$1(event);
        gesture("start", event, touches[i]);
      }
    }
  }

  function touchmoved(event) {
    var touches = event.changedTouches,
        n = touches.length, i, gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        noevent$1(event);
        gesture("drag", event, touches[i]);
      }
    }
  }

  function touchended(event) {
    var touches = event.changedTouches,
        n = touches.length, i, gesture;

    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        nopropagation$1(event);
        gesture("end", event, touches[i]);
      }
    }
  }

  function beforestart(that, container, event, d, identifier, touch) {
    var dispatch = listeners.copy(),
        p = pointer(touch || event, container), dx, dy,
        s;

    if ((s = subject.call(that, new DragEvent("beforestart", {
        sourceEvent: event,
        target: drag,
        identifier,
        active,
        x: p[0],
        y: p[1],
        dx: 0,
        dy: 0,
        dispatch
      }), d)) == null) return;

    dx = s.x - p[0] || 0;
    dy = s.y - p[1] || 0;

    return function gesture(type, event, touch) {
      var p0 = p, n;
      switch (type) {
        case "start": gestures[identifier] = gesture, n = active++; break;
        case "end": delete gestures[identifier], --active; // nobreak
        case "drag": p = pointer(touch || event, container), n = active; break;
      }
      dispatch.call(
        type,
        that,
        new DragEvent(type, {
          sourceEvent: event,
          subject: s,
          target: drag,
          identifier,
          active: n,
          x: p[0] + dx,
          y: p[1] + dy,
          dx: p[0] - p0[0],
          dy: p[1] - p0[1],
          dispatch
        }),
        d
      );
    };
  }

  drag.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : constant$4(!!_), drag) : filter;
  };

  drag.container = function(_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : constant$4(_), drag) : container;
  };

  drag.subject = function(_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : constant$4(_), drag) : subject;
  };

  drag.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : constant$4(!!_), drag) : touchable;
  };

  drag.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function(_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
}

function define(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition) prototype[key] = definition[key];
  return prototype;
}

function Color() {}

var darker = 0.7;
var brighter = 1 / darker;

var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};

define(Color, color, {
  copy: function(channels) {
    return Object.assign(new this.constructor, this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex, // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
      : null) // invalid hex
      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
      : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb;
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

define(Rgb, rgb, extend(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return (-0.5 <= this.r && this.r < 255.5)
        && (-0.5 <= this.g && this.g < 255.5)
        && (-0.5 <= this.b && this.b < 255.5)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex, // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(")
      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.b) || 0))
      + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;
  else if (l <= 0 || l >= 1) h = s = NaN;
  else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl;
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;
  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;
    else if (g === max) h = (b - r) / s + 2;
    else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

define(Hsl, hsl, extend(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
        && (0 <= this.l && this.l <= 1)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(")
        + (this.h || 0) + ", "
        + (this.s || 0) * 100 + "%, "
        + (this.l || 0) * 100 + "%"
        + (a === 1 ? ")" : ", " + a + ")");
  }
}));

/* From FvD 13.37, CSS Color Module Level 3 */
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60
      : h < 180 ? m2
      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
      : m1) * 255;
}

var constant$3 = x => () => x;

function linear$1(a, d) {
  return function(t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);
}

var interpolateRgb = (function rgbGamma(y) {
  var color = gamma(y);

  function rgb$1(start, end) {
    var r = color((start = rgb(start)).r, (end = rgb(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb$1.gamma = rgbGamma;

  return rgb$1;
})(1);

function numberArray(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function(t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
    return c;
  };
}

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = interpolate$1(a[i], b[i]);
  for (; i < nb; ++i) c[i] = b[i];

  return function(t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);
    return c;
  };
}

function date(a, b) {
  var d = new Date;
  return a = +a, b = +b, function(t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}

function interpolateNumber(a, b) {
  return a = +a, b = +b, function(t) {
    return a * (1 - t) + b * t;
  };
}

function object(a, b) {
  var i = {},
      c = {},
      k;

  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = interpolate$1(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function(t) {
    for (k in i) c[k] = i[k](t);
    return c;
  };
}

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function() {
    return b;
  };
}

function one(b) {
  return function(t) {
    return b(t) + "";
  };
}

function interpolateString(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
      am, // current match in a
      bm, // current match in b
      bs, // string preceding current number in b, if any
      i = -1, // index in s
      s = [], // string constants and placeholders
      q = []; // number interpolators

  // Coerce inputs to strings.
  a = a + "", b = b + "";

  // Interpolate pairs of numbers in a & b.
  while ((am = reA.exec(a))
      && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) { // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else { // interpolate non-matching numbers
      s[++i] = null;
      q.push({i: i, x: interpolateNumber(am, bm)});
    }
    bi = reB.lastIndex;
  }

  // Add remains of b.
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  }

  // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.
  return s.length < 2 ? (q[0]
      ? one(q[0].x)
      : zero(b))
      : (b = q.length, function(t) {
          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        });
}

function interpolate$1(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? constant$3(b)
      : (t === "number" ? interpolateNumber
      : t === "string" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)
      : b instanceof color ? interpolateRgb
      : b instanceof Date ? date
      : isNumberArray(b) ? numberArray
      : Array.isArray(b) ? genericArray
      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object
      : interpolateNumber)(a, b);
}

function interpolateRound(a, b) {
  return a = +a, b = +b, function(t) {
    return Math.round(a * (1 - t) + b * t);
  };
}

var degrees = 180 / Math.PI;

var identity$3 = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};

function decompose(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}

var svgNode;

/* eslint-disable no-undef */
function parseCss(value) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m.isIdentity ? identity$3 : decompose(m.a, m.b, m.c, m.d, m.e, m.f);
}

function parseSvg(value) {
  if (value == null) return identity$3;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$3;
  value = value.matrix;
  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
}

function interpolateTransform(parse, pxComma, pxParen, degParen) {

  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: interpolateNumber(a, b)});
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: interpolateNumber(a, b)});
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function(a, b) {
    var s = [], // string constants and placeholders
        q = []; // number interpolators
    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

var epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}

var interpolateZoom = (function zoomRho(rho, rho2, rho4) {

  // p0 = [ux0, uy0, w0]
  // p1 = [ux1, uy1, w1]
  function zoom(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
        dx = ux1 - ux0,
        dy = uy1 - uy0,
        d2 = dx * dx + dy * dy,
        i,
        S;

    // Special case for u0 ≅ u1.
    if (d2 < epsilon2) {
      S = Math.log(w1 / w0) / rho;
      i = function(t) {
        return [
          ux0 + t * dx,
          uy0 + t * dy,
          w0 * Math.exp(rho * t * S)
        ];
      };
    }

    // General case.
    else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;
      i = function(t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [
          ux0 + u * dx,
          uy0 + u * dy,
          w0 * coshr0 / cosh(rho * s + r0)
        ];
      };
    }

    i.duration = S * 1000 * rho / Math.SQRT2;

    return i;
  }

  zoom.rho = function(_) {
    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
    return zoomRho(_1, _2, _4);
  };

  return zoom;
})(Math.SQRT2, 2, 4);

var frame = 0, // is an animation frame pending?
    timeout$1 = 0, // is a timeout pending?
    interval = 0, // are any timers active?
    pokeDelay = 1000, // how frequently we check for clock skew
    taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call =
  this._time =
  this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function(callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;
      else taskHead = this;
      taskTail = this;
    }
    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer;
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.
  ++frame; // Pretend we’ve set an alarm, if we haven’t already.
  var t = taskHead, e;
  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }
  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout$1 = 0;
  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(), delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0, t1 = taskHead, t2, time = Infinity;
  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }
  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.
  if (timeout$1) timeout$1 = clearTimeout(timeout$1);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
  if (delay > 24) {
    if (time < Infinity) timeout$1 = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}

function timeout(callback, delay, time) {
  var t = new Timer;
  delay = delay == null ? 0 : +delay;
  t.restart(elapsed => {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}

var emptyOn = dispatch("start", "end", "cancel", "interrupt");
var emptyTween = [];

var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;

function schedule(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};
  else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index, // For context during callback.
    group: group, // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween;

  // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!
  schedules[id] = self;
  self.timer = timer(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time);

    // If the elapsed delay is less than our first sleep, start immediately.
    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o;

    // If the state is not SCHEDULED, then we previously errored on start.
    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue;

      // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!
      if (o.state === STARTED) return timeout(start);

      // Interrupt the active transition, if any.
      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }

      // Cancel any pre-empted transitions.
      else if (+i < id) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("cancel", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }
    }

    // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.
    timeout(function() {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    });

    // Dispatch the start event.
    // Note this must be done before the tween are initialized.
    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted
    self.state = STARTED;

    // Initialize the tween, deleting null tween.
    tween = new Array(n = self.tween.length);
    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }
    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    }

    // Dispatch the end event.
    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];
    for (var i in schedules) return; // eslint-disable-line no-unused-vars
    delete node.__transition;
  }
}

function interrupt(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;

  if (!schedules) return;

  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }
    active = schedule.state > STARTING && schedule.state < ENDING;
    schedule.state = ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}

function selection_interrupt(name) {
  return this.each(function() {
    interrupt(this, name);
  });
}

function tweenRemove(id, name) {
  var tween0, tween1;
  return function() {
    var schedule = set(this, id),
        tween = schedule.tween;

    // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.
    if (tween !== tween0) {
      tween1 = tween0 = tween;
      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error;
  return function() {
    var schedule = set(this, id),
        tween = schedule.tween;

    // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.
    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();
      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }
      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

function transition_tween(name, value) {
  var id = this._id;

  name += "";

  if (arguments.length < 2) {
    var tween = get(this.node(), id).tween;
    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }
    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;

  transition.each(function() {
    var schedule = set(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });

  return function(node) {
    return get(node, id).value[name];
  };
}

function interpolate(a, b) {
  var c;
  return (typeof b === "number" ? interpolateNumber
      : b instanceof color ? interpolateRgb
      : (c = color(b)) ? (b = c, interpolateRgb)
      : interpolateString)(a, b);
}

function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function transition_attr(name, value) {
  var fullname = namespace(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate;
  return this.attrTween(name, typeof value === "function"
      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, "attr." + name, value))
      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)
      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}

function attrInterpolate(name, i) {
  return function(t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function(t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }
  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }
  tween._value = value;
  return tween;
}

function transition_attrTween(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  var fullname = namespace(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}

function delayFunction(id, value) {
  return function() {
    init(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function() {
    init(this, id).delay = value;
  };
}

function transition_delay(value) {
  var id = this._id;

  return arguments.length
      ? this.each((typeof value === "function"
          ? delayFunction
          : delayConstant)(id, value))
      : get(this.node(), id).delay;
}

function durationFunction(id, value) {
  return function() {
    set(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function() {
    set(this, id).duration = value;
  };
}

function transition_duration(value) {
  var id = this._id;

  return arguments.length
      ? this.each((typeof value === "function"
          ? durationFunction
          : durationConstant)(id, value))
      : get(this.node(), id).duration;
}

function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error;
  return function() {
    set(this, id).ease = value;
  };
}

function transition_ease(value) {
  var id = this._id;

  return arguments.length
      ? this.each(easeConstant(id, value))
      : get(this.node(), id).ease;
}

function easeVarying(id, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (typeof v !== "function") throw new Error;
    set(this, id).ease = v;
  };
}

function transition_easeVarying(value) {
  if (typeof value !== "function") throw new Error;
  return this.each(easeVarying(this._id, value));
}

function transition_filter(match) {
  if (typeof match !== "function") match = matcher(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new Transition(subgroups, this._parents, this._name, this._id);
}

function transition_merge(transition) {
  if (transition._id !== this._id) throw new Error;

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new Transition(merges, this._parents, this._name, this._id);
}

function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function(t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0, on1, sit = start(name) ? init : set;
  return function() {
    var schedule = sit(this, id),
        on = schedule.on;

    // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.
    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);

    schedule.on = on1;
  };
}

function transition_on(name, listener) {
  var id = this._id;

  return arguments.length < 2
      ? get(this.node(), id).on.on(name)
      : this.each(onFunction(id, name, listener));
}

function removeFunction(id) {
  return function() {
    var parent = this.parentNode;
    for (var i in this.__transition) if (+i !== id) return;
    if (parent) parent.removeChild(this);
  };
}

function transition_remove() {
  return this.on("end.remove", removeFunction(this._id));
}

function transition_select(select) {
  var name = this._name,
      id = this._id;

  if (typeof select !== "function") select = selector(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        schedule(subgroup[i], name, id, i, subgroup, get(node, id));
      }
    }
  }

  return new Transition(subgroups, this._parents, name, id);
}

function transition_selectAll(select) {
  var name = this._name,
      id = this._id;

  if (typeof select !== "function") select = selectorAll(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            schedule(child, name, id, k, children, inherit);
          }
        }
        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new Transition(subgroups, parents, name, id);
}

var Selection = selection.prototype.constructor;

function transition_selection() {
  return new Selection(this._groups, this._parents);
}

function styleNull(name, interpolate) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0 = styleValue(this, name),
        string1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = styleValue(this, name);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0 = styleValue(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0, on1, listener0, key = "style." + name, event = "end." + key, remove;
  return function() {
    var schedule = set(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;

    // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.
    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);

    schedule.on = on1;
  };
}

function transition_style(name, value, priority) {
  var i = (name += "") === "transform" ? interpolateTransformCss : interpolate;
  return value == null ? this
      .styleTween(name, styleNull(name, i))
      .on("end.style." + name, styleRemove(name))
    : typeof value === "function" ? this
      .styleTween(name, styleFunction(name, i, tweenValue(this, "style." + name, value)))
      .each(styleMaybeRemove(this._id, name))
    : this
      .styleTween(name, styleConstant(name, i, value), priority)
      .on("end.style." + name, null);
}

function styleInterpolate(name, i, priority) {
  return function(t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }
  tween._value = value;
  return tween;
}

function transition_styleTween(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}

function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function() {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

function transition_text(value) {
  return this.tween("text", typeof value === "function"
      ? textFunction(tweenValue(this, "text", value))
      : textConstant(value == null ? "" : value + ""));
}

function textInterpolate(i) {
  return function(t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }
  tween._value = value;
  return tween;
}

function transition_textTween(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  return this.tween(key, textTween(value));
}

function transition_transition() {
  var name = this._name,
      id0 = this._id,
      id1 = newId();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = get(node, id0);
        schedule(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new Transition(groups, this._parents, name, id1);
}

function transition_end() {
  var on0, on1, that = this, id = that._id, size = that.size();
  return new Promise(function(resolve, reject) {
    var cancel = {value: reject},
        end = {value: function() { if (--size === 0) resolve(); }};

    that.each(function() {
      var schedule = set(this, id),
          on = schedule.on;

      // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.
      if (on !== on0) {
        on1 = (on0 = on).copy();
        on1._.cancel.push(cancel);
        on1._.interrupt.push(cancel);
        on1._.end.push(end);
      }

      schedule.on = on1;
    });

    // The selection was empty, resolve end immediately
    if (size === 0) resolve();
  });
}

var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function newId() {
  return ++id;
}

var selection_prototype = selection.prototype;

Transition.prototype = {
  constructor: Transition,
  select: transition_select,
  selectAll: transition_selectAll,
  filter: transition_filter,
  merge: transition_merge,
  selection: transition_selection,
  transition: transition_transition,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: transition_on,
  attr: transition_attr,
  attrTween: transition_attrTween,
  style: transition_style,
  styleTween: transition_styleTween,
  text: transition_text,
  textTween: transition_textTween,
  remove: transition_remove,
  tween: transition_tween,
  delay: transition_delay,
  duration: transition_duration,
  ease: transition_ease,
  easeVarying: transition_easeVarying,
  end: transition_end,
  [Symbol.iterator]: selection_prototype[Symbol.iterator]
};

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}

var defaultTiming = {
  time: null, // Set on use.
  delay: 0,
  duration: 250,
  ease: cubicInOut
};

function inherit(node, id) {
  var timing;
  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id} not found`);
    }
  }
  return timing;
}

function selection_transition(name) {
  var id,
      timing;

  if (name instanceof Transition) {
    id = name._id, name = name._name;
  } else {
    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        schedule(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new Transition(groups, this._parents, name, id);
}

selection.prototype.interrupt = selection_interrupt;
selection.prototype.transition = selection_transition;

const pi$1 = Math.PI,
    tau$1 = 2 * pi$1,
    epsilon$1 = 1e-6,
    tauEpsilon = tau$1 - epsilon$1;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath
  this._ = "";
}

function path() {
  return new Path;
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function(x1, y1, x, y) {
    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) {
    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x1,y1).
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon$1));

    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
    // Equivalently, is (x1,y1) coincident with (x2,y2)?
    // Or, is the radius zero? Line to (x1,y1).
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Otherwise, draw an arc!
    else {
      var x20 = x2 - x0,
          y20 = y2 - y0,
          l21_2 = x21 * x21 + y21 * y21,
          l20_2 = x20 * x20 + y20 * y20,
          l21 = Math.sqrt(l21_2),
          l01 = Math.sqrt(l01_2),
          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
          t01 = l / l01,
          t21 = l / l21;

      // If the start tangent is not coincident with (x0,y0), line to.
      if (Math.abs(t01 - 1) > epsilon$1) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }

      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x0,y0).
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    }

    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {
      this._ += "L" + x0 + "," + y0;
    }

    // Is this arc empty? We’re done.
    if (!r) return;

    // Does the angle go the wrong way? Flip the direction.
    if (da < 0) da = da % tau$1 + tau$1;

    // Is this a complete circle? Draw two arcs to complete the circle.
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    }

    // Is this arc non-empty? Draw an arc!
    else if (da > epsilon$1) {
      this._ += "A" + r + "," + r + ",0," + (+(da >= pi$1)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
    }
  },
  rect: function(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
  },
  toString: function() {
    return this._;
  }
};

function forceCenter(x, y) {
  var nodes, strength = 1;

  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function(_) {
    nodes = _;
  };

  force.x = function(_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function(_) {
    return arguments.length ? (y = +_, force) : y;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  return force;
}

function tree_add(d) {
  const x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
}

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {data: d},
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j;

  // If the tree is empty, initialize the root as a leaf.
  if (!node) return tree._root = leaf, tree;

  // Find the existing leaf for the new point, or add it.
  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  }

  // Is the new point is exactly coincident with the existing point?
  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;

  // Otherwise, split the leaf node until the old and new point are separated.
  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));
  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d, i, n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity;

  // Compute the points and their extent.
  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  }

  // If there were no (valid) points, abort.
  if (x0 > x1 || y0 > y1) return this;

  // Expand the tree to cover the new points.
  this.cover(x0, y0).cover(x1, y1);

  // Add the new points.
  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}

function tree_cover(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1;

  // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!
  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  }

  // Otherwise, double repeatedly to cover.
  else {
    var z = x1 - x0 || 1,
        node = this._root,
        parent,
        i;

    while (x0 > x || x >= x1 || y0 > y || y >= y1) {
      i = (y < y0) << 1 | (x < x0);
      parent = new Array(4), parent[i] = node, node = parent, z *= 2;
      switch (i) {
        case 0: x1 = x0 + z, y1 = y0 + z; break;
        case 1: x0 = x1 - z, y1 = y0 + z; break;
        case 2: x1 = x0 + z, y0 = y1 - z; break;
        case 3: x0 = x1 - z, y0 = y1 - z; break;
      }
    }

    if (this._root && this._root.length) this._root = node;
  }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
}

function tree_data() {
  var data = [];
  this.visit(function(node) {
    if (!node.length) do data.push(node.data); while (node = node.next)
  });
  return data;
}

function tree_extent(_) {
  return arguments.length
      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])
      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
}

function Quad(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
}

function tree_find(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;

  if (node) quads.push(new Quad(node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;
  else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {

    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node)
        || (x1 = q.x0) > x3
        || (y1 = q.y0) > y3
        || (x2 = q.x1) < x0
        || (y2 = q.y1) < y0) continue;

    // Bisect the current quadrant.
    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;

      quads.push(
        new Quad(node[3], xm, ym, x2, y2),
        new Quad(node[2], x1, ym, xm, y2),
        new Quad(node[1], xm, y1, x2, ym),
        new Quad(node[0], x1, y1, xm, ym)
      );

      // Visit the closest quadrant first.
      if (i = (y >= ym) << 1 | (x >= xm)) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    }

    // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
      var dx = x - +this._x.call(null, node.data),
          dy = y - +this._y.call(null, node.data),
          d2 = dx * dx + dy * dy;
      if (d2 < radius) {
        var d = Math.sqrt(radius = d2);
        x0 = x - d, y0 = y - d;
        x3 = x + d, y3 = y + d;
        data = node.data;
      }
    }
  }

  return data;
}

function tree_remove(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j;

  // If the tree is empty, initialize the root as a leaf.
  if (!node) return this;

  // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.
  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;
  }

  // Find the point to remove.
  while (node.data !== d) if (!(previous = node, node = node.next)) return this;
  if (next = node.next) delete node.next;

  // If there are multiple coincident points, remove just the point.
  if (previous) return (next ? previous.next = next : delete previous.next), this;

  // If this is the root point, remove it.
  if (!parent) return this._root = next, this;

  // Remove this leaf.
  next ? parent[i] = next : delete parent[i];

  // If the parent now contains exactly one leaf, collapse superfluous parents.
  if ((node = parent[0] || parent[1] || parent[2] || parent[3])
      && node === (parent[3] || parent[2] || parent[1] || parent[0])
      && !node.length) {
    if (retainer) retainer[j] = node;
    else this._root = node;
  }

  return this;
}

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);
  return this;
}

function tree_root() {
  return this._root;
}

function tree_size() {
  var size = 0;
  this.visit(function(node) {
    if (!node.length) do ++size; while (node = node.next)
  });
  return size;
}

function tree_visit(callback) {
  var quads = [], q, node = this._root, child, x0, y0, x1, y1;
  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));
  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
    }
  }
  return this;
}

function tree_visitAfter(callback) {
  var quads = [], next = [], q;
  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));
  while (q = quads.pop()) {
    var node = q.node;
    if (node.length) {
      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
    }
    next.push(q);
  }
  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }
  return this;
}

function defaultX(d) {
  return d[0];
}

function tree_x(_) {
  return arguments.length ? (this._x = _, this) : this._x;
}

function defaultY(d) {
  return d[1];
}

function tree_y(_) {
  return arguments.length ? (this._y = _, this) : this._y;
}

function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {data: leaf.data}, next = copy;
  while (leaf = leaf.next) next = next.next = {data: leaf.data};
  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function() {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;

  if (!node) return copy;

  if (!node.length) return copy._root = leaf_copy(node), copy;

  nodes = [{source: node, target: copy._root = new Array(4)}];
  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});
        else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = tree_add;
treeProto.addAll = addAll;
treeProto.cover = tree_cover;
treeProto.data = tree_data;
treeProto.extent = tree_extent;
treeProto.find = tree_find;
treeProto.remove = tree_remove;
treeProto.removeAll = removeAll;
treeProto.root = tree_root;
treeProto.size = tree_size;
treeProto.visit = tree_visit;
treeProto.visitAfter = tree_visitAfter;
treeProto.x = tree_x;
treeProto.y = tree_y;

function constant$2(x) {
  return function() {
    return x;
  };
}

function jiggle(random) {
  return (random() - 0.5) * 1e-6;
}

function x$2(d) {
  return d.x + d.vx;
}

function y$2(d) {
  return d.y + d.vy;
}

function forceCollide(radius) {
  var nodes,
      radii,
      random,
      strength = 1,
      iterations = 1;

  if (typeof radius !== "function") radius = constant$2(radius == null ? 1 : +radius);

  function force() {
    var i, n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = quadtree(nodes, x$2, y$2).visitAfter(prepare);
      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data, rj = quad.r, r = ri + rj;
      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;
          if (l < r * r) {
            if (x === 0) x = jiggle(random), l += x * x;
            if (y === 0) y = jiggle(random), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }
        return;
      }
      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];
    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length, node;
    radii = new Array(n);
    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function(_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.iterations = function(_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : constant$2(+_), initialize(), force) : radius;
  };

  return force;
}

function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("node not found: " + nodeId);
  return node;
}

function forceLink(links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = constant$2(30),
      distances,
      nodes,
      count,
      bias,
      random,
      iterations = 1;

  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || jiggle(random);
        y = target.y + target.vy - source.y - source.vy || jiggle(random);
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;

    var i,
        n = nodes.length,
        m = links.length,
        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function(_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.links = function(_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function(_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function(_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : constant$2(+_), initializeStrength(), force) : strength;
  };

  force.distance = function(_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : constant$2(+_), initializeDistance(), force) : distance;
  };

  return force;
}

// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
const a = 1664525;
const c = 1013904223;
const m = 4294967296; // 2^32

function lcg() {
  let s = 1;
  return () => (s = (a * s + c) % m) / m;
}

function x$1(d) {
  return d.x;
}

function y$1(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

function forceSimulation(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = new Map(),
      stepper = timer(step),
      event = dispatch("tick", "end"),
      random = lcg();

  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);
    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i, n = nodes.length, node;

    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;

      forces.forEach(function(force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;
        else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;
        else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;
      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }
      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes, random);
    return force;
  }

  initializeNodes();

  return simulation = {
    tick: tick,

    restart: function() {
      return stepper.restart(step), simulation;
    },

    stop: function() {
      return stepper.stop(), simulation;
    },

    nodes: function(_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;
    },

    alpha: function(_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },

    alphaMin: function(_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },

    alphaDecay: function(_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },

    alphaTarget: function(_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },

    velocityDecay: function(_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },

    randomSource: function(_) {
      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;
    },

    force: function(name, _) {
      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);
    },

    find: function(x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;

      if (radius == null) radius = Infinity;
      else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },

    on: function(name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
}

function forceManyBody() {
  var nodes,
      node,
      random,
      alpha,
      strength = constant$2(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);
    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length, node;
    strengths = new Array(n);
    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0, q, c, weight = 0, x, y, i;

    // For internal nodes, accumulate forces from child quadrants.
    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }
      quad.x = x / weight;
      quad.y = y / weight;
    }

    // For leaf nodes, accumulate forces from coincident quadrants.
    else {
      q = quad;
      q.x = q.data.x;
      q.y = q.data.y;
      do strength += strengths[q.data.index];
      while (q = q.next);
    }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;

    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y;

    // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.
    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = jiggle(random), l += x * x;
        if (y === 0) y = jiggle(random), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }
      return true;
    }

    // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return;

    // Limit forces for very close nodes; randomize direction if coincident.
    if (quad.data !== node || quad.next) {
      if (x === 0) x = jiggle(random), l += x * x;
      if (y === 0) y = jiggle(random), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function(_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : constant$2(+_), initialize(), force) : strength;
  };

  force.distanceMin = function(_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function(_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function(_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
}

function forceX(x) {
  var strength = constant$2(0.1),
      nodes,
      strengths,
      xz;

  if (typeof x !== "function") x = constant$2(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);
    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : constant$2(+_), initialize(), force) : strength;
  };

  force.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : constant$2(+_), initialize(), force) : x;
  };

  return force;
}

function forceY(y) {
  var strength = constant$2(0.1),
      nodes,
      strengths,
      yz;

  if (typeof y !== "function") y = constant$2(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);
    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : constant$2(+_), initialize(), force) : strength;
  };

  force.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : constant$2(+_), initialize(), force) : y;
  };

  return force;
}

function formatDecimal(x) {
  return Math.abs(x = Math.round(x)) >= 1e21
      ? x.toLocaleString("en").replace(/,/g, "")
      : x.toString(10);
}

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].
function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
  var i, coefficient = x.slice(0, i);

  // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
}

function exponent(x) {
  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;
}

function formatGroup(grouping, thousands) {
  return function(value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}

function formatNumerals(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}

// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function() {
  return this.fill
      + this.align
      + this.sign
      + this.symbol
      + (this.zero ? "0" : "")
      + (this.width === undefined ? "" : Math.max(1, this.width | 0))
      + (this.comma ? "," : "")
      + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
      + (this.trim ? "~" : "")
      + this.type;
};

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function formatTrim(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".": i0 = i1 = i; break;
      case "0": if (i0 === 0) i0 = i; i1 = i; break;
      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;
    }
  }
  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}

var prefixExponent;

function formatPrefixAuto(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient
      : i > n ? coefficient + new Array(i - n + 1).join("0")
      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
      : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}

function formatRounded(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
      : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

var formatTypes = {
  "%": (x, p) => (x * 100).toFixed(p),
  "b": (x) => Math.round(x).toString(2),
  "c": (x) => x + "",
  "d": formatDecimal,
  "e": (x, p) => x.toExponential(p),
  "f": (x, p) => x.toFixed(p),
  "g": (x, p) => x.toPrecision(p),
  "o": (x) => Math.round(x).toString(8),
  "p": (x, p) => formatRounded(x * 100, p),
  "r": formatRounded,
  "s": formatPrefixAuto,
  "X": (x) => Math.round(x).toString(16).toUpperCase(),
  "x": (x) => Math.round(x).toString(16)
};

function identity$2(x) {
  return x;
}

var map = Array.prototype.map,
    prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

function formatLocale(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? identity$2 : formatGroup(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? identity$2 : formatNumerals(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "−" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);

    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type;

    // The "n" type is an alias for ",g".
    if (type === "n") comma = true, type = "g";

    // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = "g";

    // If zero fill is specified, padding goes after sign and before digits.
    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

    // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";

    // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?
    var formatType = formatTypes[type],
        maybeSuffix = /[defgprs%]/.test(type);

    // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].
    precision = precision === undefined ? 6
        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
        : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i, n, c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;

        // Determine the sign. -0 is not less than 0, but 1 / -0 is!
        var valueNegative = value < 0 || 1 / value < 0;

        // Perform the initial formatting.
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);

        // Trim insignificant zeros.
        if (trim) value = formatTrim(value);

        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;

        // Compute the prefix and suffix.
        valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

        // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }

      // If the fill character is not "0", grouping is applied before padding.
      if (comma && !zero) value = group(value, Infinity);

      // Compute the padding.
      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : "";

      // If the fill character is "0", grouping is applied after padding.
      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

      // Reconstruct the final output based on the desired alignment.
      switch (align) {
        case "<": value = valuePrefix + value + valueSuffix + padding; break;
        case "=": value = valuePrefix + padding + value + valueSuffix; break;
        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
        default: value = padding + valuePrefix + value + valueSuffix; break;
      }

      return numerals(value);
    }

    format.toString = function() {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function(value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}

var locale;
var format;
var formatPrefix;

defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});

function defaultLocale(definition) {
  locale = formatLocale(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}

function precisionFixed(step) {
  return Math.max(0, -exponent(Math.abs(step)));
}

function precisionPrefix(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
}

function precisionRound(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, exponent(max) - exponent(step)) + 1;
}

function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;
  else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

function node_count() {
  return this.eachAfter(count);
}

function node_each(callback, that) {
  let index = -1;
  for (const node of this) {
    callback.call(that, node, ++index, this);
  }
  return this;
}

function node_eachBefore(callback, that) {
  var node = this, nodes = [node], children, i, index = -1;
  while (node = nodes.pop()) {
    callback.call(that, node, ++index, this);
    if (children = node.children) {
      for (i = children.length - 1; i >= 0; --i) {
        nodes.push(children[i]);
      }
    }
  }
  return this;
}

function node_eachAfter(callback, that) {
  var node = this, nodes = [node], next = [], children, i, n, index = -1;
  while (node = nodes.pop()) {
    next.push(node);
    if (children = node.children) {
      for (i = 0, n = children.length; i < n; ++i) {
        nodes.push(children[i]);
      }
    }
  }
  while (node = next.pop()) {
    callback.call(that, node, ++index, this);
  }
  return this;
}

function node_find(callback, that) {
  let index = -1;
  for (const node of this) {
    if (callback.call(that, node, ++index, this)) {
      return node;
    }
  }
}

function node_sum(value) {
  return this.eachAfter(function(node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;
    while (--i >= 0) sum += children[i].value;
    node.value = sum;
  });
}

function node_sort(compare) {
  return this.eachBefore(function(node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}

function node_path(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];
  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }
  var k = nodes.length;
  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }
  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();
  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }
  return c;
}

function node_ancestors() {
  var node = this, nodes = [node];
  while (node = node.parent) {
    nodes.push(node);
  }
  return nodes;
}

function node_descendants() {
  return Array.from(this);
}

function node_leaves() {
  var leaves = [];
  this.eachBefore(function(node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}

function node_links() {
  var root = this, links = [];
  root.each(function(node) {
    if (node !== root) { // Don’t include the root’s parent, if any.
      links.push({source: node.parent, target: node});
    }
  });
  return links;
}

function* node_iterator() {
  var node = this, current, next = [node], children, i, n;
  do {
    current = next.reverse(), next = [];
    while (node = current.pop()) {
      yield node;
      if (children = node.children) {
        for (i = 0, n = children.length; i < n; ++i) {
          next.push(children[i]);
        }
      }
    }
  } while (next.length);
}

function hierarchy(data, children) {
  if (data instanceof Map) {
    data = [undefined, data];
    if (children === undefined) children = mapChildren;
  } else if (children === undefined) {
    children = objectChildren;
  }

  var root = new Node(data),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;

  while (node = nodes.pop()) {
    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {
      node.children = childs;
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = childs[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function objectChildren(d) {
  return d.children;
}

function mapChildren(d) {
  return Array.isArray(d) ? d[1] : null;
}

function copyData(node) {
  if (node.data.value !== undefined) node.value = node.data.value;
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;
  do node.height = height;
  while ((node = node.parent) && (node.height < ++height));
}

function Node(data) {
  this.data = data;
  this.depth =
  this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: node_count,
  each: node_each,
  eachAfter: node_eachAfter,
  eachBefore: node_eachBefore,
  find: node_find,
  sum: node_sum,
  sort: node_sort,
  path: node_path,
  ancestors: node_ancestors,
  descendants: node_descendants,
  leaves: node_leaves,
  links: node_links,
  copy: node_copy,
  [Symbol.iterator]: node_iterator
};

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

// function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }

// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.
function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
}

// This function works analogously to nextLeft.
function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
}

// Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.
function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
}

// All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).
function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;
  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
}

// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.
function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor
  this.a = this; // ancestor
  this.z = 0; // prelim
  this.m = 0; // mod
  this.c = 0; // change
  this.s = 0; // shift
  this.t = null; // thread
  this.i = i; // number
}

TreeNode.prototype = Object.create(Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
}

// Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
function tree() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root);

    // Compute the layout using Buchheim et al.’s algorithm.
    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk);

    // If a fixed node size is specified, scale x and y.
    if (nodeSize) root.eachBefore(sizeNode);

    // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
      var left = root,
          right = root,
          bottom = root;
      root.eachBefore(function(node) {
        if (node.x < left.x) left = node;
        if (node.x > right.x) right = node;
        if (node.depth > bottom.depth) bottom = node;
      });
      var s = left === right ? 1 : separation(left, right) / 2,
          tx = s - left.x,
          kx = dx / (right.x + s + tx),
          ky = dy / (bottom.depth || 1);
      root.eachBefore(function(node) {
        node.x = (node.x + tx) * kx;
        node.y = node.depth * ky;
      });
    }

    return root;
  }

  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.
  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;
    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;
      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }
    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  }

  // Computes all real x-coordinates by summing up the modifiers recursively.
  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  }

  // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).
  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;
      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }
        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }
      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }
      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }
    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function(x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function(x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
  };

  tree.nodeSize = function(x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
  };

  return tree;
}

function initRange(domain, range) {
  switch (arguments.length) {
    case 0: break;
    case 1: this.range(domain); break;
    default: this.range(range).domain(domain); break;
  }
  return this;
}

const implicit = Symbol("implicit");

function ordinal() {
  var index = new Map(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "", i = index.get(key);
    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }
    return range[(i - 1) % range.length];
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = new Map();
    for (const value of _) {
      const key = value + "";
      if (index.has(key)) continue;
      index.set(key, domain.push(value));
    }
    return scale;
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), scale) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return ordinal(domain, range).unknown(unknown);
  };

  initRange.apply(scale, arguments);

  return scale;
}

function band() {
  var scale = ordinal().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      r0 = 0,
      r1 = 1,
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;

  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = r1 < r0,
        start = reverse ? r1 : r0,
        stop = reverse ? r0 : r1;
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = range(n).map(function(i) { return start + step * i; });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };

  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
  };

  scale.bandwidth = function() {
    return bandwidth;
  };

  scale.step = function() {
    return step;
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function() {
    return band(domain(), [r0, r1])
        .round(round)
        .paddingInner(paddingInner)
        .paddingOuter(paddingOuter)
        .align(align);
  };

  return initRange.apply(rescale(), arguments);
}

function constants(x) {
  return function() {
    return x;
  };
}

function number(x) {
  return +x;
}

var unit = [0, 1];

function identity$1(x) {
  return x;
}

function normalize(a, b) {
  return (b -= (a = +a))
      ? function(x) { return (x - a) / b; }
      : constants(isNaN(b) ? NaN : 0.5);
}

function clamper(a, b) {
  var t;
  if (a > b) t = a, a = b, b = t;
  return function(x) { return Math.max(a, Math.min(b, x)); };
}

// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function bimap(domain, range, interpolate) {
  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function(x) { return r0(d0(x)); };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1;

  // Reverse descending domains.
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function(x) {
    var i = bisectRight(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .range(source.range())
      .interpolate(source.interpolate())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = interpolate$1,
      transform,
      untransform,
      unknown,
      clamp = identity$1,
      piecewise,
      output,
      input;

  function rescale() {
    var n = Math.min(domain.length, range.length);
    if (clamp !== identity$1) clamp = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function(y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));
  };

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.rangeRound = function(_) {
    return range = Array.from(_), interpolate = interpolateRound, rescale();
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = _ ? true : identity$1, rescale()) : clamp !== identity$1;
  };

  scale.interpolate = function(_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous() {
  return transformer()(identity$1, identity$1);
}

function tickFormat(start, stop, count, specifier) {
  var step = tickStep(start, stop, count),
      precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;
      return formatPrefix(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format(specifier);
}

function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function(count) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function(count) {
    if (count == null) count = 10;

    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    
    while (maxIter-- > 0) {
      step = tickIncrement(start, stop, count);
      if (step === prestep) {
        d[i0] = start;
        d[i1] = stop;
        return domain(d);
      } else if (step > 0) {
        start = Math.floor(start / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start = Math.ceil(start * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = continuous();

  scale.copy = function() {
    return copy(scale, linear());
  };

  initRange.apply(scale, arguments);

  return linearish(scale);
}

function colors(specifier) {
  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
  return colors;
}

var schemeCategory10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

function constant$1(x) {
  return function constant() {
    return x;
  };
}

var abs = Math.abs;
var atan2 = Math.atan2;
var cos = Math.cos;
var max = Math.max;
var min = Math.min;
var sin = Math.sin;
var sqrt = Math.sqrt;

var epsilon = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var tau = 2 * pi;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}

function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0, y10 = y1 - y0,
      x32 = x3 - x2, y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
}

// Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00;

  // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;

  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

function arc() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = constant$1(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - halfPi,
        a1 = endAngle.apply(this, arguments) - halfPi,
        da = abs(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = path();

    // Ensure that the outer radius is always larger than the inner radius.
    if (r1 < r0) r = r1, r1 = r0, r0 = r;

    // Is it a point?
    if (!(r1 > epsilon)) context.moveTo(0, 0);

    // Or is it a circle or annulus?
    else if (da > tau - epsilon) {
      context.moveTo(r1 * cos(a0), r1 * sin(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > epsilon) {
        context.moveTo(r0 * cos(a1), r0 * sin(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    }

    // Or is it a circular or annular sector?
    else {
      var a01 = a0,
          a11 = a1,
          a00 = a0,
          a10 = a1,
          da0 = da,
          da1 = da,
          ap = padAngle.apply(this, arguments) / 2,
          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),
          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
          rc0 = rc,
          rc1 = rc,
          t0,
          t1;

      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
      if (rp > epsilon) {
        var p0 = asin(rp / r0 * sin(ap)),
            p1 = asin(rp / r1 * sin(ap));
        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
        else da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
        else da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }

      var x01 = r1 * cos(a01),
          y01 = r1 * sin(a01),
          x10 = r0 * cos(a10),
          y10 = r0 * sin(a10);

      // Apply rounded corners?
      if (rc > epsilon) {
        var x11 = r1 * cos(a11),
            y11 = r1 * sin(a11),
            x00 = r0 * cos(a00),
            y00 = r0 * sin(a00),
            oc;

        // Restrict the corner radius according to the sector angle.
        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
          var ax = x01 - oc[0],
              ay = y01 - oc[1],
              bx = x11 - oc[0],
              by = y11 - oc[1],
              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),
              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = min(rc, (r0 - lc) / (kc - 1));
          rc1 = min(rc, (r1 - lc) / (kc + 1));
        }
      }

      // Is the sector collapsed to a line?
      if (!(da1 > epsilon)) context.moveTo(x01, y01);

      // Does the sector’s outer ring have rounded corners?
      else if (rc1 > epsilon) {
        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);

        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the outer ring just a circular arc?
      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);

      // Is there no inner ring, and it’s a circular sector?
      // Or perhaps it’s an annular sector collapsed due to padding?
      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);

      // Does the sector’s inner ring (or point) have rounded corners?
      else if (rc0 > epsilon) {
        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);

        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the inner ring just a circular arc?
      else context.arc(0, 0, r0, a10, a00, cw);
    }

    context.closePath();

    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function() {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;
    return [cos(a) * r, sin(a) * r];
  };

  arc.innerRadius = function(_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : innerRadius;
  };

  arc.outerRadius = function(_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function(_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : cornerRadius;
  };

  arc.padRadius = function(_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), arc) : padRadius;
  };

  arc.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : startAngle;
  };

  arc.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : endAngle;
  };

  arc.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : padAngle;
  };

  arc.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), arc) : context;
  };

  return arc;
}

function array(x) {
  return typeof x === "object" && "length" in x
    ? x // Array, TypedArray, NodeList, array-like
    : Array.from(x); // Map, Set, iterable, string, or anything else
}

function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // proceed
      default: this._context.lineTo(x, y); break;
    }
  }
};

function curveLinear(context) {
  return new Linear(context);
}

function x(p) {
  return p[0];
}

function y(p) {
  return p[1];
}

function line(x$1, y$1) {
  var defined = constant$1(true),
      context = null,
      curve = curveLinear,
      output = null;

  x$1 = typeof x$1 === "function" ? x$1 : (x$1 === undefined) ? x : constant$1(x$1);
  y$1 = typeof y$1 === "function" ? y$1 : (y$1 === undefined) ? y : constant$1(y$1);

  function line(data) {
    var i,
        n = (data = array(data)).length,
        d,
        defined0 = false,
        buffer;

    if (context == null) output = curve(buffer = path());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();
        else output.lineEnd();
      }
      if (defined0) output.point(+x$1(d, i, data), +y$1(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function(_) {
    return arguments.length ? (x$1 = typeof _ === "function" ? _ : constant$1(+_), line) : x$1;
  };

  line.y = function(_) {
    return arguments.length ? (y$1 = typeof _ === "function" ? _ : constant$1(+_), line) : y$1;
  };

  line.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : constant$1(!!_), line) : defined;
  };

  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}

var curveRadialLinear = curveRadial(curveLinear);

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {

  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;

  return radial;
}

function lineRadial(l) {
  var c = l.curve;

  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function(_) {
    return arguments.length ? c(curveRadial(_)) : c()._curve;
  };

  return l;
}

function radialLine() {
  return lineRadial(line().curve(curveRadialLinear));
}

function point(that, x, y) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x) / 6,
    (that._y0 + 4 * that._y1 + y) / 6
  );
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3: point(this, this._x1, this._y1); // proceed
      case 2: this._context.lineTo(this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
      default: point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function Bundle(context, beta) {
  this._basis = new Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;
        this._basis.point(
          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
        );
      }
    }

    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

var curveBundle = (function custom(beta) {

  function bundle(context) {
    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function(beta) {
    return custom(+beta);
  };

  return bundle;
})(0.85);

var constant = x => () => x;

function ZoomEvent(type, {
  sourceEvent,
  target,
  transform,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {value: type, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    transform: {value: transform, enumerable: true, configurable: true},
    _: {value: dispatch}
  });
}

function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}

Transform.prototype = {
  constructor: Transform,
  scale: function(k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function(x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function(point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function(x) {
    return x * this.k + this.x;
  },
  applyY: function(y) {
    return y * this.k + this.y;
  },
  invert: function(location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function(x) {
    return (x - this.x) / this.k;
  },
  invertY: function(y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function(x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function(y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};

var identity = new Transform(1, 0, 0);

function nopropagation(event) {
  event.stopImmediatePropagation();
}

function noevent(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

// Ignore right-click, since that should open the context menu.
// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event
function defaultFilter(event) {
  return (!event.ctrlKey || event.type === 'wheel') && !event.button;
}

function defaultExtent() {
  var e = this;
  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;
    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }
    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }
  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || identity;
}

function defaultWheelDelta(event) {
  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);
}

function defaultTouchable() {
  return navigator.maxTouchPoints || ("ontouchstart" in this);
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(
    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),
    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)
  );
}

function zoom() {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = interpolateZoom,
      listeners = dispatch("start", "zoom", "end"),
      touchstarting,
      touchfirst,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0,
      tapDistance = 10;

  function zoom(selection) {
    selection
        .property("__zoom", defaultTransform)
        .on("wheel.zoom", wheeled)
        .on("mousedown.zoom", mousedowned)
        .on("dblclick.zoom", dblclicked)
      .filter(touchable)
        .on("touchstart.zoom", touchstarted)
        .on("touchmove.zoom", touchmoved)
        .on("touchend.zoom touchcancel.zoom", touchended)
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function(collection, transform, point, event) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);
    if (collection !== selection) {
      schedule(collection, transform, point, event);
    } else {
      selection.interrupt().each(function() {
        gesture(this, arguments)
          .event(event)
          .start()
          .zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform)
          .end();
      });
    }
  };

  zoom.scaleBy = function(selection, k, p, event) {
    zoom.scaleTo(selection, function() {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p, event);
  };

  zoom.scaleTo = function(selection, k, p, event) {
    zoom.transform(selection, function() {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p, event);
  };

  zoom.translateBy = function(selection, x, y, event) {
    zoom.transform(selection, function() {
      return constrain(this.__zoom.translate(
        typeof x === "function" ? x.apply(this, arguments) : x,
        typeof y === "function" ? y.apply(this, arguments) : y
      ), extent.apply(this, arguments), translateExtent);
    }, null, event);
  };

  zoom.translateTo = function(selection, x, y, p, event) {
    zoom.transform(selection, function() {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(
        typeof x === "function" ? -x.apply(this, arguments) : -x,
        typeof y === "function" ? -y.apply(this, arguments) : -y
      ), e, translateExtent);
    }, p, event);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point, event) {
    transition
        .on("start.zoom", function() { gesture(this, arguments).event(event).start(); })
        .on("interrupt.zoom end.zoom", function() { gesture(this, arguments).event(event).end(); })
        .tween("zoom", function() {
          var that = this,
              args = arguments,
              g = gesture(that, args).event(event),
              e = extent.apply(that, args),
              p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
              a = that.__zoom,
              b = typeof transform === "function" ? transform.apply(that, args) : transform,
              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
          return function(t) {
            if (t === 1) t = b; // Avoid rounding error on end.
            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }
            g.zoom(null, t);
          };
        });
  }

  function gesture(that, args, clean) {
    return (!clean && that.__zooming) || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.sourceEvent = null;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    event: function(event) {
      if (event) this.sourceEvent = event;
      return this;
    },
    start: function() {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }
      return this;
    },
    zoom: function(key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function() {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }
      return this;
    },
    emit: function(type) {
      var d = select(this.that).datum();
      listeners.call(
        type,
        this.that,
        new ZoomEvent(type, {
          sourceEvent: this.sourceEvent,
          target: zoom,
          type,
          transform: this.that.__zoom,
          dispatch: listeners
        }),
        d
      );
    }
  };

  function wheeled(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, args).event(event),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = pointer(event);

    // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.
    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }
      clearTimeout(g.wheel);
    }

    // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return;

    // Otherwise, capture the mouse point and location at the start.
    else {
      g.mouse = [p, t.invert(p)];
      interrupt(this);
      g.start();
    }

    noevent(event);
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned(event, ...args) {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, args, true).event(event),
        v = select(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = pointer(event, currentTarget),
        currentTarget = event.currentTarget,
        x0 = event.clientX,
        y0 = event.clientY;

    dragDisable(event.view);
    nopropagation(event);
    g.mouse = [p, this.__zoom.invert(p)];
    interrupt(this);
    g.start();

    function mousemoved(event) {
      noevent(event);
      if (!g.moved) {
        var dx = event.clientX - x0, dy = event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }
      g.event(event)
       .zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped(event) {
      v.on("mousemove.zoom mouseup.zoom", null);
      yesdrag(event.view, g.moved);
      noevent(event);
      g.event(event).end();
    }
  }

  function dblclicked(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),
        p1 = t0.invert(p0),
        k1 = t0.k * (event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);

    noevent(event);
    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);
    else select(this).call(zoom.transform, t1, p0, event);
  }

  function touchstarted(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var touches = event.touches,
        n = touches.length,
        g = gesture(this, args, event.changedTouches.length === n).event(event),
        started, i, t, p;

    nopropagation(event);
    for (i = 0; i < n; ++i) {
      t = touches[i], p = pointer(t, this);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;
      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);
      interrupt(this);
      g.start();
    }
  }

  function touchmoved(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length, i, t, p, l;

    noevent(event);
    for (i = 0; i < n; ++i) {
      t = touches[i], p = pointer(t, this);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;
      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }
    t = g.that.__zoom;
    if (g.touch1) {
      var p0 = g.touch0[0], l0 = g.touch0[1],
          p1 = g.touch1[0], l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    }
    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];
    else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length, i, t;

    nopropagation(event);
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function() { touchending = null; }, touchDelay);
    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;
      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }
    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);
    else {
      g.end();
      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.
      if (g.taps === 2) {
        t = pointer(t, this);
        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
          var p = select(this).on("dblclick.zoom");
          if (p) p.apply(this, arguments);
        }
      }
    }
  }

  zoom.wheelDelta = function(_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : constant(+_), zoom) : wheelDelta;
  };

  zoom.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : constant(!!_), zoom) : filter;
  };

  zoom.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : constant(!!_), zoom) : touchable;
  };

  zoom.extent = function(_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function(_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function(_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function(_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function(_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function(_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function(_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  zoom.tapDistance = function(_) {
    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;
  };

  return zoom;
}

/**
 * LibCav
 *
 */

const libCava = function () {

        //-----------------------------------

        function lcv() { }

        //=========================== sort
        lcv.sort = function () {

            let _vData = null,             // Vector with data to be sorted (dataNodes [] or dataEdges [])
                _vOrder = null,            // Ordering Vector
                _vLabelConfigSort = null,  // Configuration vector of sort. Each element contains
                //  { ascending: true or false, desempate:[ "indexAttr":x, value: true or false, ascending: true or false]
                _vValueConfigSort = null,
                _indexAttrSort = 0,          // Index of the attribute to be classified index + 1000 indicates VALUE Ex: 1001
                _labelAttrSort = 0,          // Index adjusted for label (equal to _indexAttrSort)
                _valueAttrSort = 0,          // Index set to value (_indexAttrSort-1000)

                // --- Function that performs labeling for LABEL
                _fLabelSort = function (a, b) {
                    if (_vLabelConfigSort[_labelAttrSort].ascending)
                        return ascending(_vData[a].labels[_labelAttrSort], _vData[b].labels[_labelAttrSort]);
                    else
                        return descending(_vData[a].labels[_labelAttrSort], _vData[b].labels[_labelAttrSort]);
                },

                // --- Function that performs rating for VALUE
                _fValueSort = function (a, b) {
                    if (_vValueConfigSort[_valueAttrSort].ascending)
                        return ascending(_vData[a].values[_valueAttrSort], _vData[b].values[_valueAttrSort]);
                    else
                        console.log();
                        return descending(_vData[a].values[_valueAttrSort], _vData[b].values[_valueAttrSort]);
                },

                // --- Function that performs rating for VALUE with tiebreaker
                _fValueSortDesempate = function (a, b) {
                    var i, attrSortConfig, result;

                    attrSortConfig = _vValueConfigSort[_valueAttrSort];

                    for (i = 0; i < attrSortConfig.vDesempate.length; i++) {
                        if (attrSortConfig.vDesempate[i].numeric) {
                            if (attrSortConfig.vDesempate[i].ascending) {
                                result = ascending(_vData[a].values[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].values[attrSortConfig.vDesempate[i].indexAttr]);
                            } else {
                                result = descending(_vData[a].values[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].values[attrSortConfig.vDesempate[i].indexAttr]);
                            }
                        } else {
                            if (attrSortConfig.vDesempate[i].ascending) {
                                result = ascending(_vData[a].labels[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].labels[attrSortConfig.vDesempate[i].indexAttr]);
                            } else {
                                result = descending(_vData[a].labels[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].labels[attrSortConfig.vDesempate[i].indexAttr]);
                            }

                        }

                        if (result !== 0)
                            return result;
                    }

                    return result;
                },

                // --- Function that performs the classification for LABEL with tie breaker

                _fLabelSortDesempate = function (a, b) {
                    let i, attrSortConfig, result;

                    attrSortConfig = _vLabelConfigSort[_labelAttrSort];

                    for (i = 0; i < attrSortConfig.vDesempate.length; i++) {
                        if (attrSortConfig.vDesempate[i].numeric) {
                            if (attrSortConfig.vDesempate[i].ascending) {
                                result = ascending(_vData[a].values[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].values[attrSortConfig.vDesempate[i].indexAttr]);
                            } else {
                                result = descending(_vData[a].values[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].values[attrSortConfig.vDesempate[i].indexAttr]);
                            }
                        } else {
                            if (attrSortConfig.vDesempate[i].ascending) {
                                result = ascending(_vData[a].labels[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].labels[attrSortConfig.vDesempate[i].indexAttr]);
                            } else {
                                result = descending(_vData[a].labels[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].labels[attrSortConfig.vDesempate[i].indexAttr]);
                            }

                        }

                        if (result !== 0)
                            return result;
                    }

                    return result;
                };



            //--------------------------------- Public functions
            let obj = {};

            // Initializes the classification functions for each attribute
            obj.inic = function (qtLabel, qtValue) {
                let i;
                _vLabelConfigSort = [];
                for (i = 0; i < qtLabel; i++) {
                    _vLabelConfigSort.push({ fSortOrder: _fLabelSort, vDesempate: null, ascending: true, desempate: false });
                }

                _vValueConfigSort = [];
                for (i = 0; i < qtValue; i++) {
                    _vValueConfigSort.push({ fSortOrder: _fValueSort, vDesempate: null, ascending: false, desempate: false });
                }
                return obj;
            };

            //---------------------
            obj.data = function (_) {
                _vData = _;
                _vOrder = range(_vData.length);
                return obj;
            };

            //---------------------
            obj.getVetOrder = function () {
                return _vOrder;
            };

            //---------------------
            obj.config = function (indexAttr, numeric, ascending, vDesempate) {
                if (vDesempate === undefined) {
                    if (numeric) { // For numerical attributes
                        _vValueConfigSort[indexAttr] = { fSortOrder: _fValueSort, vDesempate: null, ascending: ascending, desempate: false };
                    } else {
                        _vLabelConfigSort[indexAttr] = { fSortOrder: _fLabelSort, vDesempate: null, ascending: ascending, desempate: false };
                    }
                } else {
                    vDesempate.unshift({ indexAttr: indexAttr, numeric: numeric, ascending: ascending });
                    if (numeric) { // For numerical attributes
                        _vValueConfigSort[indexAttr] = { fSortOrder: _fValueSortDesempate, vDesempate: vDesempate, ascending: ascending, desempate: false };
                    } else {
                        _vLabelConfigSort[indexAttr] = { fSortOrder: _fLabelSortDesempate, vDesempate: vDesempate, ascending: ascending, desempate: false };
                    }
                }
                return obj;
            };

            //---------------------
            obj.exec = function (indexAttrSort) {
                _indexAttrSort = indexAttrSort;

                if (_indexAttrSort < 1000) {
                    _labelAttrSort = _indexAttrSort;
                    _vOrder.sort(function (a, b) {
                        return _vLabelConfigSort[_labelAttrSort].fSortOrder.call(obj, a, b);
                    });
                } else {
                    _valueAttrSort = _indexAttrSort - 1000;
                    _vOrder.sort(function (a, b) {
                        return _vValueConfigSort[_valueAttrSort].fSortOrder(a, b);
                    });
                }
            };

            return obj;
        };


        //=========================== sortIris
        lcv.sortIris = function () {

            let _vData = null,             // Vector with data to be sorted (dataNodes [] or dataEdges [])
                _vOrder = null,            // Ordering Vector
                _vLabelConfigSort = null,  // Configuration vector of sort. Each element contains
                //  { ascending: true or false, desempate:[ "indexAttr":x, value: true or false, ascending: true or false]
                _vValueConfigSort = null,
                _indexAttrSort = 0,          // Index of the attribute to be classified index + 1000 indicates VALUE Ex: 1001
                _labelAttrSort = 0,          // Index adjusted for label (equal to _indexAttrSort)
                _valueAttrSort = 0,          // Index set to value (_indexAttrSort-1000)

                // --- Function that performs labeling for LABEL
                _fLabelSort = function (a, b) {
                    if (_vLabelConfigSort[_labelAttrSort].ascending)
                        return ascending(_vData[a].labels[_labelAttrSort], _vData[b].labels[_labelAttrSort]);
                    else
                        return descending(_vData[a].labels[_labelAttrSort], _vData[b].labels[_labelAttrSort]);
                },

                // --- Function that performs rating for VALUE
                _fValueSort = function (a, b) {
                    if (_vValueConfigSort[_valueAttrSort].ascending)
                        return ascending(_vData[a].edge.values[_valueAttrSort], _vData[b].edge.values[_valueAttrSort]);
                    else
                        return descending(_vData[a].edge.values[_valueAttrSort], _vData[b].edge.values[_valueAttrSort]);
                },

                // --- Function that performs rating for VALUE with tiebreaker
                _fValueSortDesempate = function (a, b) {
                    let i, attrSortConfig, result;

                    attrSortConfig = _vValueConfigSort[_valueAttrSort];

                    for (i = 0; i < attrSortConfig.vDesempate.length; i++) {
                        if (attrSortConfig.vDesempate[i].numeric) {
                            if (attrSortConfig.vDesempate[i].ascending) {
                                result = ascending(_vData[a].edge.values[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].edge.values[attrSortConfig.vDesempate[i].indexAttr]);
                            } else {
                                result = descending(_vData[a].edge.values[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].edge.values[attrSortConfig.vDesempate[i].indexAttr]);
                            }
                        } else {
                            if (attrSortConfig.vDesempate[i].ascending) {
                                result = ascending(_vData[a].labels[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].labels[attrSortConfig.vDesempate[i].indexAttr]);
                            } else {
                                result = descending(_vData[a].labels[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].labels[attrSortConfig.vDesempate[i].indexAttr]);
                            }

                        }

                        if (result !== 0)
                            return result;
                    }

                    return result;
                },

                // --- Function that performs the classification for LABEL with tie breaker

                _fLabelSortDesempate = function (a, b) {
                    let i, attrSortConfig, result;

                    attrSortConfig = _vLabelConfigSort[_labelAttrSort];

                    for (i = 0; i < attrSortConfig.vDesempate.length; i++) {
                        if (attrSortConfig.vDesempate[i].numeric) {
                            if (attrSortConfig.vDesempate[i].ascending) {
                                result = ascending(_vData[a].edge.values[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].edge.values[attrSortConfig.vDesempate[i].indexAttr]);
                            } else {
                                result = descending(_vData[a].edge.values[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].edge.values[attrSortConfig.vDesempate[i].indexAttr]);
                            }
                        } else {
                            if (attrSortConfig.vDesempate[i].ascending) {
                                result = ascending(_vData[a].labels[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].labels[attrSortConfig.vDesempate[i].indexAttr]);
                            } else {
                                result = descending(_vData[a].labels[attrSortConfig.vDesempate[i].indexAttr],
                                    _vData[b].labels[attrSortConfig.vDesempate[i].indexAttr]);
                            }

                        }

                        if (result !== 0)
                            return result;
                    }

                    return result;
                };



            //--------------------------------- Public functions
            let obj = {};

            // Initializes the classification functions for each attribute
            obj.inic = function (qtLabel, qtValue) {
                var i;
                _vLabelConfigSort = [];
                for (i = 0; i < qtLabel; i++) {
                    _vLabelConfigSort.push({ fSortOrder: _fLabelSort, vDesempate: null, ascending: true, desempate: false });
                }

                _vValueConfigSort = [];
                for (i = 0; i < qtValue; i++) {
                    _vValueConfigSort.push({ fSortOrder: _fValueSort, vDesempate: null, ascending: false, desempate: false });
                }
                return obj;
            };

            //---------------------
            obj.data = function (_) {
                _vData = _;
                _vOrder = range(_vData.length);
                return obj;
            };

            //---------------------
            obj.getVetOrder = function () {
                return _vOrder;
            };

            //---------------------
            obj.config = function (indexAttr, numeric, ascending, vDesempate) {
                if (vDesempate === undefined) {
                    if (numeric) { // For numerical attributes
                        _vValueConfigSort[indexAttr] = { fSortOrder: _fValueSort, vDesempate: null, ascending: ascending, desempate: false };
                    } else {
                        _vLabelConfigSort[indexAttr] = { fSortOrder: _fLabelSort, vDesempate: null, ascending: ascending, desempate: false };
                    }
                } else {
                    vDesempate.unshift({ indexAttr: indexAttr, numeric: numeric, ascending: ascending });
                    if (numeric) { // For numerical attributes
                        _vValueConfigSort[indexAttr] = { fSortOrder: _fValueSortDesempate, vDesempate: vDesempate, ascending: ascending, desempate: false };
                    } else {
                        _vLabelConfigSort[indexAttr] = { fSortOrder: _fLabelSortDesempate, vDesempate: vDesempate, ascending: ascending, desempate: false };
                    }
                }
                return obj;
            };

            //---------------------
            obj.exec = function (indexAttrSort) {
                _indexAttrSort = indexAttrSort;

                if (_indexAttrSort < 1000) {
                    _labelAttrSort = _indexAttrSort;
                    _vOrder.sort(function (a, b) {
                        return _vLabelConfigSort[_labelAttrSort].fSortOrder.call(obj, a, b);
                    });
                } else {
                    _valueAttrSort = _indexAttrSort - 1000;
                    _vOrder.sort(function (a, b) {
                        return _vValueConfigSort[_valueAttrSort].fSortOrder(a, b);
                    });
                }
            };

            return obj;
        };








        //=========================== Returns TOOLTIPS
        lcv.tooltips = function () {
            let _colorTitle = "#238f23";
            let obj = {};

            //---------- Private functions

            function _addIconeEdge(svgTooltip) {
                svgTooltip.append("circle")
                    .attr("cx", 21)
                    .attr("cy", 9)
                    .attr("r", 3)
                    .style("fill", "blue");

                svgTooltip.append("line")
                    .attr("x1", 21)
                    .attr("y1", 9)
                    .attr("x2", 9)
                    .attr("y2", 26)
                    .style("stroke", "blue");

                svgTooltip.append("circle")
                    .attr("cx", 9)
                    .attr("cy", 26)
                    .attr("r", 3)
                    .style("fill", "blue");
            }

            //---------- Public functions

            obj.normalNode = function (data, indexAttrTitle, vIndexAttr, stAdjacent) {
                let _data = data,
                    _indexAttrTitle = indexAttrTitle,    // Index of the attribute that will be printed in the tooltip title
                    _vIndexAttr = vIndexAttr,          // Vector with the index of the attributes that will be printed
                    _stAdjacent = stAdjacent,          // String representing the meaning of adjacent nodes
                    _divTooltip = null,
                    _svgTooltip = null;
                let objNormal = {};

                objNormal.create = function (divTooltip, node, event) {
                    let y = 54,
                        height = _vIndexAttr.length * 14 + 49,
                        width;

                    width = 190;

                    if (width < 90)
                        width = 90;
                    _divTooltip = divTooltip;
                    _svgTooltip = _divTooltip.append("svg").attr("width", width).attr("height", height);
                    _svgTooltip.append("text")      // Title
                        .attr("x", 5)
                        .attr("y", 12)
                        .text(node.labels[_indexAttrTitle]);

                    _svgTooltip.append("text")    // n co-authors
                        .attr("x", 5)
                        .attr("y", 26)
                        .text(node.grau + " " + _stAdjacent);

                    _vIndexAttr.forEach(function (d, i) {
                        if (d >= 1000) {
                            _svgTooltip.append("text")
                                .attr("x", 5)
                                .attr("y", i * 14 + y)
                                .text(_data.nodes.valueTitle[d - 1000] + ": " + node.values[d - 1000]);
                        } else {
                            _svgTooltip.append("text")
                                .attr("x", 5)
                                .attr("y", i * 14 + y)
                                .text(_data.nodes.labelTitle[d] + ": " + node.labels[d]);
                        }


                    });
                    _divTooltip.style("top", (event.layerY + 20) + "px")
                        .style("left", event.layerX + "px")
                        .style("display", "block");
                };

                objNormal.remove = function () {
                    _divTooltip.style("display", "none");
                    _svgTooltip.remove();
                    _svgTooltip = null;
                };

                return objNormal;
            };
            //------------------ Tooltip Cluster Louvain
            obj.clusterLouvainNode = function () {
                let _divTooltip = null,
                    _svgTooltip = null;

                let objCluster = {};

                objCluster.create = function (divTooltip, node) {
                    _divTooltip = divTooltip;

                    _svgTooltip = _divTooltip.append("svg").attr("width", 65).attr("height", 53);
                    _svgTooltip.append("text")    // n co-authors
                        .attr("x", 5)
                        .attr("y", 12)
                        .style("fill", _colorTitle)
                        .text("Cluster " + node.key);

                    _svgTooltip.append("text")    // n co-authors
                        .attr("x", 5)
                        .attr("y", 35)
                        .text(node.qtNodes + " nodes");

                    _svgTooltip.append("text")    // n co-authors
                        .attr("x", 5)
                        .attr("y", 49)
                        .text(node.qtEdges + " edges");

                    _divTooltip.style("top", (undefined + 20) + "px")
                        .style("left", undefined + "px")
                        .style("display", "block");
                };

                objCluster.remove = function () {
                    _divTooltip.style("display", "none");
                    _svgTooltip.remove();
                    _svgTooltip = null;
                };

                return objCluster;
            };

            //------------------ Tooltip Cluster Attribute
            obj.clusterAttributeNode = function (data, indexAttr) {
                let _data = data,
                    _indexAttr = indexAttr,
                    _divTooltip = null,
                    _svgTooltip = null;

                let objCluster = {};

                objCluster.create = function (divTooltip, node) {
                    let width, stTemp;

                    if (_indexAttr >= 1000)
                        stTemp = _data.nodes.valueTitle[_indexAttr - 1000] + "=" + node.key;
                    else
                        stTemp = _data.nodes.labelTitle[_indexAttr] + "=" + node.key;

                    width = Math.round(6.5 * stTemp.length);
                    if (width < 70)
                        width = 70;

                    _divTooltip = divTooltip;

                    _svgTooltip = _divTooltip.append("svg").attr("width", width).attr("height", 68);
                    _svgTooltip.append("text")
                        .attr("x", 5)
                        .attr("y", 12)
                        .style("fill", _colorTitle)
                        .text("Nodes with");

                    _svgTooltip.append("text")
                        .attr("x", 5)
                        .attr("y", 26)
                        .style("fill", _colorTitle)
                        .text(stTemp);

                    _svgTooltip.append("text")
                        .attr("x", 5)
                        .attr("y", 49)
                        .text(node.qtNodes + " nodes");

                    _svgTooltip.append("text")
                        .attr("x", 5)
                        .attr("y", 63)
                        .text(node.qtEdges + " edges");

                    _divTooltip.style("top", (undefined + 20) + "px")
                        .style("left", undefined + "px")
                        .style("display", "block");
                };

                objCluster.remove = function () {
                    _divTooltip.style("display", "none");
                    _svgTooltip.remove();
                    _svgTooltip = null;
                };

                return objCluster;
            };

            //------------------ Tooltip Normal Edge
            obj.normalEdge = function (data, indexAttrTitle, vIndexAttr) {
                let _data = data,
                    _indexAttrTitle = indexAttrTitle,
                    _vIndexAttr = vIndexAttr,
                    _divTooltip = null,
                    _svgTooltip = null;

                let objNormalEdge = {};

                objNormalEdge.create = function (divTooltip, edge) {
                    let y = 54,
                        attNodeSrc, attNodeTgt,
                        height = _vIndexAttr.length * 14 + 49,
                        width, widthSrc, widthTgt;

                    if (_indexAttrTitle >= 1000) {
                        attNodeSrc = edge.source.values[_indexAttrTitle - 1000];
                        attNodeTgt = edge.target.values[_indexAttrTitle - 1000];
                    } else {
                        attNodeSrc = edge.source.labels[_indexAttrTitle];
                        attNodeTgt = edge.target.labels[_indexAttrTitle];
                    }

                    widthSrc = 34 + attNodeSrc.length * 7;
                    widthTgt = 22 + attNodeTgt.length * 7;

                    if (widthSrc > widthTgt)
                        width = widthSrc;
                    else
                        width = widthTgt;

                    if (width < 90)
                        width = 90;

                    _divTooltip = divTooltip;

                    _svgTooltip = _divTooltip.append("svg").attr("width", width).attr("height", height);

                    //----- Edge icon
                    _addIconeEdge(_svgTooltip);

                    // --------------

                    _svgTooltip.append("text")
                        .attr("x", 34)
                        .attr("y", 12)
                        .text(attNodeSrc);

                    _svgTooltip.append("text")
                        .attr("x", 22)
                        .attr("y", 30)
                        .text(attNodeTgt);

                    _vIndexAttr.forEach(function (d, i) {
                        if (d >= 1000) {
                            _svgTooltip.append("text")
                                .attr("x", 8)
                                .attr("y", i * 14 + y)
                                .text(_data.edges.valueTitle[d - 1000] + ": " + edge.values[d - 1000]);
                        } else {
                            _svgTooltip.append("text")
                                .attr("x", 8)
                                .attr("y", i * 14 + y)
                                .text(_data.edges.labelTitle[d] + ": " + edge.labels[d]);
                        }
                    });

                    _divTooltip.style("top", (undefined + 20) + "px")
                        .style("left", undefined + "px")
                        .style("display", "block");
                };

                objNormalEdge.remove = function () {
                    _divTooltip.style("display", "none");
                    _svgTooltip.remove();
                    _svgTooltip = null;
                };
                return objNormalEdge;
            };

            //------------------ Tooltip Cluster Louvain Edge
            obj.clusterLouvainEdge = function () {
                let _divTooltip = null,
                    _svgTooltip = null;

                let objLouvainEdge = {};

                objLouvainEdge.create = function (divTooltip, edge) {
                    _divTooltip = divTooltip;

                    _svgTooltip = _divTooltip.append("svg").attr("width", 88).attr("height", 60);

                    //----- Edge Icon
                    _addIconeEdge(_svgTooltip);

                    // --------------

                    _svgTooltip.append("text")
                        .attr("x", 34)
                        .attr("y", 12)
                        .text("Cluster " + edge.source.key);

                    _svgTooltip.append("text")
                        .attr("x", 22)
                        .attr("y", 30)
                        .text("Cluster " + edge.target.key);

                    _svgTooltip.append("text")
                        .attr("x", 8)
                        .attr("y", 54)
                        .text(edge.qt + " edges ");

                    _divTooltip.style("top", (undefined + 20) + "px")
                        .style("left", undefined + "px")
                        .style("display", "block");
                };

                objLouvainEdge.remove = function () {
                    _divTooltip.style("display", "none");
                    _svgTooltip.remove();
                    _svgTooltip = null;
                };
                return objLouvainEdge;
            };

            //------------------ Tooltip Cluster Attribute Edge
            obj.clusterAttributeEdge = function (data, indexAttr) {
                let _data = data,
                    _indexAttr = indexAttr,
                    _divTooltip = null,
                    _svgTooltip = null;

                let objAttributeEdge = {};

                objAttributeEdge.create = function (divTooltip, edge) {
                    let stTempSrc, stTempTgt, widthSrc, widthTgt, width;

                    _divTooltip = divTooltip;

                    if (_indexAttr >= 1000) {
                        stTempSrc = _data.nodes.valueTitle[_indexAttr - 1000] + "=" + edge.source.key;
                        stTempTgt = _data.nodes.valueTitle[_indexAttr - 1000] + "=" + edge.target.key;
                    } else {
                        stTempSrc = _data.nodes.labelTitle[_indexAttr] + "=" + edge.source.key;
                        stTempTgt = _data.nodes.labelTitle[_indexAttr] + "=" + edge.target.key;
                    }

                    widthSrc = 34 + Math.round(6.5 * stTempSrc.length);
                    widthTgt = 22 + Math.round(6.5 * stTempTgt.length);

                    if (widthSrc > widthTgt)
                        width = widthSrc;
                    else
                        width = widthTgt;

                    if (width < 90)
                        width = 90;

                    _svgTooltip = _divTooltip.append("svg").attr("width", width).attr("height", 60);

                    //----- Edge Icon
                    _addIconeEdge(_svgTooltip);

                    // --------------

                    _svgTooltip.append("text")
                        .attr("x", 34)
                        .attr("y", 12)
                        .text(stTempSrc);

                    _svgTooltip.append("text")
                        .attr("x", 22)
                        .attr("y", 30)
                        .text(stTempTgt);

                    _svgTooltip.append("text")
                        .attr("x", 8)
                        .attr("y", 54)
                        .text(edge.qt + " edges ");

                    _divTooltip.style("top", (undefined + 20) + "px")
                        .style("left", undefined + "px")
                        .style("display", "block");
                };

                objAttributeEdge.remove = function () {
                    _divTooltip.style("display", "none");
                    _svgTooltip.remove();
                    _svgTooltip = null;
                };
                return objAttributeEdge;
            };

            //------------------ Tooltip MatrixGliph Cell        
            obj.matrixCell = function (data, glyph, indexAttrTitle) {
                let _data = data,
                    _glyph = glyph,
                    _indexAttrTitle = indexAttrTitle,
                    _divTooltip = null,
                    _svgTooltip = null;

                let objMatrixGlyphCell = {};

                objMatrixGlyphCell.create = function (divTooltip, cell, event) {
                    let height = 190,
                        width,
                        attNodeSrc, attNodeTgt, widthSrc, widthTgt,
                        grpGlyphTooltip;

                    if (_indexAttrTitle >= 1000) {
                        attNodeSrc = _data.nodes.dataNodes[cell.x].values[_indexAttrTitle - 1000];
                        attNodeTgt = _data.nodes.dataNodes[cell.y].values[_indexAttrTitle - 1000];
                    } else {
                        attNodeSrc = _data.nodes.dataNodes[cell.x].labels[_indexAttrTitle];
                        attNodeTgt = _data.nodes.dataNodes[cell.y].labels[_indexAttrTitle];
                    }

                    widthSrc = 270;
                    widthTgt = 270;


                    if (widthSrc > widthTgt)
                        width = widthSrc;
                    else
                        width = widthTgt;

                    if (width < 130)
                        width = 130;

                    _divTooltip = divTooltip;

                    _svgTooltip = _divTooltip.append("svg").attr("width", width).attr("height", height);

                    //----- Edge Icon
                    _addIconeEdge(_svgTooltip);

                    // --------------

                    _svgTooltip.append("text")
                        .attr("x", 34)
                        .attr("y", 12)
                        .text(attNodeSrc);

                    _svgTooltip.append("text")
                        .attr("x", 22)
                        .attr("y", 30)
                        .text(attNodeTgt);

                    grpGlyphTooltip = _svgTooltip.append("g")
                        .attr("transform", "translate(0,60)");

                    _glyph.calcScaleTooltip(width, 100); // Tooltip height and diameter
                    _glyph.drawTooltip(grpGlyphTooltip, cell);

                    _divTooltip.style("top", (event.layerY + 20) + "px")
                        .style("left", event.layerX + "px")
                        .style("display", "block");

                };

                objMatrixGlyphCell.remove = function () {
                    _divTooltip.style("display", "none");
                    _svgTooltip.remove();
                    _svgTooltip = null;
                };

                return objMatrixGlyphCell;
            };

            //-----------------        
            return obj;
        };

        //=========================== Returns subgraphs
        lcv.subGraph = function () {

            //--------------
            // graphEdges: Original edges of the graph

            function _addEdges(vNodes, vEdges, graphEdges) {
                let i, j, qtNodes, qtEdges;
                qtNodes = vNodes.length;

                //------- Includes edges
                vNodes.forEach(function (node, k) {
                    graphEdges.forEach(function (edge) {
                        if (edge.src === node.idOrig) {
                            for (i = k + 1; i < qtNodes; i++) {
                                if (edge.tgt === vNodes[i].idOrig) {
                                    vEdges.push({
                                        src: edge.src,
                                        tgt: edge.tgt,
                                        labels: edge.labels,
                                        values: edge.values
                                    });
                                    break;
                                }
                            }
                        } else {
                            if (edge.tgt === node.idOrig) {
                                for (i = k + 1; i < qtNodes; i++) {
                                    if (edge.src === vNodes[i].idOrig) {
                                        vEdges.push({
                                            src: edge.src,
                                            tgt: edge.tgt,
                                            labels: edge.labels,
                                            values: edge.values
                                        });
                                        break;
                                    }
                                }
                            }
                        }
                    });
                });
                //------- Adjust the ids to conform to the indices
                qtNodes = vNodes.length;
                qtEdges = vEdges.length;

                for (i = 0; i < qtEdges; i++) {
                    for (j = 0; j < qtNodes; j++) {
                        if (vNodes[j].idOrig === vEdges[i].src) {
                            vEdges[i].src = j;
                            break;
                        }
                    }
                    for (j = 0; j < qtNodes; j++) {
                        if (vNodes[j].idOrig === vEdges[i].tgt) {
                            vEdges[i].tgt = j;
                            break;
                        }
                    }
                }

                vNodes.forEach(function (node, k) {
                    node.id = k;
                });
            }
            //--------------- Adds the edges in the array of edges

            function _addEdgesMatrix(vNodes, vMatrix, graphEdges) {
                let i, j, qtNodes, qtEdges,
                    vEdges = [];   // Auxiliary variable to temporarily store the set of edges

                qtNodes = vNodes.length;

                //------- Includes edges
                vNodes.forEach(function (node, k) {
                    graphEdges.forEach(function (edge) {
                        if (edge.src === node.idOrig) {
                            for (i = k + 1; i < qtNodes; i++) {
                                if (edge.tgt === vNodes[i].idOrig) {
                                    vEdges.push({
                                        src: edge.src,
                                        tgt: edge.tgt,
                                        labels: edge.labels,
                                        values: edge.values
                                    });
                                    break;
                                }
                            }
                        } else {
                            if (edge.tgt === node.idOrig) {
                                for (i = k + 1; i < qtNodes; i++) {
                                    if (edge.src === vNodes[i].idOrig) {
                                        vEdges.push({
                                            src: edge.src,
                                            tgt: edge.tgt,
                                            labels: edge.labels,
                                            values: edge.values
                                        });
                                        break;
                                    }
                                }
                            }
                        }
                    });
                });
                //------- Adjust the ids to conform to the indices
                qtNodes = vNodes.length;
                qtEdges = vEdges.length;

                for (i = 0; i < qtEdges; i++) {
                    for (j = 0; j < qtNodes; j++) {
                        if (vNodes[j].idOrig === vEdges[i].src) {
                            vEdges[i].src = j;
                            break;
                        }
                    }
                    for (j = 0; j < qtNodes; j++) {
                        if (vNodes[j].idOrig === vEdges[i].tgt) {
                            vEdges[i].tgt = j;
                            break;
                        }
                    }
                }

                vNodes.forEach(function (node, k) {
                    node.id = k;
                });

                vEdges.forEach(
                    function (d) {
                        vMatrix[d.src].push({ "x": d.tgt, "y": d.src, "exist": true, "labels": d.labels, "values": d.values });
                        vMatrix[d.tgt].push({ "x": d.src, "y": d.tgt, "exist": true, "labels": d.labels, "values": d.values });
                    }
                );
            }

            //--------------------------------- Public functions
            let obj = {};

            /*---------------------------------
             * Returns the graph in the ClusterVis format of the graph contained in the node of type Cluster
             */
            obj.clusterClusterVis = function (clusterNode, graphData) {
                let result = {
                    nodes: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        dataNodes: []
                    },
                    edges: {
                        labelTitle: graphData.edges.labelTitle,
                        valueTitle: graphData.edges.valueTitle,
                        dataEdges: []
                    }
                };

                // Includes all cluster node nodes
                clusterNode.cluster.forEach(function (node) {
                    result.nodes.dataNodes.push({
                        id: node.id,
                        idOrig: node.idOrig,
                        labels: node.labels,
                        values: node.values,
                        images: node.images,
                        cluster: []
                    });
                });

                _addEdges(result.nodes.dataNodes, result.edges.dataEdges, graphData.edges.dataEdges);
                return result;
            };

            /*---------------------------------
             * Node and its adjacent ClusterVis
             */
            obj.normalClusterVis = function (normalNode, graphData) {
                let result = {
                    nodes: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        dataNodes: []
                    },
                    edges: {
                        labelTitle: graphData.edges.labelTitle,
                        valueTitle: graphData.edges.valueTitle,
                        dataEdges: []
                    }
                };
                console.log(normalNode);
                // Include the passed node as argument
                result.nodes.dataNodes.push({
                    id: normalNode.id,
                    idOrig: normalNode.idOrig,
                    labels: normalNode.labels,
                    values: normalNode.values,
                    images: normalNode.images,
                    cluster: []
                });
                console.log({
                    id: normalNode.id,
                    idOrig: normalNode.idOrig,
                    labels: normalNode.labels,
                    values: normalNode.values,
                    images: normalNode.images,
                    cluster: []
                });

                graphData.edges.dataEdges.forEach(function (d) {
                    if (d.src === normalNode.idOrig)
                        result.nodes.dataNodes.push({
                            id: graphData.nodes.dataNodes[d.tgt].id,
                            idOrig: graphData.nodes.dataNodes[d.tgt].idOrig,
                            labels: graphData.nodes.dataNodes[d.tgt].labels,
                            values: graphData.nodes.dataNodes[d.tgt].values,
                            images: graphData.nodes.dataNodes[d.tgt].images,
                            cluster: []
                        });
                    else
                        if (d.tgt === normalNode.idOrig)
                            result.nodes.dataNodes.push({
                                id: graphData.nodes.dataNodes[d.src].id,
                                idOrig: graphData.nodes.dataNodes[d.src].idOrig,
                                labels: graphData.nodes.dataNodes[d.src].labels,
                                values: graphData.nodes.dataNodes[d.src].values,
                                images: graphData.nodes.dataNodes[d.src].images,
                                cluster: []
                            });

                });
                // Includes only edges that bind existing nodes
                _addEdges(result.nodes.dataNodes, result.edges.dataEdges, graphData.edges.dataEdges);

                return result;
            };

            /*---------------------------------
             * Node and its adjacent Iris
             */
            obj.normalIris = function (normalNode, graphData) {
                let result = {
                    root: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        data: {
                            id: normalNode.id,
                            idOrig: normalNode.idOrig,
                            labels: normalNode.labels,
                            values: normalNode.values,
                            images: normalNode.images
                        }
                    },
                    children: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        data: []           // Data of the child nodes and the edge that binds it to the root
                    },
                    edges: {
                        labelTitle: graphData.edges.labelTitle,
                        valueTitle: graphData.edges.valueTitle,
                        data: [] // Data of the other edges (that do not bind to the root (MISSING IMPLEMENTATION))
                    }
                };

                graphData.edges.dataEdges.forEach(
                    function (d) {
                        if (d.src === normalNode.idOrig) {
                            result.children.data.push({
                                id: graphData.nodes.dataNodes[d.tgt].id,
                                idOrig: graphData.nodes.dataNodes[d.tgt].idOrig,
                                labels: graphData.nodes.dataNodes[d.tgt].labels,
                                values: graphData.nodes.dataNodes[d.tgt].values,
                                images: graphData.nodes.dataNodes[d.tgt].images,
                                edge: {
                                    src: d.src,
                                    tgt: d.tgt,
                                    labels: d.labels,
                                    values: d.values
                                }
                            });
                        } else
                            if (d.tgt === normalNode.idOrig) {
                                result.children.data.push({
                                    id: graphData.nodes.dataNodes[d.src].id,
                                    idOrig: graphData.nodes.dataNodes[d.src].idOrig,
                                    labels: graphData.nodes.dataNodes[d.src].labels,
                                    values: graphData.nodes.dataNodes[d.src].values,
                                    images: graphData.nodes.dataNodes[d.src].images,
                                    edge: {
                                        src: d.tgt,
                                        tgt: d.src,
                                        labels: d.labels,
                                        values: d.values
                                    }
                                });
                            }
                    }
                );
                return result;
            };

            /*---------------------------------
             * Node and its adjacent Iris
             */
            obj.allPapersList = function (normalNode, graphData) {
                let result = {
                    root: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        data: {
                            id: normalNode.id,
                            idOrig: normalNode.idOrig,
                            labels: normalNode.labels,
                            values: normalNode.values,
                            images: normalNode.images,
                            documents: [],
                        }
                    },
                    children: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        cluster: false,
                        data: [],           // Data of the child nodes and the edge that binds it to the root
                        others: []
                    }
                };

                result.children.data.push({
                    id: normalNode.id,
                    idOrig: normalNode.idOrig,
                    labels: normalNode.labels,
                    values: normalNode.values,
                    images: normalNode.images,
                });

                graphData.edges.dataEdges.forEach(
                    function (d) {
                        if (d.src === normalNode.idOrig) {
                            result.children.data.push({
                                id: graphData.nodes.dataNodes[d.tgt].id,
                                idOrig: graphData.nodes.dataNodes[d.tgt].idOrig,
                                labels: graphData.nodes.dataNodes[d.tgt].labels,
                                values: graphData.nodes.dataNodes[d.tgt].values,
                                images: graphData.nodes.dataNodes[d.tgt].images,
                            });
                            d.documents.forEach(function (doc) {
                                if (isTheFirstOccurence(doc.link, result.root.data.documents)) {
                                    result.root.data.documents.push({
                                        type: doc.type,
                                        title: doc.title,
                                        link: doc.link,
                                        date: doc.date,
                                        authors: doc.authors,
                                        authorList: doc.authorList
                                    });
                                }
                            });
                        } else
                            if (d.tgt === normalNode.idOrig) {
                                result.children.data.push({
                                    id: graphData.nodes.dataNodes[d.src].id,
                                    idOrig: graphData.nodes.dataNodes[d.src].idOrig,
                                    labels: graphData.nodes.dataNodes[d.src].labels,
                                    values: graphData.nodes.dataNodes[d.src].values,
                                    images: graphData.nodes.dataNodes[d.src].images,
                                });
                                d.documents.forEach(function (doc) {
                                    for (let i = 0; i < doc.authors.length; i++) {
                                        if (doc.authors[i] === d.tgt) {
                                            if (isTheFirstOccurence(doc.link, result.root.data.documents)) {
                                                result.root.data.documents.push({
                                                    type: doc.type,
                                                    title: doc.title,
                                                    link: doc.link,
                                                    date: doc.date,
                                                    authors: doc.authors,
                                                    authorList: doc.authorList

                                                });
                                            }
                                        }
                                    }
                                });
                            }
                    }
                );
                console.log(result);

                return result;

                //---- Returns true if the document isn't already stored
                function isTheFirstOccurence(id, tab) {
                    if (tab.length === 0) return true;
                    else {
                        for (let i = 0; i < tab.length; i++) {
                            if (tab[i].link === id)
                                return false;
                        }
                        return true;
                    }
                }
            };

            obj.duoPapersList = function (firstNode, secondNode, graphData) {
                let result = {
                    root: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        data: {
                            id: firstNode.id,
                            idOrig: firstNode.idOrig,
                            labels: firstNode.labels,
                            values: firstNode.values,
                            images: firstNode.images,
                            documents: [],
                        }
                    },
                    children: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        cluster: false,
                        data: [],           // Data of the child nodes and the edge that binds it to the root
                        others: []
                    },
                };

                result.children.data.push({
                    id: firstNode.id,
                    idOrig: firstNode.idOrig,
                    labels: firstNode.labels,
                    values: firstNode.values,
                    images: firstNode.images,
                });

                result.children.data.push({
                    id: secondNode.id,
                    idOrig: secondNode.idOrig,
                    labels: secondNode.labels,
                    values: secondNode.values,
                    images: secondNode.images,
                });

                graphData.edges.dataEdges.forEach(
                    function (d) {
                        if ((d.src === firstNode.idOrig && d.tgt === secondNode.idOrig)
                            || (d.tgt === firstNode.idOrig && d.src === secondNode.idOrig)) {
                            d.documents.forEach(function (doc) {
                                for (let i = 0; i < doc.authors.length; i++) {
                                    for (let j = 0; j < doc.authors.length; j++) {
                                        if ((doc.authors[i] === firstNode.id && doc.authors[j] === secondNode.id)
                                            || (doc.authors[j] === firstNode.id && doc.authors[i] === secondNode.id)) {
                                            if (isTheFirstOccurence(doc.link, result.root.data.documents)) {
                                                result.root.data.documents.push({
                                                    type: doc.type,
                                                    title: doc.title,
                                                    link: doc.link,
                                                    date: doc.date,
                                                    authors: doc.authors,
                                                    authorList: doc.authorList

                                                });
                                            }
                                        }
                                    }
                                }
                            });
                        }
                    }
                );

                result.root.data.documents.forEach((doc) => {
                    for (let i = 0; i < doc.authors.length; i++) {
                        let author = i_findNormalNode(doc.authors[i]);
                        if (isTheFirstOccurenceAuthor(doc.authors[i], result.children.data)) {
                            result.children.data.push({
                                id: author.id,
                                idOrig: author.idOrig,
                                labels: author.labels,
                                values: author.values,
                                images: author.images,
                            });
                        }
                    }
                });

                return result;

                //---- Returns true if the document isn't already stored
                function isTheFirstOccurence(id, tab) {
                    if (tab.length === 0) return true;
                    else {
                        for (let i = 0; i < tab.length; i++) {
                            if (tab[i].link === id)
                                return false;
                        }
                        return true;
                    }
                }

                //---- Returns true if the document isn't already stored
                function isTheFirstOccurenceAuthor(id, tab) {
                    if (tab.length === 0) return true;
                    else {
                        for (let i = 0; i < tab.length; i++) {
                            if (tab[i].id === id)
                                return false;
                        }
                        return true;
                    }
                }

                //---- Search for the node that has the id passed as an argument
                function i_findNormalNode(id) {
                    let i;
                    for (i = 0; i < graphData.nodes.qtNodes; i++) {
                        if (graphData.nodes.dataNodes[i].id === id)
                            return graphData.nodes.dataNodes[i];
                    }
                    return null;
                }
            };

            obj.clusterPapersList = function (sourceNode, graphData) {
                let result = {
                    root: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        data: {
                            id: sourceNode.id,
                            idOrig: sourceNode.idOrig,
                            labels: sourceNode.labels,
                            values: sourceNode.values,
                            images: sourceNode.images,
                            documents: [],
                        }
                    },
                    children: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        cluster: true,
                        data: [],        // Data of the child nodes and the edge that binds it to the root
                        others: []
                    },
                };

                result.children.data.push({
                    id: sourceNode.id,
                    idOrig: sourceNode.idOrig,
                    labels: sourceNode.labels,
                    values: sourceNode.values,
                    images: sourceNode.images,
                });

                sourceNode.cluster.forEach((author) => {
                    if (author.id !== sourceNode.id) {
                        result.children.data.push({
                            id: author.id,
                            idOrig: author.idOrig,
                            labels: author.labels,
                            values: author.values,
                            images: author.images,
                        });
                    }
                });

                graphData.edges.dataEdges.forEach(
                    function (d) {
                        for (let k = 0; k < result.children.data.length; k++) {
                            if (d.src === result.children.data[k].idOrig || d.tgt === result.children.data[k].idOrig) {
                                d.documents.forEach(function (doc) {
                                    if (isFromSource(result.children.data[k].idOrig, doc.authors)) {
                                        for (let i = 0; i < doc.authors.length; i++) {
                                            if (oneIsFromCluster(doc.authors[i], result.children.data, result.children.data[k].idOrig)) {
                                                if (isTheFirstOccurence(doc.link, doc.authors, result.root.data.documents)) {
                                                    result.root.data.documents.push({
                                                        type: doc.type,
                                                        title: doc.title,
                                                        link: doc.link,
                                                        date: doc.date,
                                                        authors: doc.authors,
                                                        authorList: doc.authorList,
                                                    });
                                                }
                                            }
                                        }
                                    }
                                });
                            }
                        }
                    }
                );

                result.root.data.documents.forEach((doc) => {
                    for (let i = 0; i < doc.authors.length; i++) {
                        if (isTheFirstOccurenceAuthor(doc.authors[i], result.children.data)
                            && isTheFirstOccurenceAuthor(doc.authors[i], result.children.others)) {
                            let author = i_findNormalNode(doc.authors[i]);
                            result.children.others.push({
                                id: author.id,
                                idOrig: author.idOrig,
                                labels: author.labels,
                                values: author.values,
                                images: author.images,
                            });
                        }
                    }
                });

                return result;

                //---- Returns true if the document isn't already stored
                function isTheFirstOccurence(id, authors, tab) {
                    if (tab.length === 0) return true;
                    else {
                        for (let i = 0; i < tab.length; i++) {
                            if (tab[i].link === id && tab[i].authors.length === authors.length)
                                return false;
                        }
                        return true;
                    }
                }

                //---- Returns true if the id of the source node is part of the authors
                function isFromSource(authorId, authors) {
                    for (let i = 0; i < authors.length; i++) {
                        if (authorId === authors[i])
                            return true;
                    }
                    return false;
                }

                //---- Returns true if the author is part of the cluster
                function oneIsFromCluster(authorId, cluster, sourceId) {
                    for (let i = 0; i < cluster.length; i++) {
                        for (let j = 0; j < cluster.length; j++) {
                            if (((authorId === cluster[i].idOrig && sourceId === cluster[j].idOrig)
                                || sourceId === cluster[i].idOrig && authorId === cluster[i].idOrig)
                                && authorId !== sourceId) {
                                return true;
                            }
                        }
                    }
                    return false;
                }

                //---- Returns true if the document isn't already stored
                function isTheFirstOccurenceAuthor(id, tab) {
                    if (tab.length === 0) return true;
                    else {
                        for (let i = 0; i < tab.length; i++) {
                            if (tab[i].idOrig === id)
                                return false;
                        }
                        return true;
                    }
                }

                //---- Search for the node that has the id passed as an argument
                function i_findNormalNode(id) {
                    let i;
                    for (i = 0; i < graphData.nodes.qtNodes; i++) {
                        if (graphData.nodes.dataNodes[i].idOrig === id)
                            return graphData.nodes.dataNodes[i];
                    }
                    return null;
                }
            };

            /*---------------------------------
             * Cluster MatrixGlyph
             */
            obj.clusterMatrixGlyph = function (clusterNode, graphData) {
                let result = {
                    nodes: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        dataNodes: []
                    },
                    edges: graphData.edges.valueTitle,
                    matrix: []
                };

                // Includes all cluster node nodes
                clusterNode.cluster.forEach(function (node) {
                    result.nodes.dataNodes.push({
                        id: node.id,
                        idOrig: node.idOrig,
                        labels: node.labels,
                        values: node.values,
                        images: node.images
                    });
                });


                result.nodes.dataNodes.forEach(
                    function (d, i) {
                        result.matrix[i] = [];
                    }
                );

                _addEdgesMatrix(result.nodes.dataNodes, result.matrix, graphData.edges.dataEdges);

                return result;
            };

            /*---------------------------------
             * Edges between 2 clusters
             */
            obj.edgesBtClustersMatrixGlyph = function (edge, graphData) {
                let i, idClusterA, idClusterB, nodeSrc, nodeTgt, qtNodes, qtEdges,
                    vEdges = [];   // Auxiliary variable to temporarily store the set of edges
                let result = {
                    nodes: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        dataNodes: []
                    },
                    edges: graphData.edges.valueTitle,
                    matrix: []
                };

                idClusterA = edge.source.idCluster;
                idClusterB = edge.target.idCluster;

                console.log("IDCLUSTER: " + idClusterA + " " + idClusterB);

                // Includes nodes belonging to distinct clusters connected by an edge
                for (i = 0; i < graphData.edges.qtEdges; i++) {
                    nodeSrc = i_findNormalNode(graphData.edges.dataEdges[i].src);
                    nodeTgt = i_findNormalNode(graphData.edges.dataEdges[i].tgt);
                    if (nodeSrc == null || nodeTgt == null)
                        alert("Node not found!");
                    if (nodeSrc.idCluster === idClusterA && nodeTgt.idCluster === idClusterB ||
                        nodeSrc.idCluster === idClusterB && nodeTgt.idCluster === idClusterA) {
                        vEdges.push({
                            src: graphData.edges.dataEdges[i].src,
                            tgt: graphData.edges.dataEdges[i].tgt,
                            labels: graphData.edges.dataEdges[i].labels,
                            values: graphData.edges.dataEdges[i].values
                        });
                        i_addNode(nodeSrc, result.nodes.dataNodes);
                        i_addNode(nodeTgt, result.nodes.dataNodes);
                    }
                }


                // Initializes the matrix of edges
                result.nodes.dataNodes.forEach(
                    function (d, i) {
                        result.matrix[i] = [];
                    }
                );

                //------- Adjust the ids to conform to the indices
                qtNodes = result.nodes.dataNodes.length;
                qtEdges = vEdges.length;

                for (i = 0; i < qtEdges; i++) {
                    for (j = 0; j < qtNodes; j++) {
                        if (result.nodes.dataNodes[j].id === vEdges[i].src) {
                            vEdges[i].src = j;
                            break;
                        }
                    }
                    for (j = 0; j < qtNodes; j++) {
                        if (result.nodes.dataNodes[j].id === vEdges[i].tgt) {
                            vEdges[i].tgt = j;
                            break;
                        }
                    }
                }

                result.nodes.dataNodes.forEach(function (node, k) {
                    node.id = k;
                });

                vEdges.forEach(
                    function (d) {
                        result.matrix[d.src].push({ "x": d.tgt, "y": d.src, "exist": true, "labels": d.labels, "values": d.values });
                        result.matrix[d.tgt].push({ "x": d.src, "y": d.tgt, "exist": true, "labels": d.labels, "values": d.values });
                    }
                );

                return result;

                //---- Search for the node that has the id passed as an argument
                function i_findNormalNode(id) {
                    let i;
                    for (i = 0; i < graphData.nodes.qtNodes; i++) {
                        if (graphData.nodes.dataNodes[i].id === id)
                            return graphData.nodes.dataNodes[i];
                    }
                    return null;
                }

                //---- Adds a node in vNode if it does not already exist
                function i_addNode(node, vNodes) {
                    let achei, i;

                    achei = false;
                    for (i = 0; i < vNodes.length; i++) {
                        if (node.id === vNodes[i].id) {
                            achei = true;
                            break;
                        }
                    }
                    if (!achei) {
                        vNodes.push({
                            id: node.id,
                            labels: node.labels,
                            values: node.values,
                            images: node.images
                        });

                    }
                }
            };




            /*---------------------------------
             * Node and its adjacent MatrixGlyph
             */
            obj.normalMatrixGlyph = function (normalNode, graphData) {

                let result = {
                    nodes: {
                        labelTitle: graphData.nodes.labelTitle,
                        valueTitle: graphData.nodes.valueTitle,
                        imageTitle: graphData.nodes.imageTitle,
                        dataNodes: []
                    },
                    edges: graphData.edges.valueTitle,
                    matrix: []
                };

                // Include the passed node as argument
                result.nodes.dataNodes.push({
                    id: normalNode.id,
                    idOrig: normalNode.idOrig,
                    labels: normalNode.labels,
                    values: normalNode.values,
                    images: normalNode.images
                });

                graphData.edges.dataEdges.forEach(function (d) {
                    if (d.src === normalNode.idOrig)
                        result.nodes.dataNodes.push({
                            id: graphData.nodes.dataNodes[d.tgt].id,
                            idOrig: graphData.nodes.dataNodes[d.tgt].idOrig,
                            labels: graphData.nodes.dataNodes[d.tgt].labels,
                            values: graphData.nodes.dataNodes[d.tgt].values,
                            images: graphData.nodes.dataNodes[d.tgt].images
                        });
                    else
                        if (d.tgt === normalNode.idOrig)
                            result.nodes.dataNodes.push({
                                id: graphData.nodes.dataNodes[d.src].id,
                                idOrig: graphData.nodes.dataNodes[d.src].idOrig,
                                labels: graphData.nodes.dataNodes[d.src].labels,
                                values: graphData.nodes.dataNodes[d.src].values,
                                images: graphData.nodes.dataNodes[d.src].images
                            });

                });

                result.nodes.dataNodes.forEach(
                    function (d, i) {
                        result.matrix[i] = [];
                    }
                );

                _addEdgesMatrix(result.nodes.dataNodes, result.matrix, graphData.edges.dataEdges);

                return result;
            };

            obj.normalListDocs = function (normalNode, graphData) {
                let result = {
                };

                return result;
            };
            //---------------------------      
            return obj;
        };

        return lcv;
    };

const appendToMap = (map, propName, value) => {
    const items = map.get(propName);
    if (!items) {
        map.set(propName, [value]);
    }
    else if (!items.includes(value)) {
        items.push(value);
    }
};
const debounce$1 = (fn, ms) => {
    let timeoutId;
    return (...args) => {
        if (timeoutId) {
            clearTimeout(timeoutId);
        }
        timeoutId = setTimeout(() => {
            timeoutId = 0;
            fn(...args);
        }, ms);
    };
};

/**
 * Check if a possible element isConnected.
 * The property might not be there, so we check for it.
 *
 * We want it to return true if isConnected is not a property,
 * otherwise we would remove these elements and would not update.
 *
 * Better leak in Edge than to be useless.
 */
const isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;
const cleanupElements = debounce$1((map) => {
    for (let key of map.keys()) {
        map.set(key, map.get(key).filter(isConnected));
    }
}, 2000);
const stencilSubscription = ({ on }) => {
    const elmsToUpdate = new Map();
    if (typeof getRenderingRef === 'function') {
        // If we are not in a stencil project, we do nothing.
        // This function is not really exported by @stencil/core.
        on('dispose', () => {
            elmsToUpdate.clear();
        });
        on('get', (propName) => {
            const elm = getRenderingRef();
            if (elm) {
                appendToMap(elmsToUpdate, propName, elm);
            }
        });
        on('set', (propName) => {
            const elements = elmsToUpdate.get(propName);
            if (elements) {
                elmsToUpdate.set(propName, elements.filter(forceUpdate$1));
            }
            cleanupElements(elmsToUpdate);
        });
        on('reset', () => {
            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate$1));
            cleanupElements(elmsToUpdate);
        });
    }
};

const createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {
    let states = new Map(Object.entries(defaultState !== null && defaultState !== void 0 ? defaultState : {}));
    const handlers = {
        dispose: [],
        get: [],
        set: [],
        reset: [],
    };
    const reset = () => {
        states = new Map(Object.entries(defaultState !== null && defaultState !== void 0 ? defaultState : {}));
        handlers.reset.forEach((cb) => cb());
    };
    const dispose = () => {
        // Call first dispose as resetting the state would
        // cause less updates ;)
        handlers.dispose.forEach((cb) => cb());
        reset();
    };
    const get = (propName) => {
        handlers.get.forEach((cb) => cb(propName));
        return states.get(propName);
    };
    const set = (propName, value) => {
        const oldValue = states.get(propName);
        if (shouldUpdate(value, oldValue, propName)) {
            states.set(propName, value);
            handlers.set.forEach((cb) => cb(propName, value, oldValue));
        }
    };
    const state = (typeof Proxy === 'undefined'
        ? {}
        : new Proxy(defaultState, {
            get(_, propName) {
                return get(propName);
            },
            ownKeys(_) {
                return Array.from(states.keys());
            },
            getOwnPropertyDescriptor() {
                return {
                    enumerable: true,
                    configurable: true,
                };
            },
            has(_, propName) {
                return states.has(propName);
            },
            set(_, propName, value) {
                set(propName, value);
                return true;
            },
        }));
    const on = (eventName, callback) => {
        handlers[eventName].push(callback);
        return () => {
            removeFromArray(handlers[eventName], callback);
        };
    };
    const onChange = (propName, cb) => {
        const unSet = on('set', (key, newValue) => {
            if (key === propName) {
                cb(newValue);
            }
        });
        const unReset = on('reset', () => cb(defaultState[propName]));
        return () => {
            unSet();
            unReset();
        };
    };
    const use = (...subscriptions) => subscriptions.forEach((subscription) => {
        if (subscription.set) {
            on('set', subscription.set);
        }
        if (subscription.get) {
            on('get', subscription.get);
        }
        if (subscription.reset) {
            on('reset', subscription.reset);
        }
    });
    const forceUpdate = (key) => {
        const oldValue = states.get(key);
        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));
    };
    return {
        state,
        get,
        set,
        on,
        onChange,
        use,
        dispose,
        reset,
        forceUpdate,
    };
};
const removeFromArray = (array, item) => {
    const index = array.indexOf(item);
    if (index >= 0) {
        array[index] = array[array.length - 1];
        array.length--;
    }
};

const createStore = (defaultState, shouldUpdate) => {
    const map = createObservableMap(defaultState, shouldUpdate);
    stencilSubscription(map);
    return map;
};

const { state } = createStore({
  indexChart: 0,
  zIndex: 0,
  ATN_ShortName: 0,
  ATN_AuthorName: 1,
  ATN_Category: 2,
  ATN_LinhaPesq: 3,
  ATN_Area: 4,
  ATN_QtLinhaPesq: 1001,
  ATN_QtPublicacoes: 1003,
  ATN_QtJournals: 1004,
  ATN_QtBooks: 1005,
  ATN_QtProceedings: 1006,
  ATN_ConnectComp: 1007,
  ATN_Degree: 1011,
  ATE_QtPublicacoes: 1000,
  ATE_QtJournals: 1001,
  ATE_QtBooks: 1002,
  ATE_QtProceedings: 1003,
  TC_NodeEdge: 0,
  TC_ClusterVis: 1,
  TC_Iris: 2,
  TC_GlyphMatrix: 3,
  TC_Iris_Solo: 4,
  TC_PapersList_Solo: 5,
  TC_NodeEdge_HAL: 6,
  TC_ClusterVis_HAL: 7,
  TC_Histogram: 8,
  MG_WidthChart: 350,
  MG_HeightChart: 350,
  headerTitle: " connections ",
  GLYPH_STAR: 4,
  _data: null,
});

// ModelJS v0.2.4
//
// https://github.com/curran/model
//
// Last updated by Curran Kelleher March 2015
//
// Includes contributions from
//
//  * github.com/mathiasrw
//  * github.com/bollwyvl
//  * github.com/adle29
//  * github.com/Hypercubed

// Returns a debounced version of the given function.
// See http://underscorejs.org/#debounce
function debounce(callback){
  var queued = false;
  return function () {
    if(!queued){
      queued = true;
      setTimeout(function () {
        queued = false;
        callback();
      }, 0);
    }
  };
}

// Returns true if all elements of the given array are defined, false otherwise.
function allAreDefined(arr){
  return !arr.some(function (d) {
    return typeof d === 'undefined' || d === null;
  });
}

// The constructor function, accepting default values.
function Model(defaults){

  // Make sure "new" is always used,
  // so we can use "instanceof" to check if something is a Model.
  if (!(this instanceof Model)) {
    return new Model(defaults);
  }

  // `model` is the public API object returned from invoking `new Model()`.
  var model = this,

      // The internal stored values for tracked properties. { property -> value }
      values = {},

      // The callback functions for each tracked property. { property -> [callback] }
      listeners = {},

      // The set of tracked properties. { property -> true }
      trackedProperties = {};

  // The functional reactive "when" operator.
  //
  //  * `properties` An array of property names (can also be a single property string).
  //  * `callback` A callback function that is called:
  //    * with property values as arguments, ordered corresponding to the properties array,
  //    * only if all specified properties have values,
  //    * once for initialization,
  //    * whenever one or more specified properties change,
  //    * on the next tick of the JavaScript event loop after properties change,
  //    * only once as a result of one or more synchronous changes to dependency properties.
  function when(properties, callback, thisArg){

    // Make sure the default `this` becomes
    // the object you called `.on` on.
    thisArg = thisArg || this;

    // Handle either an array or a single string.
    properties = (properties instanceof Array) ? properties : [properties];

    // This function will trigger the callback to be invoked.
    var listener = debounce(function (){
      var args = properties.map(function(property){
        return values[property];
      });
      if(allAreDefined(args)){
        callback.apply(thisArg, args);
      }
    });

    // Trigger the callback once for initialization.
    listener();

    // Trigger the callback whenever specified properties change.
    properties.forEach(function(property){
      on(property, listener);
    });

    // Return this function so it can be removed later with `model.cancel(listener)`.
    return listener;
  }

  // Adds a change listener for a given property with Backbone-like behavior.
  // Similar to http://backbonejs.org/#Events-on
  function on(property, callback, thisArg){
    thisArg = thisArg || this;
    getListeners(property).push(callback);
    track(property, thisArg);
  }

  // Gets or creates the array of listener functions for a given property.
  function getListeners(property){
    return listeners[property] || (listeners[property] = []);
  }

  // Tracks a property if it is not already tracked.
  function track(property, thisArg){
    if(!(property in trackedProperties)){
      trackedProperties[property] = true;
      values[property] = model[property];
      Object.defineProperty(model, property, {
        get: function () { return values[property]; },
        set: function(newValue) {
          var oldValue = values[property];
          values[property] = newValue;
          getListeners(property).forEach(function(callback){
            callback.call(thisArg, newValue, oldValue);
          });
        }
      });
    }
  }

  // Cancels a listener returned by a call to `model.when(...)`.
  function cancel(listener){
    for(var property in listeners){
      off(property, listener);
    }
  }

  // Removes a change listener added using `on`.
  function off(property, callback){
    listeners[property] = listeners[property].filter(function (listener) {
      return listener !== callback;
    });
  }

  // Sets all of the given values on the model.
  // `newValues` is an object { property -> value }.
  function set(newValues){
    for(var property in newValues){
      model[property] = newValues[property];
    }
  }

  // Transfer defaults passed into the constructor to the model.
  set(defaults);

  // Public API.
  model.when = when;
  model.cancel = cancel;
  model.on = on;
  model.off = off;
  model.set = set;
}

// Model.None is A representation for an optional Model property that is not specified.
// Model property values of null or undefined are not propagated through
// to when() listeners. If you want the when() listener to be invoked, but
// some of the properties may or may not be defined, you can use Model.None.
// This way, the when() listener is invoked even when the value is Model.None.
// This allows the "when" approach to support optional properties.
//
// For example usage, see this scatter plot example with optional size and color fields:
// http://bl.ocks.org/curran/9e04ccfebeb84bcdc76c
//
// Inspired by Scala's Option type.
// See http://alvinalexander.com/scala/using-scala-option-some-none-idiom-function-java-null
Model.None = "__NONE__";

var model = Model;

const mgeBarchartCss = ":host{display:block}.HC-abscissa{fill:none;stroke:black;shape-rendering:crispEdges}.histogram{}.helpContainer{position:absolute;top:15%;right:3%}.helpTooltip{position:absolute;top:25%;right:3%;border-radius:4px;background-color:rgba(246, 240, 186, 0.9);border:1px solid #c7b51a;font-family:sans-serif;font-size:10px;font-weight:bold;z-index:1000}.HistogramChart{}/*!\n * Font Awesome Free 5.15.3 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n */.fa,.fas,.far,.fal,.fad,.fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-block;font-style:normal;font-variant:normal;text-rendering:auto;line-height:1}.fa-lg{font-size:1.33333em;line-height:0.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:solid 0.08em #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fas.fa-pull-left,.far.fa-pull-left,.fal.fa-pull-left,.fab.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fas.fa-pull-right,.far.fa-pull-right,.fal.fa-pull-right,.fab.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";-webkit-transform:scale(-1, 1);transform:scale(-1, 1)}.fa-flip-vertical{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";-webkit-transform:scale(1, -1);transform:scale(1, -1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";-webkit-transform:scale(-1, -1);transform:scale(-1, -1)}:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-flip-both{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;line-height:2em;position:relative;vertical-align:middle;width:2.5em}.fa-stack-1x,.fa-stack-2x{left:0;position:absolute;text-align:center;width:100%}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-500px:before{content:\"\\f26e\"}.fa-accessible-icon:before{content:\"\\f368\"}.fa-accusoft:before{content:\"\\f369\"}.fa-acquisitions-incorporated:before{content:\"\\f6af\"}.fa-ad:before{content:\"\\f641\"}.fa-address-book:before{content:\"\\f2b9\"}.fa-address-card:before{content:\"\\f2bb\"}.fa-adjust:before{content:\"\\f042\"}.fa-adn:before{content:\"\\f170\"}.fa-adversal:before{content:\"\\f36a\"}.fa-affiliatetheme:before{content:\"\\f36b\"}.fa-air-freshener:before{content:\"\\f5d0\"}.fa-airbnb:before{content:\"\\f834\"}.fa-algolia:before{content:\"\\f36c\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-justify:before{content:\"\\f039\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-right:before{content:\"\\f038\"}.fa-alipay:before{content:\"\\f642\"}.fa-allergies:before{content:\"\\f461\"}.fa-amazon:before{content:\"\\f270\"}.fa-amazon-pay:before{content:\"\\f42c\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-american-sign-language-interpreting:before{content:\"\\f2a3\"}.fa-amilia:before{content:\"\\f36d\"}.fa-anchor:before{content:\"\\f13d\"}.fa-android:before{content:\"\\f17b\"}.fa-angellist:before{content:\"\\f209\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-down:before{content:\"\\f107\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angry:before{content:\"\\f556\"}.fa-angrycreative:before{content:\"\\f36e\"}.fa-angular:before{content:\"\\f420\"}.fa-ankh:before{content:\"\\f644\"}.fa-app-store:before{content:\"\\f36f\"}.fa-app-store-ios:before{content:\"\\f370\"}.fa-apper:before{content:\"\\f371\"}.fa-apple:before{content:\"\\f179\"}.fa-apple-alt:before{content:\"\\f5d1\"}.fa-apple-pay:before{content:\"\\f415\"}.fa-archive:before{content:\"\\f187\"}.fa-archway:before{content:\"\\f557\"}.fa-arrow-alt-circle-down:before{content:\"\\f358\"}.fa-arrow-alt-circle-left:before{content:\"\\f359\"}.fa-arrow-alt-circle-right:before{content:\"\\f35a\"}.fa-arrow-alt-circle-up:before{content:\"\\f35b\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-arrows-alt-h:before{content:\"\\f337\"}.fa-arrows-alt-v:before{content:\"\\f338\"}.fa-artstation:before{content:\"\\f77a\"}.fa-assistive-listening-systems:before{content:\"\\f2a2\"}.fa-asterisk:before{content:\"\\f069\"}.fa-asymmetrik:before{content:\"\\f372\"}.fa-at:before{content:\"\\f1fa\"}.fa-atlas:before{content:\"\\f558\"}.fa-atlassian:before{content:\"\\f77b\"}.fa-atom:before{content:\"\\f5d2\"}.fa-audible:before{content:\"\\f373\"}.fa-audio-description:before{content:\"\\f29e\"}.fa-autoprefixer:before{content:\"\\f41c\"}.fa-avianex:before{content:\"\\f374\"}.fa-aviato:before{content:\"\\f421\"}.fa-award:before{content:\"\\f559\"}.fa-aws:before{content:\"\\f375\"}.fa-baby:before{content:\"\\f77c\"}.fa-baby-carriage:before{content:\"\\f77d\"}.fa-backspace:before{content:\"\\f55a\"}.fa-backward:before{content:\"\\f04a\"}.fa-bacon:before{content:\"\\f7e5\"}.fa-bacteria:before{content:\"\\e059\"}.fa-bacterium:before{content:\"\\e05a\"}.fa-bahai:before{content:\"\\f666\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-balance-scale-left:before{content:\"\\f515\"}.fa-balance-scale-right:before{content:\"\\f516\"}.fa-ban:before{content:\"\\f05e\"}.fa-band-aid:before{content:\"\\f462\"}.fa-bandcamp:before{content:\"\\f2d5\"}.fa-barcode:before{content:\"\\f02a\"}.fa-bars:before{content:\"\\f0c9\"}.fa-baseball-ball:before{content:\"\\f433\"}.fa-basketball-ball:before{content:\"\\f434\"}.fa-bath:before{content:\"\\f2cd\"}.fa-battery-empty:before{content:\"\\f244\"}.fa-battery-full:before{content:\"\\f240\"}.fa-battery-half:before{content:\"\\f242\"}.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-battle-net:before{content:\"\\f835\"}.fa-bed:before{content:\"\\f236\"}.fa-beer:before{content:\"\\f0fc\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-bell:before{content:\"\\f0f3\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bezier-curve:before{content:\"\\f55b\"}.fa-bible:before{content:\"\\f647\"}.fa-bicycle:before{content:\"\\f206\"}.fa-biking:before{content:\"\\f84a\"}.fa-bimobject:before{content:\"\\f378\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-biohazard:before{content:\"\\f780\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitcoin:before{content:\"\\f379\"}.fa-bity:before{content:\"\\f37a\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-blackberry:before{content:\"\\f37b\"}.fa-blender:before{content:\"\\f517\"}.fa-blender-phone:before{content:\"\\f6b6\"}.fa-blind:before{content:\"\\f29d\"}.fa-blog:before{content:\"\\f781\"}.fa-blogger:before{content:\"\\f37c\"}.fa-blogger-b:before{content:\"\\f37d\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-bold:before{content:\"\\f032\"}.fa-bolt:before{content:\"\\f0e7\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-bone:before{content:\"\\f5d7\"}.fa-bong:before{content:\"\\f55c\"}.fa-book:before{content:\"\\f02d\"}.fa-book-dead:before{content:\"\\f6b7\"}.fa-book-medical:before{content:\"\\f7e6\"}.fa-book-open:before{content:\"\\f518\"}.fa-book-reader:before{content:\"\\f5da\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-bootstrap:before{content:\"\\f836\"}.fa-border-all:before{content:\"\\f84c\"}.fa-border-none:before{content:\"\\f850\"}.fa-border-style:before{content:\"\\f853\"}.fa-bowling-ball:before{content:\"\\f436\"}.fa-box:before{content:\"\\f466\"}.fa-box-open:before{content:\"\\f49e\"}.fa-box-tissue:before{content:\"\\e05b\"}.fa-boxes:before{content:\"\\f468\"}.fa-braille:before{content:\"\\f2a1\"}.fa-brain:before{content:\"\\f5dc\"}.fa-bread-slice:before{content:\"\\f7ec\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-briefcase-medical:before{content:\"\\f469\"}.fa-broadcast-tower:before{content:\"\\f519\"}.fa-broom:before{content:\"\\f51a\"}.fa-brush:before{content:\"\\f55d\"}.fa-btc:before{content:\"\\f15a\"}.fa-buffer:before{content:\"\\f837\"}.fa-bug:before{content:\"\\f188\"}.fa-building:before{content:\"\\f1ad\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bullseye:before{content:\"\\f140\"}.fa-burn:before{content:\"\\f46a\"}.fa-buromobelexperte:before{content:\"\\f37f\"}.fa-bus:before{content:\"\\f207\"}.fa-bus-alt:before{content:\"\\f55e\"}.fa-business-time:before{content:\"\\f64a\"}.fa-buy-n-large:before{content:\"\\f8a6\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-calendar:before{content:\"\\f133\"}.fa-calendar-alt:before{content:\"\\f073\"}.fa-calendar-check:before{content:\"\\f274\"}.fa-calendar-day:before{content:\"\\f783\"}.fa-calendar-minus:before{content:\"\\f272\"}.fa-calendar-plus:before{content:\"\\f271\"}.fa-calendar-times:before{content:\"\\f273\"}.fa-calendar-week:before{content:\"\\f784\"}.fa-camera:before{content:\"\\f030\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-campground:before{content:\"\\f6bb\"}.fa-canadian-maple-leaf:before{content:\"\\f785\"}.fa-candy-cane:before{content:\"\\f786\"}.fa-cannabis:before{content:\"\\f55f\"}.fa-capsules:before{content:\"\\f46b\"}.fa-car:before{content:\"\\f1b9\"}.fa-car-alt:before{content:\"\\f5de\"}.fa-car-battery:before{content:\"\\f5df\"}.fa-car-crash:before{content:\"\\f5e1\"}.fa-car-side:before{content:\"\\f5e4\"}.fa-caravan:before{content:\"\\f8ff\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-caret-square-down:before{content:\"\\f150\"}.fa-caret-square-left:before{content:\"\\f191\"}.fa-caret-square-right:before{content:\"\\f152\"}.fa-caret-square-up:before{content:\"\\f151\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-carrot:before{content:\"\\f787\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cash-register:before{content:\"\\f788\"}.fa-cat:before{content:\"\\f6be\"}.fa-cc-amazon-pay:before{content:\"\\f42d\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-apple-pay:before{content:\"\\f416\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-centercode:before{content:\"\\f380\"}.fa-centos:before{content:\"\\f789\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-chair:before{content:\"\\f6c0\"}.fa-chalkboard:before{content:\"\\f51b\"}.fa-chalkboard-teacher:before{content:\"\\f51c\"}.fa-charging-station:before{content:\"\\f5e7\"}.fa-chart-area:before{content:\"\\f1fe\"}.fa-chart-bar:before{content:\"\\f080\"}.fa-chart-line:before{content:\"\\f201\"}.fa-chart-pie:before{content:\"\\f200\"}.fa-check:before{content:\"\\f00c\"}.fa-check-circle:before{content:\"\\f058\"}.fa-check-double:before{content:\"\\f560\"}.fa-check-square:before{content:\"\\f14a\"}.fa-cheese:before{content:\"\\f7ef\"}.fa-chess:before{content:\"\\f439\"}.fa-chess-bishop:before{content:\"\\f43a\"}.fa-chess-board:before{content:\"\\f43c\"}.fa-chess-king:before{content:\"\\f43f\"}.fa-chess-knight:before{content:\"\\f441\"}.fa-chess-pawn:before{content:\"\\f443\"}.fa-chess-queen:before{content:\"\\f445\"}.fa-chess-rook:before{content:\"\\f447\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-child:before{content:\"\\f1ae\"}.fa-chrome:before{content:\"\\f268\"}.fa-chromecast:before{content:\"\\f838\"}.fa-church:before{content:\"\\f51d\"}.fa-circle:before{content:\"\\f111\"}.fa-circle-notch:before{content:\"\\f1ce\"}.fa-city:before{content:\"\\f64f\"}.fa-clinic-medical:before{content:\"\\f7f2\"}.fa-clipboard:before{content:\"\\f328\"}.fa-clipboard-check:before{content:\"\\f46c\"}.fa-clipboard-list:before{content:\"\\f46d\"}.fa-clock:before{content:\"\\f017\"}.fa-clone:before{content:\"\\f24d\"}.fa-closed-captioning:before{content:\"\\f20a\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-cloud-download-alt:before{content:\"\\f381\"}.fa-cloud-meatball:before{content:\"\\f73b\"}.fa-cloud-moon:before{content:\"\\f6c3\"}.fa-cloud-moon-rain:before{content:\"\\f73c\"}.fa-cloud-rain:before{content:\"\\f73d\"}.fa-cloud-showers-heavy:before{content:\"\\f740\"}.fa-cloud-sun:before{content:\"\\f6c4\"}.fa-cloud-sun-rain:before{content:\"\\f743\"}.fa-cloud-upload-alt:before{content:\"\\f382\"}.fa-cloudflare:before{content:\"\\e07d\"}.fa-cloudscale:before{content:\"\\f383\"}.fa-cloudsmith:before{content:\"\\f384\"}.fa-cloudversify:before{content:\"\\f385\"}.fa-cocktail:before{content:\"\\f561\"}.fa-code:before{content:\"\\f121\"}.fa-code-branch:before{content:\"\\f126\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-codiepie:before{content:\"\\f284\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cog:before{content:\"\\f013\"}.fa-cogs:before{content:\"\\f085\"}.fa-coins:before{content:\"\\f51e\"}.fa-columns:before{content:\"\\f0db\"}.fa-comment:before{content:\"\\f075\"}.fa-comment-alt:before{content:\"\\f27a\"}.fa-comment-dollar:before{content:\"\\f651\"}.fa-comment-dots:before{content:\"\\f4ad\"}.fa-comment-medical:before{content:\"\\f7f5\"}.fa-comment-slash:before{content:\"\\f4b3\"}.fa-comments:before{content:\"\\f086\"}.fa-comments-dollar:before{content:\"\\f653\"}.fa-compact-disc:before{content:\"\\f51f\"}.fa-compass:before{content:\"\\f14e\"}.fa-compress:before{content:\"\\f066\"}.fa-compress-alt:before{content:\"\\f422\"}.fa-compress-arrows-alt:before{content:\"\\f78c\"}.fa-concierge-bell:before{content:\"\\f562\"}.fa-confluence:before{content:\"\\f78d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-contao:before{content:\"\\f26d\"}.fa-cookie:before{content:\"\\f563\"}.fa-cookie-bite:before{content:\"\\f564\"}.fa-copy:before{content:\"\\f0c5\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-cotton-bureau:before{content:\"\\f89e\"}.fa-couch:before{content:\"\\f4b8\"}.fa-cpanel:before{content:\"\\f388\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-creative-commons-by:before{content:\"\\f4e7\"}.fa-creative-commons-nc:before{content:\"\\f4e8\"}.fa-creative-commons-nc-eu:before{content:\"\\f4e9\"}.fa-creative-commons-nc-jp:before{content:\"\\f4ea\"}.fa-creative-commons-nd:before{content:\"\\f4eb\"}.fa-creative-commons-pd:before{content:\"\\f4ec\"}.fa-creative-commons-pd-alt:before{content:\"\\f4ed\"}.fa-creative-commons-remix:before{content:\"\\f4ee\"}.fa-creative-commons-sa:before{content:\"\\f4ef\"}.fa-creative-commons-sampling:before{content:\"\\f4f0\"}.fa-creative-commons-sampling-plus:before{content:\"\\f4f1\"}.fa-creative-commons-share:before{content:\"\\f4f2\"}.fa-creative-commons-zero:before{content:\"\\f4f3\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-critical-role:before{content:\"\\f6c9\"}.fa-crop:before{content:\"\\f125\"}.fa-crop-alt:before{content:\"\\f565\"}.fa-cross:before{content:\"\\f654\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-crow:before{content:\"\\f520\"}.fa-crown:before{content:\"\\f521\"}.fa-crutch:before{content:\"\\f7f7\"}.fa-css3:before{content:\"\\f13c\"}.fa-css3-alt:before{content:\"\\f38b\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-cut:before{content:\"\\f0c4\"}.fa-cuttlefish:before{content:\"\\f38c\"}.fa-d-and-d:before{content:\"\\f38d\"}.fa-d-and-d-beyond:before{content:\"\\f6ca\"}.fa-dailymotion:before{content:\"\\e052\"}.fa-dashcube:before{content:\"\\f210\"}.fa-database:before{content:\"\\f1c0\"}.fa-deaf:before{content:\"\\f2a4\"}.fa-deezer:before{content:\"\\e077\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-democrat:before{content:\"\\f747\"}.fa-deploydog:before{content:\"\\f38e\"}.fa-deskpro:before{content:\"\\f38f\"}.fa-desktop:before{content:\"\\f108\"}.fa-dev:before{content:\"\\f6cc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-dharmachakra:before{content:\"\\f655\"}.fa-dhl:before{content:\"\\f790\"}.fa-diagnoses:before{content:\"\\f470\"}.fa-diaspora:before{content:\"\\f791\"}.fa-dice:before{content:\"\\f522\"}.fa-dice-d20:before{content:\"\\f6cf\"}.fa-dice-d6:before{content:\"\\f6d1\"}.fa-dice-five:before{content:\"\\f523\"}.fa-dice-four:before{content:\"\\f524\"}.fa-dice-one:before{content:\"\\f525\"}.fa-dice-six:before{content:\"\\f526\"}.fa-dice-three:before{content:\"\\f527\"}.fa-dice-two:before{content:\"\\f528\"}.fa-digg:before{content:\"\\f1a6\"}.fa-digital-ocean:before{content:\"\\f391\"}.fa-digital-tachograph:before{content:\"\\f566\"}.fa-directions:before{content:\"\\f5eb\"}.fa-discord:before{content:\"\\f392\"}.fa-discourse:before{content:\"\\f393\"}.fa-disease:before{content:\"\\f7fa\"}.fa-divide:before{content:\"\\f529\"}.fa-dizzy:before{content:\"\\f567\"}.fa-dna:before{content:\"\\f471\"}.fa-dochub:before{content:\"\\f394\"}.fa-docker:before{content:\"\\f395\"}.fa-dog:before{content:\"\\f6d3\"}.fa-dollar-sign:before{content:\"\\f155\"}.fa-dolly:before{content:\"\\f472\"}.fa-dolly-flatbed:before{content:\"\\f474\"}.fa-donate:before{content:\"\\f4b9\"}.fa-door-closed:before{content:\"\\f52a\"}.fa-door-open:before{content:\"\\f52b\"}.fa-dot-circle:before{content:\"\\f192\"}.fa-dove:before{content:\"\\f4ba\"}.fa-download:before{content:\"\\f019\"}.fa-draft2digital:before{content:\"\\f396\"}.fa-drafting-compass:before{content:\"\\f568\"}.fa-dragon:before{content:\"\\f6d5\"}.fa-draw-polygon:before{content:\"\\f5ee\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-dribbble-square:before{content:\"\\f397\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-drum:before{content:\"\\f569\"}.fa-drum-steelpan:before{content:\"\\f56a\"}.fa-drumstick-bite:before{content:\"\\f6d7\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-dumbbell:before{content:\"\\f44b\"}.fa-dumpster:before{content:\"\\f793\"}.fa-dumpster-fire:before{content:\"\\f794\"}.fa-dungeon:before{content:\"\\f6d9\"}.fa-dyalog:before{content:\"\\f399\"}.fa-earlybirds:before{content:\"\\f39a\"}.fa-ebay:before{content:\"\\f4f4\"}.fa-edge:before{content:\"\\f282\"}.fa-edge-legacy:before{content:\"\\e078\"}.fa-edit:before{content:\"\\f044\"}.fa-egg:before{content:\"\\f7fb\"}.fa-eject:before{content:\"\\f052\"}.fa-elementor:before{content:\"\\f430\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-ello:before{content:\"\\f5f1\"}.fa-ember:before{content:\"\\f423\"}.fa-empire:before{content:\"\\f1d1\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-envelope-open:before{content:\"\\f2b6\"}.fa-envelope-open-text:before{content:\"\\f658\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-envira:before{content:\"\\f299\"}.fa-equals:before{content:\"\\f52c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-erlang:before{content:\"\\f39d\"}.fa-ethereum:before{content:\"\\f42e\"}.fa-ethernet:before{content:\"\\f796\"}.fa-etsy:before{content:\"\\f2d7\"}.fa-euro-sign:before{content:\"\\f153\"}.fa-evernote:before{content:\"\\f839\"}.fa-exchange-alt:before{content:\"\\f362\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-expand:before{content:\"\\f065\"}.fa-expand-alt:before{content:\"\\f424\"}.fa-expand-arrows-alt:before{content:\"\\f31e\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-external-link-alt:before{content:\"\\f35d\"}.fa-external-link-square-alt:before{content:\"\\f360\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-dropper:before{content:\"\\f1fb\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-facebook:before{content:\"\\f09a\"}.fa-facebook-f:before{content:\"\\f39e\"}.fa-facebook-messenger:before{content:\"\\f39f\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-fan:before{content:\"\\f863\"}.fa-fantasy-flight-games:before{content:\"\\f6dc\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-faucet:before{content:\"\\e005\"}.fa-fax:before{content:\"\\f1ac\"}.fa-feather:before{content:\"\\f52d\"}.fa-feather-alt:before{content:\"\\f56b\"}.fa-fedex:before{content:\"\\f797\"}.fa-fedora:before{content:\"\\f798\"}.fa-female:before{content:\"\\f182\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-figma:before{content:\"\\f799\"}.fa-file:before{content:\"\\f15b\"}.fa-file-alt:before{content:\"\\f15c\"}.fa-file-archive:before{content:\"\\f1c6\"}.fa-file-audio:before{content:\"\\f1c7\"}.fa-file-code:before{content:\"\\f1c9\"}.fa-file-contract:before{content:\"\\f56c\"}.fa-file-csv:before{content:\"\\f6dd\"}.fa-file-download:before{content:\"\\f56d\"}.fa-file-excel:before{content:\"\\f1c3\"}.fa-file-export:before{content:\"\\f56e\"}.fa-file-image:before{content:\"\\f1c5\"}.fa-file-import:before{content:\"\\f56f\"}.fa-file-invoice:before{content:\"\\f570\"}.fa-file-invoice-dollar:before{content:\"\\f571\"}.fa-file-medical:before{content:\"\\f477\"}.fa-file-medical-alt:before{content:\"\\f478\"}.fa-file-pdf:before{content:\"\\f1c1\"}.fa-file-powerpoint:before{content:\"\\f1c4\"}.fa-file-prescription:before{content:\"\\f572\"}.fa-file-signature:before{content:\"\\f573\"}.fa-file-upload:before{content:\"\\f574\"}.fa-file-video:before{content:\"\\f1c8\"}.fa-file-word:before{content:\"\\f1c2\"}.fa-fill:before{content:\"\\f575\"}.fa-fill-drip:before{content:\"\\f576\"}.fa-film:before{content:\"\\f008\"}.fa-filter:before{content:\"\\f0b0\"}.fa-fingerprint:before{content:\"\\f577\"}.fa-fire:before{content:\"\\f06d\"}.fa-fire-alt:before{content:\"\\f7e4\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-firefox:before{content:\"\\f269\"}.fa-firefox-browser:before{content:\"\\e007\"}.fa-first-aid:before{content:\"\\f479\"}.fa-first-order:before{content:\"\\f2b0\"}.fa-first-order-alt:before{content:\"\\f50a\"}.fa-firstdraft:before{content:\"\\f3a1\"}.fa-fish:before{content:\"\\f578\"}.fa-fist-raised:before{content:\"\\f6de\"}.fa-flag:before{content:\"\\f024\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-flag-usa:before{content:\"\\f74d\"}.fa-flask:before{content:\"\\f0c3\"}.fa-flickr:before{content:\"\\f16e\"}.fa-flipboard:before{content:\"\\f44d\"}.fa-flushed:before{content:\"\\f579\"}.fa-fly:before{content:\"\\f417\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-minus:before{content:\"\\f65d\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-folder-plus:before{content:\"\\f65e\"}.fa-font:before{content:\"\\f031\"}.fa-font-awesome:before{content:\"\\f2b4\"}.fa-font-awesome-alt:before{content:\"\\f35c\"}.fa-font-awesome-flag:before{content:\"\\f425\"}.fa-font-awesome-logo-full:before{content:\"\\f4e6\"}.fa-fonticons:before{content:\"\\f280\"}.fa-fonticons-fi:before{content:\"\\f3a2\"}.fa-football-ball:before{content:\"\\f44e\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-fort-awesome-alt:before{content:\"\\f3a3\"}.fa-forumbee:before{content:\"\\f211\"}.fa-forward:before{content:\"\\f04e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-free-code-camp:before{content:\"\\f2c5\"}.fa-freebsd:before{content:\"\\f3a4\"}.fa-frog:before{content:\"\\f52e\"}.fa-frown:before{content:\"\\f119\"}.fa-frown-open:before{content:\"\\f57a\"}.fa-fulcrum:before{content:\"\\f50b\"}.fa-funnel-dollar:before{content:\"\\f662\"}.fa-futbol:before{content:\"\\f1e3\"}.fa-galactic-republic:before{content:\"\\f50c\"}.fa-galactic-senate:before{content:\"\\f50d\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-gas-pump:before{content:\"\\f52f\"}.fa-gavel:before{content:\"\\f0e3\"}.fa-gem:before{content:\"\\f3a5\"}.fa-genderless:before{content:\"\\f22d\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-ghost:before{content:\"\\f6e2\"}.fa-gift:before{content:\"\\f06b\"}.fa-gifts:before{content:\"\\f79c\"}.fa-git:before{content:\"\\f1d3\"}.fa-git-alt:before{content:\"\\f841\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-github:before{content:\"\\f09b\"}.fa-github-alt:before{content:\"\\f113\"}.fa-github-square:before{content:\"\\f092\"}.fa-gitkraken:before{content:\"\\f3a6\"}.fa-gitlab:before{content:\"\\f296\"}.fa-gitter:before{content:\"\\f426\"}.fa-glass-cheers:before{content:\"\\f79f\"}.fa-glass-martini:before{content:\"\\f000\"}.fa-glass-martini-alt:before{content:\"\\f57b\"}.fa-glass-whiskey:before{content:\"\\f7a0\"}.fa-glasses:before{content:\"\\f530\"}.fa-glide:before{content:\"\\f2a5\"}.fa-glide-g:before{content:\"\\f2a6\"}.fa-globe:before{content:\"\\f0ac\"}.fa-globe-africa:before{content:\"\\f57c\"}.fa-globe-americas:before{content:\"\\f57d\"}.fa-globe-asia:before{content:\"\\f57e\"}.fa-globe-europe:before{content:\"\\f7a2\"}.fa-gofore:before{content:\"\\f3a7\"}.fa-golf-ball:before{content:\"\\f450\"}.fa-goodreads:before{content:\"\\f3a8\"}.fa-goodreads-g:before{content:\"\\f3a9\"}.fa-google:before{content:\"\\f1a0\"}.fa-google-drive:before{content:\"\\f3aa\"}.fa-google-pay:before{content:\"\\e079\"}.fa-google-play:before{content:\"\\f3ab\"}.fa-google-plus:before{content:\"\\f2b3\"}.fa-google-plus-g:before{content:\"\\f0d5\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-gopuram:before{content:\"\\f664\"}.fa-graduation-cap:before{content:\"\\f19d\"}.fa-gratipay:before{content:\"\\f184\"}.fa-grav:before{content:\"\\f2d6\"}.fa-greater-than:before{content:\"\\f531\"}.fa-greater-than-equal:before{content:\"\\f532\"}.fa-grimace:before{content:\"\\f57f\"}.fa-grin:before{content:\"\\f580\"}.fa-grin-alt:before{content:\"\\f581\"}.fa-grin-beam:before{content:\"\\f582\"}.fa-grin-beam-sweat:before{content:\"\\f583\"}.fa-grin-hearts:before{content:\"\\f584\"}.fa-grin-squint:before{content:\"\\f585\"}.fa-grin-squint-tears:before{content:\"\\f586\"}.fa-grin-stars:before{content:\"\\f587\"}.fa-grin-tears:before{content:\"\\f588\"}.fa-grin-tongue:before{content:\"\\f589\"}.fa-grin-tongue-squint:before{content:\"\\f58a\"}.fa-grin-tongue-wink:before{content:\"\\f58b\"}.fa-grin-wink:before{content:\"\\f58c\"}.fa-grip-horizontal:before{content:\"\\f58d\"}.fa-grip-lines:before{content:\"\\f7a4\"}.fa-grip-lines-vertical:before{content:\"\\f7a5\"}.fa-grip-vertical:before{content:\"\\f58e\"}.fa-gripfire:before{content:\"\\f3ac\"}.fa-grunt:before{content:\"\\f3ad\"}.fa-guilded:before{content:\"\\e07e\"}.fa-guitar:before{content:\"\\f7a6\"}.fa-gulp:before{content:\"\\f3ae\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-hacker-news:before{content:\"\\f1d4\"}.fa-hacker-news-square:before{content:\"\\f3af\"}.fa-hackerrank:before{content:\"\\f5f7\"}.fa-hamburger:before{content:\"\\f805\"}.fa-hammer:before{content:\"\\f6e3\"}.fa-hamsa:before{content:\"\\f665\"}.fa-hand-holding:before{content:\"\\f4bd\"}.fa-hand-holding-heart:before{content:\"\\f4be\"}.fa-hand-holding-medical:before{content:\"\\e05c\"}.fa-hand-holding-usd:before{content:\"\\f4c0\"}.fa-hand-holding-water:before{content:\"\\f4c1\"}.fa-hand-lizard:before{content:\"\\f258\"}.fa-hand-middle-finger:before{content:\"\\f806\"}.fa-hand-paper:before{content:\"\\f256\"}.fa-hand-peace:before{content:\"\\f25b\"}.fa-hand-point-down:before{content:\"\\f0a7\"}.fa-hand-point-left:before{content:\"\\f0a5\"}.fa-hand-point-right:before{content:\"\\f0a4\"}.fa-hand-point-up:before{content:\"\\f0a6\"}.fa-hand-pointer:before{content:\"\\f25a\"}.fa-hand-rock:before{content:\"\\f255\"}.fa-hand-scissors:before{content:\"\\f257\"}.fa-hand-sparkles:before{content:\"\\e05d\"}.fa-hand-spock:before{content:\"\\f259\"}.fa-hands:before{content:\"\\f4c2\"}.fa-hands-helping:before{content:\"\\f4c4\"}.fa-hands-wash:before{content:\"\\e05e\"}.fa-handshake:before{content:\"\\f2b5\"}.fa-handshake-alt-slash:before{content:\"\\e05f\"}.fa-handshake-slash:before{content:\"\\e060\"}.fa-hanukiah:before{content:\"\\f6e6\"}.fa-hard-hat:before{content:\"\\f807\"}.fa-hashtag:before{content:\"\\f292\"}.fa-hat-cowboy:before{content:\"\\f8c0\"}.fa-hat-cowboy-side:before{content:\"\\f8c1\"}.fa-hat-wizard:before{content:\"\\f6e8\"}.fa-hdd:before{content:\"\\f0a0\"}.fa-head-side-cough:before{content:\"\\e061\"}.fa-head-side-cough-slash:before{content:\"\\e062\"}.fa-head-side-mask:before{content:\"\\e063\"}.fa-head-side-virus:before{content:\"\\e064\"}.fa-heading:before{content:\"\\f1dc\"}.fa-headphones:before{content:\"\\f025\"}.fa-headphones-alt:before{content:\"\\f58f\"}.fa-headset:before{content:\"\\f590\"}.fa-heart:before{content:\"\\f004\"}.fa-heart-broken:before{content:\"\\f7a9\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-helicopter:before{content:\"\\f533\"}.fa-highlighter:before{content:\"\\f591\"}.fa-hiking:before{content:\"\\f6ec\"}.fa-hippo:before{content:\"\\f6ed\"}.fa-hips:before{content:\"\\f452\"}.fa-hire-a-helper:before{content:\"\\f3b0\"}.fa-history:before{content:\"\\f1da\"}.fa-hive:before{content:\"\\e07f\"}.fa-hockey-puck:before{content:\"\\f453\"}.fa-holly-berry:before{content:\"\\f7aa\"}.fa-home:before{content:\"\\f015\"}.fa-hooli:before{content:\"\\f427\"}.fa-hornbill:before{content:\"\\f592\"}.fa-horse:before{content:\"\\f6f0\"}.fa-horse-head:before{content:\"\\f7ab\"}.fa-hospital:before{content:\"\\f0f8\"}.fa-hospital-alt:before{content:\"\\f47d\"}.fa-hospital-symbol:before{content:\"\\f47e\"}.fa-hospital-user:before{content:\"\\f80d\"}.fa-hot-tub:before{content:\"\\f593\"}.fa-hotdog:before{content:\"\\f80f\"}.fa-hotel:before{content:\"\\f594\"}.fa-hotjar:before{content:\"\\f3b1\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-start:before{content:\"\\f251\"}.fa-house-damage:before{content:\"\\f6f1\"}.fa-house-user:before{content:\"\\e065\"}.fa-houzz:before{content:\"\\f27c\"}.fa-hryvnia:before{content:\"\\f6f2\"}.fa-html5:before{content:\"\\f13b\"}.fa-hubspot:before{content:\"\\f3b2\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-ice-cream:before{content:\"\\f810\"}.fa-icicles:before{content:\"\\f7ad\"}.fa-icons:before{content:\"\\f86d\"}.fa-id-badge:before{content:\"\\f2c1\"}.fa-id-card:before{content:\"\\f2c2\"}.fa-id-card-alt:before{content:\"\\f47f\"}.fa-ideal:before{content:\"\\e013\"}.fa-igloo:before{content:\"\\f7ae\"}.fa-image:before{content:\"\\f03e\"}.fa-images:before{content:\"\\f302\"}.fa-imdb:before{content:\"\\f2d8\"}.fa-inbox:before{content:\"\\f01c\"}.fa-indent:before{content:\"\\f03c\"}.fa-industry:before{content:\"\\f275\"}.fa-infinity:before{content:\"\\f534\"}.fa-info:before{content:\"\\f129\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-innosoft:before{content:\"\\e080\"}.fa-instagram:before{content:\"\\f16d\"}.fa-instagram-square:before{content:\"\\e055\"}.fa-instalod:before{content:\"\\e081\"}.fa-intercom:before{content:\"\\f7af\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-invision:before{content:\"\\f7b0\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-italic:before{content:\"\\f033\"}.fa-itch-io:before{content:\"\\f83a\"}.fa-itunes:before{content:\"\\f3b4\"}.fa-itunes-note:before{content:\"\\f3b5\"}.fa-java:before{content:\"\\f4e4\"}.fa-jedi:before{content:\"\\f669\"}.fa-jedi-order:before{content:\"\\f50e\"}.fa-jenkins:before{content:\"\\f3b6\"}.fa-jira:before{content:\"\\f7b1\"}.fa-joget:before{content:\"\\f3b7\"}.fa-joint:before{content:\"\\f595\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-journal-whills:before{content:\"\\f66a\"}.fa-js:before{content:\"\\f3b8\"}.fa-js-square:before{content:\"\\f3b9\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-kaaba:before{content:\"\\f66b\"}.fa-kaggle:before{content:\"\\f5fa\"}.fa-key:before{content:\"\\f084\"}.fa-keybase:before{content:\"\\f4f5\"}.fa-keyboard:before{content:\"\\f11c\"}.fa-keycdn:before{content:\"\\f3ba\"}.fa-khanda:before{content:\"\\f66d\"}.fa-kickstarter:before{content:\"\\f3bb\"}.fa-kickstarter-k:before{content:\"\\f3bc\"}.fa-kiss:before{content:\"\\f596\"}.fa-kiss-beam:before{content:\"\\f597\"}.fa-kiss-wink-heart:before{content:\"\\f598\"}.fa-kiwi-bird:before{content:\"\\f535\"}.fa-korvue:before{content:\"\\f42f\"}.fa-landmark:before{content:\"\\f66f\"}.fa-language:before{content:\"\\f1ab\"}.fa-laptop:before{content:\"\\f109\"}.fa-laptop-code:before{content:\"\\f5fc\"}.fa-laptop-house:before{content:\"\\e066\"}.fa-laptop-medical:before{content:\"\\f812\"}.fa-laravel:before{content:\"\\f3bd\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-laugh:before{content:\"\\f599\"}.fa-laugh-beam:before{content:\"\\f59a\"}.fa-laugh-squint:before{content:\"\\f59b\"}.fa-laugh-wink:before{content:\"\\f59c\"}.fa-layer-group:before{content:\"\\f5fd\"}.fa-leaf:before{content:\"\\f06c\"}.fa-leanpub:before{content:\"\\f212\"}.fa-lemon:before{content:\"\\f094\"}.fa-less:before{content:\"\\f41d\"}.fa-less-than:before{content:\"\\f536\"}.fa-less-than-equal:before{content:\"\\f537\"}.fa-level-down-alt:before{content:\"\\f3be\"}.fa-level-up-alt:before{content:\"\\f3bf\"}.fa-life-ring:before{content:\"\\f1cd\"}.fa-lightbulb:before{content:\"\\f0eb\"}.fa-line:before{content:\"\\f3c0\"}.fa-link:before{content:\"\\f0c1\"}.fa-linkedin:before{content:\"\\f08c\"}.fa-linkedin-in:before{content:\"\\f0e1\"}.fa-linode:before{content:\"\\f2b8\"}.fa-linux:before{content:\"\\f17c\"}.fa-lira-sign:before{content:\"\\f195\"}.fa-list:before{content:\"\\f03a\"}.fa-list-alt:before{content:\"\\f022\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-lock:before{content:\"\\f023\"}.fa-lock-open:before{content:\"\\f3c1\"}.fa-long-arrow-alt-down:before{content:\"\\f309\"}.fa-long-arrow-alt-left:before{content:\"\\f30a\"}.fa-long-arrow-alt-right:before{content:\"\\f30b\"}.fa-long-arrow-alt-up:before{content:\"\\f30c\"}.fa-low-vision:before{content:\"\\f2a8\"}.fa-luggage-cart:before{content:\"\\f59d\"}.fa-lungs:before{content:\"\\f604\"}.fa-lungs-virus:before{content:\"\\e067\"}.fa-lyft:before{content:\"\\f3c3\"}.fa-magento:before{content:\"\\f3c4\"}.fa-magic:before{content:\"\\f0d0\"}.fa-magnet:before{content:\"\\f076\"}.fa-mail-bulk:before{content:\"\\f674\"}.fa-mailchimp:before{content:\"\\f59e\"}.fa-male:before{content:\"\\f183\"}.fa-mandalorian:before{content:\"\\f50f\"}.fa-map:before{content:\"\\f279\"}.fa-map-marked:before{content:\"\\f59f\"}.fa-map-marked-alt:before{content:\"\\f5a0\"}.fa-map-marker:before{content:\"\\f041\"}.fa-map-marker-alt:before{content:\"\\f3c5\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-markdown:before{content:\"\\f60f\"}.fa-marker:before{content:\"\\f5a1\"}.fa-mars:before{content:\"\\f222\"}.fa-mars-double:before{content:\"\\f227\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mask:before{content:\"\\f6fa\"}.fa-mastodon:before{content:\"\\f4f6\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-mdb:before{content:\"\\f8ca\"}.fa-medal:before{content:\"\\f5a2\"}.fa-medapps:before{content:\"\\f3c6\"}.fa-medium:before{content:\"\\f23a\"}.fa-medium-m:before{content:\"\\f3c7\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-medrt:before{content:\"\\f3c8\"}.fa-meetup:before{content:\"\\f2e0\"}.fa-megaport:before{content:\"\\f5a3\"}.fa-meh:before{content:\"\\f11a\"}.fa-meh-blank:before{content:\"\\f5a4\"}.fa-meh-rolling-eyes:before{content:\"\\f5a5\"}.fa-memory:before{content:\"\\f538\"}.fa-mendeley:before{content:\"\\f7b3\"}.fa-menorah:before{content:\"\\f676\"}.fa-mercury:before{content:\"\\f223\"}.fa-meteor:before{content:\"\\f753\"}.fa-microblog:before{content:\"\\e01a\"}.fa-microchip:before{content:\"\\f2db\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-alt:before{content:\"\\f3c9\"}.fa-microphone-alt-slash:before{content:\"\\f539\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-microscope:before{content:\"\\f610\"}.fa-microsoft:before{content:\"\\f3ca\"}.fa-minus:before{content:\"\\f068\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-minus-square:before{content:\"\\f146\"}.fa-mitten:before{content:\"\\f7b5\"}.fa-mix:before{content:\"\\f3cb\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-mixer:before{content:\"\\e056\"}.fa-mizuni:before{content:\"\\f3cc\"}.fa-mobile:before{content:\"\\f10b\"}.fa-mobile-alt:before{content:\"\\f3cd\"}.fa-modx:before{content:\"\\f285\"}.fa-monero:before{content:\"\\f3d0\"}.fa-money-bill:before{content:\"\\f0d6\"}.fa-money-bill-alt:before{content:\"\\f3d1\"}.fa-money-bill-wave:before{content:\"\\f53a\"}.fa-money-bill-wave-alt:before{content:\"\\f53b\"}.fa-money-check:before{content:\"\\f53c\"}.fa-money-check-alt:before{content:\"\\f53d\"}.fa-monument:before{content:\"\\f5a6\"}.fa-moon:before{content:\"\\f186\"}.fa-mortar-pestle:before{content:\"\\f5a7\"}.fa-mosque:before{content:\"\\f678\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-mountain:before{content:\"\\f6fc\"}.fa-mouse:before{content:\"\\f8cc\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-mug-hot:before{content:\"\\f7b6\"}.fa-music:before{content:\"\\f001\"}.fa-napster:before{content:\"\\f3d2\"}.fa-neos:before{content:\"\\f612\"}.fa-network-wired:before{content:\"\\f6ff\"}.fa-neuter:before{content:\"\\f22c\"}.fa-newspaper:before{content:\"\\f1ea\"}.fa-nimblr:before{content:\"\\f5a8\"}.fa-node:before{content:\"\\f419\"}.fa-node-js:before{content:\"\\f3d3\"}.fa-not-equal:before{content:\"\\f53e\"}.fa-notes-medical:before{content:\"\\f481\"}.fa-npm:before{content:\"\\f3d4\"}.fa-ns8:before{content:\"\\f3d5\"}.fa-nutritionix:before{content:\"\\f3d6\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-octopus-deploy:before{content:\"\\e082\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-oil-can:before{content:\"\\f613\"}.fa-old-republic:before{content:\"\\f510\"}.fa-om:before{content:\"\\f679\"}.fa-opencart:before{content:\"\\f23d\"}.fa-openid:before{content:\"\\f19b\"}.fa-opera:before{content:\"\\f26a\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-orcid:before{content:\"\\f8d2\"}.fa-osi:before{content:\"\\f41a\"}.fa-otter:before{content:\"\\f700\"}.fa-outdent:before{content:\"\\f03b\"}.fa-page4:before{content:\"\\f3d7\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-pager:before{content:\"\\f815\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-paint-roller:before{content:\"\\f5aa\"}.fa-palette:before{content:\"\\f53f\"}.fa-palfed:before{content:\"\\f3d8\"}.fa-pallet:before{content:\"\\f482\"}.fa-paper-plane:before{content:\"\\f1d8\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-parachute-box:before{content:\"\\f4cd\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-parking:before{content:\"\\f540\"}.fa-passport:before{content:\"\\f5ab\"}.fa-pastafarianism:before{content:\"\\f67b\"}.fa-paste:before{content:\"\\f0ea\"}.fa-patreon:before{content:\"\\f3d9\"}.fa-pause:before{content:\"\\f04c\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-paw:before{content:\"\\f1b0\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-peace:before{content:\"\\f67c\"}.fa-pen:before{content:\"\\f304\"}.fa-pen-alt:before{content:\"\\f305\"}.fa-pen-fancy:before{content:\"\\f5ac\"}.fa-pen-nib:before{content:\"\\f5ad\"}.fa-pen-square:before{content:\"\\f14b\"}.fa-pencil-alt:before{content:\"\\f303\"}.fa-pencil-ruler:before{content:\"\\f5ae\"}.fa-penny-arcade:before{content:\"\\f704\"}.fa-people-arrows:before{content:\"\\e068\"}.fa-people-carry:before{content:\"\\f4ce\"}.fa-pepper-hot:before{content:\"\\f816\"}.fa-perbyte:before{content:\"\\e083\"}.fa-percent:before{content:\"\\f295\"}.fa-percentage:before{content:\"\\f541\"}.fa-periscope:before{content:\"\\f3da\"}.fa-person-booth:before{content:\"\\f756\"}.fa-phabricator:before{content:\"\\f3db\"}.fa-phoenix-framework:before{content:\"\\f3dc\"}.fa-phoenix-squadron:before{content:\"\\f511\"}.fa-phone:before{content:\"\\f095\"}.fa-phone-alt:before{content:\"\\f879\"}.fa-phone-slash:before{content:\"\\f3dd\"}.fa-phone-square:before{content:\"\\f098\"}.fa-phone-square-alt:before{content:\"\\f87b\"}.fa-phone-volume:before{content:\"\\f2a0\"}.fa-photo-video:before{content:\"\\f87c\"}.fa-php:before{content:\"\\f457\"}.fa-pied-piper:before{content:\"\\f2ae\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-pied-piper-hat:before{content:\"\\f4e5\"}.fa-pied-piper-pp:before{content:\"\\f1a7\"}.fa-pied-piper-square:before{content:\"\\e01e\"}.fa-piggy-bank:before{content:\"\\f4d3\"}.fa-pills:before{content:\"\\f484\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-pizza-slice:before{content:\"\\f818\"}.fa-place-of-worship:before{content:\"\\f67f\"}.fa-plane:before{content:\"\\f072\"}.fa-plane-arrival:before{content:\"\\f5af\"}.fa-plane-departure:before{content:\"\\f5b0\"}.fa-plane-slash:before{content:\"\\e069\"}.fa-play:before{content:\"\\f04b\"}.fa-play-circle:before{content:\"\\f144\"}.fa-playstation:before{content:\"\\f3df\"}.fa-plug:before{content:\"\\f1e6\"}.fa-plus:before{content:\"\\f067\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-podcast:before{content:\"\\f2ce\"}.fa-poll:before{content:\"\\f681\"}.fa-poll-h:before{content:\"\\f682\"}.fa-poo:before{content:\"\\f2fe\"}.fa-poo-storm:before{content:\"\\f75a\"}.fa-poop:before{content:\"\\f619\"}.fa-portrait:before{content:\"\\f3e0\"}.fa-pound-sign:before{content:\"\\f154\"}.fa-power-off:before{content:\"\\f011\"}.fa-pray:before{content:\"\\f683\"}.fa-praying-hands:before{content:\"\\f684\"}.fa-prescription:before{content:\"\\f5b1\"}.fa-prescription-bottle:before{content:\"\\f485\"}.fa-prescription-bottle-alt:before{content:\"\\f486\"}.fa-print:before{content:\"\\f02f\"}.fa-procedures:before{content:\"\\f487\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-project-diagram:before{content:\"\\f542\"}.fa-pump-medical:before{content:\"\\e06a\"}.fa-pump-soap:before{content:\"\\e06b\"}.fa-pushed:before{content:\"\\f3e1\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-python:before{content:\"\\f3e2\"}.fa-qq:before{content:\"\\f1d6\"}.fa-qrcode:before{content:\"\\f029\"}.fa-question:before{content:\"\\f128\"}.fa-question-circle:before{content:\"\\f059\"}.fa-quidditch:before{content:\"\\f458\"}.fa-quinscape:before{content:\"\\f459\"}.fa-quora:before{content:\"\\f2c4\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-quran:before{content:\"\\f687\"}.fa-r-project:before{content:\"\\f4f7\"}.fa-radiation:before{content:\"\\f7b9\"}.fa-radiation-alt:before{content:\"\\f7ba\"}.fa-rainbow:before{content:\"\\f75b\"}.fa-random:before{content:\"\\f074\"}.fa-raspberry-pi:before{content:\"\\f7bb\"}.fa-ravelry:before{content:\"\\f2d9\"}.fa-react:before{content:\"\\f41b\"}.fa-reacteurope:before{content:\"\\f75d\"}.fa-readme:before{content:\"\\f4d5\"}.fa-rebel:before{content:\"\\f1d0\"}.fa-receipt:before{content:\"\\f543\"}.fa-record-vinyl:before{content:\"\\f8d9\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-red-river:before{content:\"\\f3e3\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-redhat:before{content:\"\\f7bc\"}.fa-redo:before{content:\"\\f01e\"}.fa-redo-alt:before{content:\"\\f2f9\"}.fa-registered:before{content:\"\\f25d\"}.fa-remove-format:before{content:\"\\f87d\"}.fa-renren:before{content:\"\\f18b\"}.fa-reply:before{content:\"\\f3e5\"}.fa-reply-all:before{content:\"\\f122\"}.fa-replyd:before{content:\"\\f3e6\"}.fa-republican:before{content:\"\\f75e\"}.fa-researchgate:before{content:\"\\f4f8\"}.fa-resolving:before{content:\"\\f3e7\"}.fa-restroom:before{content:\"\\f7bd\"}.fa-retweet:before{content:\"\\f079\"}.fa-rev:before{content:\"\\f5b2\"}.fa-ribbon:before{content:\"\\f4d6\"}.fa-ring:before{content:\"\\f70b\"}.fa-road:before{content:\"\\f018\"}.fa-robot:before{content:\"\\f544\"}.fa-rocket:before{content:\"\\f135\"}.fa-rocketchat:before{content:\"\\f3e8\"}.fa-rockrms:before{content:\"\\f3e9\"}.fa-route:before{content:\"\\f4d7\"}.fa-rss:before{content:\"\\f09e\"}.fa-rss-square:before{content:\"\\f143\"}.fa-ruble-sign:before{content:\"\\f158\"}.fa-ruler:before{content:\"\\f545\"}.fa-ruler-combined:before{content:\"\\f546\"}.fa-ruler-horizontal:before{content:\"\\f547\"}.fa-ruler-vertical:before{content:\"\\f548\"}.fa-running:before{content:\"\\f70c\"}.fa-rupee-sign:before{content:\"\\f156\"}.fa-rust:before{content:\"\\e07a\"}.fa-sad-cry:before{content:\"\\f5b3\"}.fa-sad-tear:before{content:\"\\f5b4\"}.fa-safari:before{content:\"\\f267\"}.fa-salesforce:before{content:\"\\f83b\"}.fa-sass:before{content:\"\\f41e\"}.fa-satellite:before{content:\"\\f7bf\"}.fa-satellite-dish:before{content:\"\\f7c0\"}.fa-save:before{content:\"\\f0c7\"}.fa-schlix:before{content:\"\\f3ea\"}.fa-school:before{content:\"\\f549\"}.fa-screwdriver:before{content:\"\\f54a\"}.fa-scribd:before{content:\"\\f28a\"}.fa-scroll:before{content:\"\\f70e\"}.fa-sd-card:before{content:\"\\f7c2\"}.fa-search:before{content:\"\\f002\"}.fa-search-dollar:before{content:\"\\f688\"}.fa-search-location:before{content:\"\\f689\"}.fa-search-minus:before{content:\"\\f010\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-searchengin:before{content:\"\\f3eb\"}.fa-seedling:before{content:\"\\f4d8\"}.fa-sellcast:before{content:\"\\f2da\"}.fa-sellsy:before{content:\"\\f213\"}.fa-server:before{content:\"\\f233\"}.fa-servicestack:before{content:\"\\f3ec\"}.fa-shapes:before{content:\"\\f61f\"}.fa-share:before{content:\"\\f064\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-share-square:before{content:\"\\f14d\"}.fa-shekel-sign:before{content:\"\\f20b\"}.fa-shield-alt:before{content:\"\\f3ed\"}.fa-shield-virus:before{content:\"\\e06c\"}.fa-ship:before{content:\"\\f21a\"}.fa-shipping-fast:before{content:\"\\f48b\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-shoe-prints:before{content:\"\\f54b\"}.fa-shopify:before{content:\"\\e057\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-shopware:before{content:\"\\f5b5\"}.fa-shower:before{content:\"\\f2cc\"}.fa-shuttle-van:before{content:\"\\f5b6\"}.fa-sign:before{content:\"\\f4d9\"}.fa-sign-in-alt:before{content:\"\\f2f6\"}.fa-sign-language:before{content:\"\\f2a7\"}.fa-sign-out-alt:before{content:\"\\f2f5\"}.fa-signal:before{content:\"\\f012\"}.fa-signature:before{content:\"\\f5b7\"}.fa-sim-card:before{content:\"\\f7c4\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-sink:before{content:\"\\e06d\"}.fa-sistrix:before{content:\"\\f3ee\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-sith:before{content:\"\\f512\"}.fa-skating:before{content:\"\\f7c5\"}.fa-sketch:before{content:\"\\f7c6\"}.fa-skiing:before{content:\"\\f7c9\"}.fa-skiing-nordic:before{content:\"\\f7ca\"}.fa-skull:before{content:\"\\f54c\"}.fa-skull-crossbones:before{content:\"\\f714\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-skype:before{content:\"\\f17e\"}.fa-slack:before{content:\"\\f198\"}.fa-slack-hash:before{content:\"\\f3ef\"}.fa-slash:before{content:\"\\f715\"}.fa-sleigh:before{content:\"\\f7cc\"}.fa-sliders-h:before{content:\"\\f1de\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-smile:before{content:\"\\f118\"}.fa-smile-beam:before{content:\"\\f5b8\"}.fa-smile-wink:before{content:\"\\f4da\"}.fa-smog:before{content:\"\\f75f\"}.fa-smoking:before{content:\"\\f48d\"}.fa-smoking-ban:before{content:\"\\f54d\"}.fa-sms:before{content:\"\\f7cd\"}.fa-snapchat:before{content:\"\\f2ab\"}.fa-snapchat-ghost:before{content:\"\\f2ac\"}.fa-snapchat-square:before{content:\"\\f2ad\"}.fa-snowboarding:before{content:\"\\f7ce\"}.fa-snowflake:before{content:\"\\f2dc\"}.fa-snowman:before{content:\"\\f7d0\"}.fa-snowplow:before{content:\"\\f7d2\"}.fa-soap:before{content:\"\\e06e\"}.fa-socks:before{content:\"\\f696\"}.fa-solar-panel:before{content:\"\\f5ba\"}.fa-sort:before{content:\"\\f0dc\"}.fa-sort-alpha-down:before{content:\"\\f15d\"}.fa-sort-alpha-down-alt:before{content:\"\\f881\"}.fa-sort-alpha-up:before{content:\"\\f15e\"}.fa-sort-alpha-up-alt:before{content:\"\\f882\"}.fa-sort-amount-down:before{content:\"\\f160\"}.fa-sort-amount-down-alt:before{content:\"\\f884\"}.fa-sort-amount-up:before{content:\"\\f161\"}.fa-sort-amount-up-alt:before{content:\"\\f885\"}.fa-sort-down:before{content:\"\\f0dd\"}.fa-sort-numeric-down:before{content:\"\\f162\"}.fa-sort-numeric-down-alt:before{content:\"\\f886\"}.fa-sort-numeric-up:before{content:\"\\f163\"}.fa-sort-numeric-up-alt:before{content:\"\\f887\"}.fa-sort-up:before{content:\"\\f0de\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-sourcetree:before{content:\"\\f7d3\"}.fa-spa:before{content:\"\\f5bb\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-speakap:before{content:\"\\f3f3\"}.fa-speaker-deck:before{content:\"\\f83c\"}.fa-spell-check:before{content:\"\\f891\"}.fa-spider:before{content:\"\\f717\"}.fa-spinner:before{content:\"\\f110\"}.fa-splotch:before{content:\"\\f5bc\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-spray-can:before{content:\"\\f5bd\"}.fa-square:before{content:\"\\f0c8\"}.fa-square-full:before{content:\"\\f45c\"}.fa-square-root-alt:before{content:\"\\f698\"}.fa-squarespace:before{content:\"\\f5be\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-stackpath:before{content:\"\\f842\"}.fa-stamp:before{content:\"\\f5bf\"}.fa-star:before{content:\"\\f005\"}.fa-star-and-crescent:before{content:\"\\f699\"}.fa-star-half:before{content:\"\\f089\"}.fa-star-half-alt:before{content:\"\\f5c0\"}.fa-star-of-david:before{content:\"\\f69a\"}.fa-star-of-life:before{content:\"\\f621\"}.fa-staylinked:before{content:\"\\f3f5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-steam-symbol:before{content:\"\\f3f6\"}.fa-step-backward:before{content:\"\\f048\"}.fa-step-forward:before{content:\"\\f051\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-sticker-mule:before{content:\"\\f3f7\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-stop:before{content:\"\\f04d\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stopwatch:before{content:\"\\f2f2\"}.fa-stopwatch-20:before{content:\"\\e06f\"}.fa-store:before{content:\"\\f54e\"}.fa-store-alt:before{content:\"\\f54f\"}.fa-store-alt-slash:before{content:\"\\e070\"}.fa-store-slash:before{content:\"\\e071\"}.fa-strava:before{content:\"\\f428\"}.fa-stream:before{content:\"\\f550\"}.fa-street-view:before{content:\"\\f21d\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-stripe:before{content:\"\\f429\"}.fa-stripe-s:before{content:\"\\f42a\"}.fa-stroopwafel:before{content:\"\\f551\"}.fa-studiovinari:before{content:\"\\f3f8\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-subscript:before{content:\"\\f12c\"}.fa-subway:before{content:\"\\f239\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-suitcase-rolling:before{content:\"\\f5c1\"}.fa-sun:before{content:\"\\f185\"}.fa-superpowers:before{content:\"\\f2dd\"}.fa-superscript:before{content:\"\\f12b\"}.fa-supple:before{content:\"\\f3f9\"}.fa-surprise:before{content:\"\\f5c2\"}.fa-suse:before{content:\"\\f7d6\"}.fa-swatchbook:before{content:\"\\f5c3\"}.fa-swift:before{content:\"\\f8e1\"}.fa-swimmer:before{content:\"\\f5c4\"}.fa-swimming-pool:before{content:\"\\f5c5\"}.fa-symfony:before{content:\"\\f83d\"}.fa-synagogue:before{content:\"\\f69b\"}.fa-sync:before{content:\"\\f021\"}.fa-sync-alt:before{content:\"\\f2f1\"}.fa-syringe:before{content:\"\\f48e\"}.fa-table:before{content:\"\\f0ce\"}.fa-table-tennis:before{content:\"\\f45d\"}.fa-tablet:before{content:\"\\f10a\"}.fa-tablet-alt:before{content:\"\\f3fa\"}.fa-tablets:before{content:\"\\f490\"}.fa-tachometer-alt:before{content:\"\\f3fd\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-tape:before{content:\"\\f4db\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-taxi:before{content:\"\\f1ba\"}.fa-teamspeak:before{content:\"\\f4f9\"}.fa-teeth:before{content:\"\\f62e\"}.fa-teeth-open:before{content:\"\\f62f\"}.fa-telegram:before{content:\"\\f2c6\"}.fa-telegram-plane:before{content:\"\\f3fe\"}.fa-temperature-high:before{content:\"\\f769\"}.fa-temperature-low:before{content:\"\\f76b\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-tenge:before{content:\"\\f7d7\"}.fa-terminal:before{content:\"\\f120\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-th:before{content:\"\\f00a\"}.fa-th-large:before{content:\"\\f009\"}.fa-th-list:before{content:\"\\f00b\"}.fa-the-red-yeti:before{content:\"\\f69d\"}.fa-theater-masks:before{content:\"\\f630\"}.fa-themeco:before{content:\"\\f5c6\"}.fa-themeisle:before{content:\"\\f2b2\"}.fa-thermometer:before{content:\"\\f491\"}.fa-thermometer-empty:before{content:\"\\f2cb\"}.fa-thermometer-full:before{content:\"\\f2c7\"}.fa-thermometer-half:before{content:\"\\f2c9\"}.fa-thermometer-quarter:before{content:\"\\f2ca\"}.fa-thermometer-three-quarters:before{content:\"\\f2c8\"}.fa-think-peaks:before{content:\"\\f731\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbtack:before{content:\"\\f08d\"}.fa-ticket-alt:before{content:\"\\f3ff\"}.fa-tiktok:before{content:\"\\e07b\"}.fa-times:before{content:\"\\f00d\"}.fa-times-circle:before{content:\"\\f057\"}.fa-tint:before{content:\"\\f043\"}.fa-tint-slash:before{content:\"\\f5c7\"}.fa-tired:before{content:\"\\f5c8\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-toilet:before{content:\"\\f7d8\"}.fa-toilet-paper:before{content:\"\\f71e\"}.fa-toilet-paper-slash:before{content:\"\\e072\"}.fa-toolbox:before{content:\"\\f552\"}.fa-tools:before{content:\"\\f7d9\"}.fa-tooth:before{content:\"\\f5c9\"}.fa-torah:before{content:\"\\f6a0\"}.fa-torii-gate:before{content:\"\\f6a1\"}.fa-tractor:before{content:\"\\f722\"}.fa-trade-federation:before{content:\"\\f513\"}.fa-trademark:before{content:\"\\f25c\"}.fa-traffic-light:before{content:\"\\f637\"}.fa-trailer:before{content:\"\\e041\"}.fa-train:before{content:\"\\f238\"}.fa-tram:before{content:\"\\f7da\"}.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-trash:before{content:\"\\f1f8\"}.fa-trash-alt:before{content:\"\\f2ed\"}.fa-trash-restore:before{content:\"\\f829\"}.fa-trash-restore-alt:before{content:\"\\f82a\"}.fa-tree:before{content:\"\\f1bb\"}.fa-trello:before{content:\"\\f181\"}.fa-tripadvisor:before{content:\"\\f262\"}.fa-trophy:before{content:\"\\f091\"}.fa-truck:before{content:\"\\f0d1\"}.fa-truck-loading:before{content:\"\\f4de\"}.fa-truck-monster:before{content:\"\\f63b\"}.fa-truck-moving:before{content:\"\\f4df\"}.fa-truck-pickup:before{content:\"\\f63c\"}.fa-tshirt:before{content:\"\\f553\"}.fa-tty:before{content:\"\\f1e4\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-tv:before{content:\"\\f26c\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-twitter:before{content:\"\\f099\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-typo3:before{content:\"\\f42b\"}.fa-uber:before{content:\"\\f402\"}.fa-ubuntu:before{content:\"\\f7df\"}.fa-uikit:before{content:\"\\f403\"}.fa-umbraco:before{content:\"\\f8e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-umbrella-beach:before{content:\"\\f5ca\"}.fa-uncharted:before{content:\"\\e084\"}.fa-underline:before{content:\"\\f0cd\"}.fa-undo:before{content:\"\\f0e2\"}.fa-undo-alt:before{content:\"\\f2ea\"}.fa-uniregistry:before{content:\"\\f404\"}.fa-unity:before{content:\"\\e049\"}.fa-universal-access:before{content:\"\\f29a\"}.fa-university:before{content:\"\\f19c\"}.fa-unlink:before{content:\"\\f127\"}.fa-unlock:before{content:\"\\f09c\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-unsplash:before{content:\"\\e07c\"}.fa-untappd:before{content:\"\\f405\"}.fa-upload:before{content:\"\\f093\"}.fa-ups:before{content:\"\\f7e0\"}.fa-usb:before{content:\"\\f287\"}.fa-user:before{content:\"\\f007\"}.fa-user-alt:before{content:\"\\f406\"}.fa-user-alt-slash:before{content:\"\\f4fa\"}.fa-user-astronaut:before{content:\"\\f4fb\"}.fa-user-check:before{content:\"\\f4fc\"}.fa-user-circle:before{content:\"\\f2bd\"}.fa-user-clock:before{content:\"\\f4fd\"}.fa-user-cog:before{content:\"\\f4fe\"}.fa-user-edit:before{content:\"\\f4ff\"}.fa-user-friends:before{content:\"\\f500\"}.fa-user-graduate:before{content:\"\\f501\"}.fa-user-injured:before{content:\"\\f728\"}.fa-user-lock:before{content:\"\\f502\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-user-minus:before{content:\"\\f503\"}.fa-user-ninja:before{content:\"\\f504\"}.fa-user-nurse:before{content:\"\\f82f\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-user-shield:before{content:\"\\f505\"}.fa-user-slash:before{content:\"\\f506\"}.fa-user-tag:before{content:\"\\f507\"}.fa-user-tie:before{content:\"\\f508\"}.fa-user-times:before{content:\"\\f235\"}.fa-users:before{content:\"\\f0c0\"}.fa-users-cog:before{content:\"\\f509\"}.fa-users-slash:before{content:\"\\e073\"}.fa-usps:before{content:\"\\f7e1\"}.fa-ussunnah:before{content:\"\\f407\"}.fa-utensil-spoon:before{content:\"\\f2e5\"}.fa-utensils:before{content:\"\\f2e7\"}.fa-vaadin:before{content:\"\\f408\"}.fa-vector-square:before{content:\"\\f5cb\"}.fa-venus:before{content:\"\\f221\"}.fa-venus-double:before{content:\"\\f226\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-vest:before{content:\"\\e085\"}.fa-vest-patches:before{content:\"\\e086\"}.fa-viacoin:before{content:\"\\f237\"}.fa-viadeo:before{content:\"\\f2a9\"}.fa-viadeo-square:before{content:\"\\f2aa\"}.fa-vial:before{content:\"\\f492\"}.fa-vials:before{content:\"\\f493\"}.fa-viber:before{content:\"\\f409\"}.fa-video:before{content:\"\\f03d\"}.fa-video-slash:before{content:\"\\f4e2\"}.fa-vihara:before{content:\"\\f6a7\"}.fa-vimeo:before{content:\"\\f40a\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-vimeo-v:before{content:\"\\f27d\"}.fa-vine:before{content:\"\\f1ca\"}.fa-virus:before{content:\"\\e074\"}.fa-virus-slash:before{content:\"\\e075\"}.fa-viruses:before{content:\"\\e076\"}.fa-vk:before{content:\"\\f189\"}.fa-vnv:before{content:\"\\f40b\"}.fa-voicemail:before{content:\"\\f897\"}.fa-volleyball-ball:before{content:\"\\f45f\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-mute:before{content:\"\\f6a9\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-up:before{content:\"\\f028\"}.fa-vote-yea:before{content:\"\\f772\"}.fa-vr-cardboard:before{content:\"\\f729\"}.fa-vuejs:before{content:\"\\f41f\"}.fa-walking:before{content:\"\\f554\"}.fa-wallet:before{content:\"\\f555\"}.fa-warehouse:before{content:\"\\f494\"}.fa-watchman-monitoring:before{content:\"\\e087\"}.fa-water:before{content:\"\\f773\"}.fa-wave-square:before{content:\"\\f83e\"}.fa-waze:before{content:\"\\f83f\"}.fa-weebly:before{content:\"\\f5cc\"}.fa-weibo:before{content:\"\\f18a\"}.fa-weight:before{content:\"\\f496\"}.fa-weight-hanging:before{content:\"\\f5cd\"}.fa-weixin:before{content:\"\\f1d7\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-whatsapp-square:before{content:\"\\f40c\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-whmcs:before{content:\"\\f40d\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-wind:before{content:\"\\f72e\"}.fa-window-close:before{content:\"\\f410\"}.fa-window-maximize:before{content:\"\\f2d0\"}.fa-window-minimize:before{content:\"\\f2d1\"}.fa-window-restore:before{content:\"\\f2d2\"}.fa-windows:before{content:\"\\f17a\"}.fa-wine-bottle:before{content:\"\\f72f\"}.fa-wine-glass:before{content:\"\\f4e3\"}.fa-wine-glass-alt:before{content:\"\\f5ce\"}.fa-wix:before{content:\"\\f5cf\"}.fa-wizards-of-the-coast:before{content:\"\\f730\"}.fa-wodu:before{content:\"\\e088\"}.fa-wolf-pack-battalion:before{content:\"\\f514\"}.fa-won-sign:before{content:\"\\f159\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-wordpress-simple:before{content:\"\\f411\"}.fa-wpbeginner:before{content:\"\\f297\"}.fa-wpexplorer:before{content:\"\\f2de\"}.fa-wpforms:before{content:\"\\f298\"}.fa-wpressr:before{content:\"\\f3e4\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-x-ray:before{content:\"\\f497\"}.fa-xbox:before{content:\"\\f412\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-y-combinator:before{content:\"\\f23b\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-yammer:before{content:\"\\f840\"}.fa-yandex:before{content:\"\\f413\"}.fa-yandex-international:before{content:\"\\f414\"}.fa-yarn:before{content:\"\\f7e3\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-yen-sign:before{content:\"\\f157\"}.fa-yin-yang:before{content:\"\\f6ad\"}.fa-yoast:before{content:\"\\f2b1\"}.fa-youtube:before{content:\"\\f167\"}.fa-youtube-square:before{content:\"\\f431\"}.fa-zhihu:before{content:\"\\f63f\"}.sr-only{border:0;clip:rect(0, 0, 0, 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}@font-face{font-family:'Font Awesome 5 Brands';font-style:normal;font-weight:400;font-display:block;src:url(\"../webfonts/fa-brands-400.eot\");src:url(\"../webfonts/fa-brands-400.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-brands-400.woff2\") format(\"woff2\"), url(\"../webfonts/fa-brands-400.woff\") format(\"woff\"), url(\"../webfonts/fa-brands-400.ttf\") format(\"truetype\"), url(\"../webfonts/fa-brands-400.svg#fontawesome\") format(\"svg\")}.fab{font-family:'Font Awesome 5 Brands';font-weight:400}@font-face{font-family:'Font Awesome 5 Free';font-style:normal;font-weight:400;font-display:block;src:url(\"../webfonts/fa-regular-400.eot\");src:url(\"../webfonts/fa-regular-400.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-regular-400.woff2\") format(\"woff2\"), url(\"../webfonts/fa-regular-400.woff\") format(\"woff\"), url(\"../webfonts/fa-regular-400.ttf\") format(\"truetype\"), url(\"../webfonts/fa-regular-400.svg#fontawesome\") format(\"svg\")}.far{font-family:'Font Awesome 5 Free';font-weight:400}@font-face{font-family:'Font Awesome 5 Free';font-style:normal;font-weight:900;font-display:block;src:url(\"../webfonts/fa-solid-900.eot\");src:url(\"../webfonts/fa-solid-900.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-solid-900.woff2\") format(\"woff2\"), url(\"../webfonts/fa-solid-900.woff\") format(\"woff\"), url(\"../webfonts/fa-solid-900.ttf\") format(\"truetype\"), url(\"../webfonts/fa-solid-900.svg#fontawesome\") format(\"svg\")}.fa,.fas{font-family:'Font Awesome 5 Free';font-weight:900}";

class MgeBarchart {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.width = 350;
    this.height = 350;
    this.data = "[]";
    // ---------------- Model
    this.model = model();
    this.lcv = libCava();
    this._sort = this.lcv.sortIris();
    this._subGraph = this.lcv.subGraph();
    
    this._irisPanel = null, // represents the panel associated with the graph
      this._sortByText = true,
      this._innerRadius = 0, // (calculated) radius of the circle where the centroid is inserted
      this._outerRadius = 0,
      this._maxHeightBar = 0, // (calculated) distance occupied by the bars - Change causes change in the maximum number of bars of the Iris - Original 40
      this._grpHistogram = null, // Group representing IRIS
      this._abscissa = null,
      this._ordinate = null,
      this._ordinateTitle = null,
      this._abscissaTitle = null,
      this._abscissaBottomMargin = 70,
      this._abscissaRightMargin = 40,
      this._yAxis = null,
      this._xAxis = null,
      this._x = null,
      this._y = null,
      this._bins = null,
      this._documentType = null,
      this._orderedDocumentArray = null,
      this._years = null,
      // Used only when the amount of elements in this.data is less than or equal to "dataVis"
      this._vOrder = null, // Indirect ordering vector
      this._orders = {
        publications: [0, 1, 2, 3],
        journals: [1, 2, 3, 0],
        books: [2, 3, 0, 1],
        proceedings: [3, 0, 1, 2],
      },
      this._focusArea = {
        widthBar: 0,
        angleBar: 0.0,
        marginBar: 1,
        angleSector: 0.0,
        indexCenter: 0,
        numBars: 7 // Number of bars in focus (best odd number)
      },
      //_updateIndexCenter = true,   // Indicates that IndexCenter should be updated
      this._fishEyeArea = {
        geometry: [{ width: 0.0, angle: 0.0 }],
        marginBar: 1,
        numBars: 0,
        angleSector: 0.0 // (calculated) Sum of the angle of all bars forming the fish eye area
      },
      this._minArea = {
        widthBar: 0,
        angleBar: 0.0,
        marginBar: 1,
        numBars: 0,
        angleSector: 0.0 // (calculated)
      },
      this._hiddenArea = {
        widthBar: 0,
        angleBar: 0.0,
        numBars: 1,
        angleSector: 0.0 // (calculated) Sector angle occupied by hidden area
      },
      this._cfgIndexAttr = {
        titleCentroid: 0,
        titleDegree: "co-authors",
        textBar: 0 // Text that will be printed after the bars
      },
      this._nbOfTypesDoc = 4, // number of types of documents in the base
      this._colorsBars = ["#1f77b4", "#2ca02c", "#d62728", "#ff7d0e"]; // colors for the different types
  }
  async setBox(_) {
    if (!arguments.length)
      return this.model.box;
    this.model.box = _;
  }
  ;
  async getBox(_) {
    return this.model.box;
  }
  ;
  //---------------------
  async setpInnerRadius(_) {
    if (!arguments.length)
      return this.model.pInnerRadius;
    this.model.pInnerRadius = _;
  }
  ;
  //---------------------
  async setpOuterRadius(_) {
    if (!arguments.length)
      return this.model.pOuterRadius;
    this.model.pOuterRadius = _;
  }
  ;
  //---------------------
  async setpMaxHeightBar(_) {
    if (!arguments.length)
      return this.model.pMaxHeightBar;
    this.model.pMaxHeightBar = _;
  }
  ;
  //---------------------
  // This function is required in all techniques
  // It is called internally in conectChart
  async setPanel(_) {
    if (!arguments.length)
      return this._irisPanel;
    this._irisPanel = _;
  }
  ;
  //---------------------
  async setData(_) {
    if (!arguments.length)
      return this.model.data;
    this.model.data = this._subGraph.allPapersList(_, state._data);
    this._documentType = new Set([]);
    var yearTemp = [];
    for (let doc of this.model.data.root.data.documents) {
      this._documentType.add(doc.type);
      yearTemp.push(doc.date);
    }
    // Configure to sort node names
    this._sort.inic(this.model.data.children.labelTitle.length, this.model.data.children.valueTitle.length)
      .data(this.model.data.children.data);
    this._sort.exec(this._cfgIndexAttr.textBar);
    this._vOrder = this._sort.getVetOrder();
    yearTemp.sort();
    this._years = new Set(yearTemp);
    // _irisPanel.update();
    // setupPrimaryVersion();
  }
  ;
  async setConstructAbscissa() {
  }
  async setOrdinate() {
  }
  async setConstructBars() {
  }
  //---------------------
  // Configure the data that will be printed in the centroid and the text of the bar (Label only)
  async setConfigCentroid(titulo, tituloGrau, textoBarra) {
    this._cfgIndexAttr.titleCentroid = titulo;
    this._cfgIndexAttr.titleDegree = tituloGrau;
    this._cfgIndexAttr.textBar = textoBarra;
  }
  ;
  //---------------------
  async dataVisToNode(index) {
    return this.model.data.children.data[index];
  }
  ;
  async getSourceObject() {
    return this.model.data.root.data;
  }
  ;
  //---------------------
  async setIndexAttrBar(_) {
    if (!arguments.length)
      return this.model.indexAttBar + 1000;
    this.model.indexAttBar = _ - 1000;
  }
  ;
  async getVOrder() {
    return this._vOrder;
  }
  ;
  //======== Actions Functions
  async acSortExecText() {
    this._sortByText = true;
    this._sort.exec(this._cfgIndexAttr.textBar);
    this._vOrder = this._sort.getVetOrder();
    this.model.redraw += 1;
  }
  ;
  //---------------------
  async acSortExecAttribute() {
    this._sortByText = false;
    this._sort.exec(this.model.indexAttBar + 1000);
    this._vOrder = this._sort.getVetOrder();
    this.model.redraw += 1;
  }
  ;
  async addHistogramChart(idDiv, divTag) {
    // ---------------- Geometric attributes of the graph
    this.model.margin = { top: 2, right: 2, bottom: 2, left: 2 };
    this.model.box = { width: this.width, height: this.height };
    this.model.pInnerRadius = 0.13; // Percentage relative to graph width for _innerRadius calculation
    this.model.pOuterRadius = 0.57; // Percentage relative to graph width for _OuterRadius calculation
    this.model.pMaxHeightBar = 0.15; // Percentage relative to graph width for _MaxHeightBar calculation
    this.model.pFocusWidthBar = 0.0275; // Percentage relative to graph width for calculation of _focusArea.widthBar
    this.model.pMinWidthBar = 0.01; // Percentage relative to graph width for calculation of _minArea.widthBar Original 4
    this.model.indexAttBar = 0; // Index of the attribute that will be plotted in the toolbar
    this.model.redraw = 0;
    // ---------------- Initialization Actions
    let _svg = divTag.append("svg"), // Create dimensionless svg
    _grpChart = _svg.append("g"); // Does not exist in the original Iris
    // Add zoom event
    let _zoomListener = zoom().on("zoom", _chartZoom);
    _zoomListener.scaleExtent([0.9, 1.1]);
    _svg.call(_zoomListener);
    let _helpContainer = divTag.append("div")
      .attr("class", "helpContainer")
      .on("mouseover", _openToolTip)
      .on("mouseout", _closeToolTip);
    _helpContainer.append("i")
      .attr("class", "fas fa-info-circle")
      .style("font-size", "24px");
    // .text("&#xf05a")
    // .style("font-family" , "FontAwesome");
    let _helpTooltip = divTag.append("div")
      .attr("class", "helpTooltip")
      .attr("style", "width:40%;height:80px")
      .style("display", "none");
    this._grpHistogram = _grpChart.append("g").attr("class", "HistogramChart").attr("transform", "translate(30,20)");
    const dataTestResearch = [{ year: '2007', qtResearch: "6", qtPublication: "5" }, { year: '2008', qtResearch: "1", qtPublication: "7" }, { year: '2009', qtResearch: "2", qtPublication: "3" }];
    //_______________________________
    //===================================================
    this.model.when(["box", "margin"], (box, margin) => {
      this.model.widthChart = box.width - margin.left - margin.right;
      this.model.heightChart = box.height - margin.top - margin.bottom;
    });
    this.model.when("box", function (box) {
      _svg.attr("width", box.width).attr("height", box.height);
    });
    //---------------------
    this.model.when("margin", function (margin) {
      _grpChart.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    });
    //---------------------
    this.model.when(["widthChart", "pInnerRadius"], (widthChart, pInnerRadius) => {
      this._innerRadius = Math.floor(widthChart * pInnerRadius);
    });
    //---------------------
    this.model.when(["widthChart", "pOuterRadius"], (widthChart, pOuterRadius) => {
      this._outerRadius = Math.floor(widthChart * pOuterRadius);
    });
    //---------------------
    this.model.when(["data", "widthChart", "indexAttBar", "pMaxHeightBar"], (data, widthChart, indexAttBar, pMaxHeightBar) => {
      let maxValue = 150;
      this._maxHeightBar = Math.floor(widthChart * pMaxHeightBar);
      this.model.barScale = linear().range([0, this._maxHeightBar]).domain([0, maxValue]);
    });
    //---------------------
    this.model.when(["widthChart", "pFocusWidthBar"], (widthChart, pFocusWidthBar) => {
      this._focusArea.widthBar = Math.floor(widthChart * pFocusWidthBar);
      this._hiddenArea.widthBar = this._focusArea.widthBar;
    });
    //---------------------
    this.model.when(["widthChart", "pMinWidthBar"], (widthChart, pMinWidthBar) => {
      this._minArea.widthBar = Math.floor(widthChart * pMinWidthBar);
      if (this._minArea.widthBar === 0)
        this._minArea.widthBar = 1;
    });
    //---------------------
    this.model.when(["data", "widthChart", "heightChart", "barScale", "pInnerRadius", "pOuterRadius", "redraw"], (data, widthChart, heightChart) => {
      setupPrimaryVersion();
      // Update abscissa
      this._x.rangeRound([0, this.model.box.width * 0.80 - this._abscissaRightMargin]);
      this._xAxis.scale(this._x);
      this._abscissa.attr("transform", "translate(0," + `${this.model.box.height - this._abscissaBottomMargin}` + ")")
        .call(this._xAxis);
      // Update ordinate
      this._y.domain([0, this.model.data.root.data.documents.length]);
      this._y.range([`${this.model.box.height - this._abscissaBottomMargin}`, 0]);
      this._yAxis.scale(this._y);
      this._ordinate.call(this._yAxis);
      constructChartBars();
      this._abscissaTitle.attr("transform", "translate(40," + `${this.model.box.height - 40}` + ")");
      for (var labelIndex of this.model.data.root.valueTitle) {
      }
    } // End
    );
    var setupPrimaryVersion = () => {
      this._x = band()
        .domain(Array.from(this._years)) // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })
        .range([0, this.model.box.width]);
      this._xAxis = axisBottom()
        .scale(this._x);
      // Y axis: 
      this._y = linear();
      this._yAxis = axisLeft()
        .scale(this._y);
      this._abscissaTitle = this._grpHistogram.append("text")
        .attr("y", 1)
        .attr("dy", ".71em")
        .text("Publication Year");
      this._ordinateTitle = _helpTooltip.append("svg")
        .attr("class", "HC-legend")
        .attr("y", 1)
        .attr("dy", ".71em");
      this._ordinate = this._grpHistogram.append("g")
        .attr("class", "HC-ordina")
        .style("fill", "none")
        .style("stroke", "black")
        .style("shape-rendering", "crispEdges")
        .call(this._yAxis);
      this._abscissa = this._grpHistogram.append("g")
        .attr("transform", "translate(0," + this.model.box.height + ")")
        .attr("class", "HC-abscissa")
        .style("fill", "none")
        .style("stroke", "black")
        .style("shape-rendering", "crispEdges")
        .call(this._xAxis);
    };
    var constructChartBars = () => {
      this._grpHistogram.selectAll(".HC-grpBar").remove();
      for (var value of dataTestResearch) {
      }
      // Soit par année, [{year:"", documents : {type:"..."}}, {year:""...}]
      // Soit construire une nouvelle structure par type en fonction d'une année passée en paramétre
      let _grpBars = this._grpHistogram.selectAll(".HC-grpBar")
        .data(Array.from(this._years))
        .enter()
        .append("g")
        .attr("x", 1)
        .attr("class", "HC-grpBar")
        .attr("transform", (d) => { return "translate(0,0)"; })
        .attr("width", (d) => { return this._x.bandwidth() - 0.5; })
        .attr("height", (d) => { return (this.model.box.height - this._abscissaBottomMargin); });
      let index = 0;
      this._ordinateTitle.selectAll("*").remove();
      for (var type of this._documentType) {
        this._orderedDocumentArray = getDocumentNumberByTypePerYear(type);
        // console.log(_x.bandwidth());
        _grpBars.append("rect")
          .attr("class", "HC-bars")
          .attr("x", 1)
          .attr("transform", (d) => { return "translate(" + `${this._x(d) + (this._x.bandwidth() / this._documentType.size) * index}` + "," + this._y(this._orderedDocumentArray[d].length) + ")"; })
          .attr("width", (d) => { return (this._x.bandwidth() / this._documentType.size) - 0.5; })
          .attr("height", (d) => { return (this.model.box.height - this._abscissaBottomMargin) - this._y(this._orderedDocumentArray[d].length); })
          .style("fill", this._colorsBars[_getTheIndex(type)])
          .append("title")
          .text((d) => type + " : " + this._orderedDocumentArray[d].length);
        this._ordinateTitle
          .append("rect")
          .attr("width", 10)
          .attr("height", 10)
          .style("fill", this._colorsBars[_getTheIndex(type)])
          .attr("transform", (d) => "translate(10," + `${20 * index + 10}` + ")");
        this._ordinateTitle.append("text")
          .attr("transform", (d) => "translate(30," + `${20 * index + 10}` + ")")
          .attr("y", "10")
          .text(type)
          .append("title")
          .text(type);
        index++;
      }
    };
    var getDocumentNumberByTypePerYear = (type) => {
      let orderedDocumentArray = [];
      for (let year of this._years) {
        orderedDocumentArray[year] = [];
        for (let doc of this.model.data.root.data.documents) {
          if (type === doc.type && year === doc.date) {
            orderedDocumentArray[year].push(doc);
          }
        }
      }
      return orderedDocumentArray;
    };
    function _openToolTip() {
      _helpTooltip.style("display", "block");
    }
    function _closeToolTip() {
      _helpTooltip.style("display", "none");
    }
    /**
     *
     * _getTheRightOrder
     *
     * Returns the index for the color
     *
     * @param type
     * @returns number
     * @private
     */
    function _getTheIndex(type) {
      switch (type) {
        case "publications":
          return 0;
        case "conference paper":
          return 1;
        case "report":
          return 2;
        case "article":
          return 3;
      }
    }
    /**
     * Zoom event
     */
    function _chartZoom(event) {
      console.log(_zoomListener.scale());
      _zoomListener.scaleExtent([0.9, 1.1]);
      _grpChart.attr("transform", event.transform);
    }
    //--------------------------------- Public functions
    // console.log(this.model.data);
  }
  buildChart(idDiv, svg) {
    this.addHistogramChart(idDiv, svg);
    // console.log(this._chart);
    // this._chart().data(this.chartData);
  }
  componentWillLoad() {
    this.setBox(this.model.box);
    this.setData(this.chartData);
  }
  componentDidLoad() {
    let svg = select(this.element.querySelectorAll(".histogram")[0])
      .attr("width", this.width)
      .attr("height", this.height);
    this.buildChart("histogram", svg);
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "histogram" })));
  }
  get element() { return getElement(this); }
  static get style() { return mgeBarchartCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "mge-barchart",
    "$members$": {
      "width": [2],
      "height": [2],
      "data": [1],
      "setBox": [64],
      "getBox": [64],
      "setpInnerRadius": [64],
      "setpOuterRadius": [64],
      "setpMaxHeightBar": [64],
      "setPanel": [64],
      "setData": [64],
      "setConstructAbscissa": [64],
      "setOrdinate": [64],
      "setConstructBars": [64],
      "setConfigCentroid": [64],
      "dataVisToNode": [64],
      "getSourceObject": [64],
      "setIndexAttrBar": [64],
      "getVOrder": [64],
      "acSortExecText": [64],
      "acSortExecAttribute": [64],
      "addHistogramChart": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const mgeClustervisCss = ":host{display:block}.CV-Inner{stroke:blue;stroke-width:0.5;fill:none}.CV-Outer{stroke:green;stroke-width:0.5;fill:none}.CV-grpRings circle{stroke:gray;stroke-width:0.5;fill:none}.CV-grpBars line{stroke:black;stroke-width:0.5}.CV-grpBars text{stroke:none;fill:black}.CV-grpBars{fill:#993300}.CV-grpLinks{stroke:steelblue;stroke-opacity:.3;fill:none}.CV-grpLinks2{stroke:red;stroke-opacity:1;fill:none}.CV-nodeHL{fill:green;stroke:black;stroke-width:1.5}.CV-linkHL{stroke:red;stroke-opacity:1;stroke-width:1.5}.DS-popup{position:absolute;left:0;top:0;background-color:#F0F0F0;width:72px;border:1px #ccc solid;border-radius:4px;box-shadow:#333 2px 2px 4px;padding:3px;z-index:1000;font-family:sans-serif;font-size:10px;font-weight:bold}.small-size{}.medium-size{}.big-size{}.DS-popup div{padding:3px 5px 3px 5px}.DS-popup div:hover{background-color:#FFF}";

class MgeClustervis {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.width = 350;
    this.height = 350;
    this.data = "[]";
    this.ATN_ShortName = 0; // ATN: Node attribute
    this.ATN_AuthorName = 1;
    this.ATN_Category = 2;
    this.ATN_LinhaPesq = 3;
    this.ATN_Area = 4;
    this.ATN_QtLinhaPesq = 1001;
    this.ATN_QtPublicacoes = 1003;
    this.ATN_QtJournals = 1004;
    this.ATN_QtBooks = 1005;
    this.ATN_QtProceedings = 1006;
    this._clusterVisPanel = null; // Represents the panel associated with the graphic
    this._xClusterCenter = 0;
    this._yClusterCenter = 0;
    this._innerRadius = 0; // (calculated) Internal circle radius where the graph is drawn
    this._outerRadius = 0;
    this._grpCluster = null; // Group representing ClusterVis
    this._grpRings = null; // Selection that contains all groups that store the rings
    this._grpBars = null;
    this._grpLinks = null;
    this._links = null; // Selection that contains the links
    this._sameScale = false; // Indicates that the same scale should be used for all bars
    this._vRings = []; // List with the data of the rings:
    // { indexAttr, typeAttr ("L"-label, "V"-value), pHeight (percentage of _widthAllFaixas, maxValue (maximum value of the data for the ring }
    this._barsArea = {
      widthBar: 0,
      angleBar: 0.0,
      startSector: 0,
      marginBar: 1,
      pMarginBar: 0.0033,
      maxBars: 0,
      numBars: 0 //  Number of bars in the clusterVis
    };
    this._dataLinks = {
      heightTree: 2,
      degreeTree: 2,
      tree: null,
      vBundleLinks: null,
      tension: 0.85,
      bundle: curveBundle // Beam generator
    };
    this._indexAttrSort = 0; // Index of the attribute used for sort (0-first labels[] 1000-first values[])
    // Vector of colors with 20 elements inverted (da d3)
    this._vCores20Inv = ["#17becf", "#bcbd22", "#7f7f7f", "#e377c2", "#8c564b", "#9467bd", "#9edae5", "#dbdb8d", "#c7c7c7", "#f7b6d2",
      "#c49c94", "#c5b0d5", "#ff9896", "#d62728", "#98df8a", "#2ca02c", "#ffbb78", "#ff7f0e", "#aec7e8", "#1f77b4"];
    this._vOrder = null; // Indirect ordering vector
    this._vAngle = null; // Vector that contains the angular measurement of each bar. Calculated at _calcGeometry
    this._grpBarsRotScale = ordinal(); // Scale used to set the angle of rotation of each bar
    this._ringScale = linear().domain([0, 100]);
    this._colorScale = ordinal(schemeCategory10);
    // ---------------- Model
    this.model = model();
    this.lcv = libCava();
    this._subGraph = this.lcv.subGraph();
    this._sort = this.lcv.sortIris(); // Creates sorting function
    
  }
  async addClusterChart(idDiv, divTag) {
    this.model.margin = { top: 30, right: 40, bottom: 30, left: 40 };
    this.model.box = { width: this.width, height: this.height };
    this.model.pInnerRadius = 0.20; // Percentage of the width of the graph for calculating the _innerRadius
    this.model.pOuterRadius = 0.47; // Percentage of the width of the graph for calculating the _OuterRadius
    this.model.pWidthBar = 0.0275; // Percentage relative to the width of the graph for calculating the width of the bars
    this.model.redraw = 0; // When changed perform a redraw
    let _svg = divTag.append("svg"), //Create dimensionless svg
    _grpChart = _svg.append("g"); // Does not exist in the original Irisv
    this._drawLine = radialLine().curve(curveBundle.beta(0.85)) // Generator of splines that makes up the edges
      .radius(function (d) { return d.data.y; })
      .angle(function (d) { return d.data.x / 180 * Math.PI; });
    // Add zoom event
    let _zoomListener = zoom().on("zoom", _chartZoom);
    _zoomListener.scaleExtent([0.9, 1.1]);
    _svg.call(_zoomListener);
    this._grpCluster = _grpChart.append("g").attr("class", "ClusterVisChart");
    this._grpCluster.append("circle").attr("class", "CV-Inner");
    //===================================================
    this.model.when(["box", "margin"], (box, margin) => {
      this.model.widthChart = box.width - margin.left - margin.right;
      this.model.heightChart = box.height - margin.top - margin.bottom;
    });
    this.model.when("box", function (box) {
      _svg.attr("width", box.width).attr("height", box.height);
    });
    //---------------------
    this.model.when("margin", function (margin) {
      _grpChart.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    });
    //---------------------
    this.model.when(["widthChart", "pInnerRadius"], (widthChart, pInnerRadius) => {
      this._innerRadius = Math.floor(widthChart * pInnerRadius);
      this._grpCluster.select(".CV-Inner").attr("r", this._innerRadius);
      this._ringScale.range([this._innerRadius, this._outerRadius]);
      this.model.redraw += 1; // To force the redesign
    });
    //---------------------
    this.model.when(["widthChart", "pOuterRadius"], (widthChart, pOuterRadius) => {
      this._outerRadius = Math.floor(widthChart * pOuterRadius);
      this._ringScale.range([this._innerRadius, this._outerRadius]);
      this.model.redraw += 1; // To force the redesign
    });
    //---------------------
    this.model.when(["widthChart", "pWidthBar"], (widthChart, pWidthBar) => {
      this._barsArea.widthBar = widthChart * pWidthBar;
      this._barsArea.marginBar = widthChart * this._barsArea.pMarginBar;
    });
    //---------------------
    this.model.when(["data", "widthChart", "heightChart", "redraw"], (data, widthChart, heightChart) => {
      this._xClusterCenter = Math.floor(widthChart / 2);
      this._yClusterCenter = Math.floor(heightChart / 2);
      this._grpCluster.attr("transform", "translate(" + this._xClusterCenter + "," + this._yClusterCenter + ")");
      this._calcGeometry(data);
      this._grpBarsRotScale.range(this._vAngle).domain(this._vOrder);
      this._calcCoordinates(data.nodes.dataNodes);
      _appendRings();
      _appendBars(data);
      _appendLinks();
    });
    var _appendRings = () => {
      if (this._grpRings != null)
        this._grpRings.remove();
      console.log(this._vRings);
      this._grpRings = this._grpCluster.selectAll(".CV-grpRings")
        .data(this._vRings) // Original _vRings
        .enter()
        .append("g")
        .attr("class", "CV-grpRings");
      this._grpRings.append("circle")
        .attr("r", (d) => { return this._ringScale(d.pHeight); });
    };
    /**
     * _appendBars
     *
     * Adds the SVG elements relative to the bars
     */
    var _appendBars = (data) => {
      let i, j, k, achei, maxDoAnel, categoriasAux = [], categorias = [];
      let circleScale = ordinal();
      if (this._grpBars != null)
        this._grpBars.remove();
      console.log(this._grpCluster);
      this._grpBars = this._grpCluster.selectAll(".CV-grpBars")
        .data(data.nodes.dataNodes)
        .enter()
        .append("g")
        .attr("class", "CV-grpBars")
        .attr("transform", (d, i) => { return "rotate(" + this._grpBarsRotScale(i) + ")"; });
      this._grpBars.append("line")
        .attr("x1", this._ringScale(0))
        .attr("y1", 0)
        .attr("x2", this._ringScale(100))
        .attr("y2", 0);
      for (i = 0; i < this._vRings.length; i++) {
        if (this._vRings[i].typeAttr === "L")
          categoriasAux = categoriasAux.concat(this._vRings[i].vLabelDomain.sort());
      }
      // Removes duplicate vector elements
      k = 0;
      for (i = 0; i < categoriasAux.length; i++) {
        achei = false;
        for (j = 0; j < categorias.length; j++)
          if (categoriasAux[i] === categorias[j]) {
            achei = true;
            break;
          }
        if (!achei) {
          categorias[k] = categoriasAux[i];
          k++;
        }
      }
      if (this._sameScale) {
        maxDoAnel = -1;
        for (i = 0; i < this._vRings.length; i++) {
          if (this._vRings[i].maxValue > maxDoAnel)
            maxDoAnel = this._vRings[i].maxValue;
        }
        for (i = 0; i < this._vRings.length; i++) {
          if (this._vRings[i].typeAttr === "V") {
            this._vRings[i].barCircleScale.range([1, Math.floor(this._vRings[i].pHeightBar * (this._outerRadius - this._innerRadius))]).domain([0, maxDoAnel]);
          }
          else {
            this._vRings[i].barCircleScale.range(this._vCores20Inv).domain(categorias);
          }
        }
      }
      else {
        for (i = 0; i < this._vRings.length; i++) {
          if (this._vRings[i].typeAttr === "V") {
            this._vRings[i].barCircleScale.range([1, Math.floor(this._vRings[i].pHeightBar * (this._outerRadius - this._innerRadius))]).domain([0, this._vRings[i].maxValue]);
          }
          else {
            this._vRings[i].barCircleScale.range(this._vCores20Inv).domain(categorias);
          }
        }
      }
      for (i = 0; i < this._vRings.length; i++) {
        if (this._vRings[i].typeAttr === "V") {
          this._grpBars.append("rect")
            .attr("class", "CV-node")
            .attr("x", this._ringScale(this._vRings[i].pX))
            .attr("y", () => { return -this._barsArea.widthBar / 2; })
            .attr("height", () => { return this._barsArea.widthBar; })
            .attr("width", (d) => { return this._vRings[i].barCircleScale(d.values[this._vRings[i].indexAttr]); })
            .style("fill", () => { return this._colorScale(this._vRings[i].indexAttr); })
            .on("mouseover", this._mouseOverNode.bind(this))
            .on("mouseout", this._mouseOutNode.bind(this))
            .append("title")
            .text((d) => { return d.labels[1] + "\n" + data.nodes.valueTitle[this._vRings[i].indexAttr] + ": " + d.values[this._vRings[i].indexAttr]; });
        }
        else {
          circleScale.range(this._vCores20Inv).domain(this._vRings[i].vLabelDomain);
          this._grpBars.append("circle")
            .attr("class", "CV-node")
            .attr("cx", this._ringScale(this._vRings[i].pX) + this._barsArea.widthBar / 2)
            .attr("cy", 0)
            .attr("r", this._barsArea.widthBar / 2)
            .style("fill", (d) => { return this._vRings[i].barCircleScale(d.labels[this._vRings[i].indexAttr]); }) //<-- Check how to put the color
            .on("mouseover", this._mouseOverNode.bind(this))
            .on("mouseout", this._mouseOutNode.bind(this))
            .append("title")
            .text((d) => {
            return d.labels[1] + "\n" +
              data.nodes.labelTitle[this._vRings[i].indexAttr] + ": " + d.labels[this._vRings[i].indexAttr];
          });
        }
      }
    };
    /**
     * _appendLinkss
     *
     * Adds the SVG elements relative to the edges
     */
    var _appendLinks = () => {
      if (this._grpLinks != null)
        this._grpLinks.remove();
      this._grpLinks = this._grpCluster.append("g")
        .attr("class", "CV-grpLinks")
        .attr("transform", "rotate(90)");
      // console.log(this._dataLinks.vBundleLinks);
      this._links = this._grpLinks.selectAll("path")
        .data(this._dataLinks.vBundleLinks)
        .enter()
        .append("path")
        .each(function (d) { d.source = d[0].data, d.target = d[d.length - 1].data; })
        .attr("d", this._drawLine);
    };
    /**
     * Zoom event
     */
    function _chartZoom(event) {
      _zoomListener.scaleExtent([0.9, 1.1]);
      _grpChart.attr("transform", event.transform);
    }
  }
  /**
   * _appendRings
   *
   * Adds the SVG elements relative to the rings
   */
  /**
     * _mouseOverNode
     */
  _mouseOverNode(event, d) {
    this._grpBars.each(function (n) { n.highLight = false; });
    this._links.classed("CV-linkHL", function (link) {
      if (link.source === d || link.target === d)
        return link.source.highLight = link.target.highLight = true;
      else
        return false;
    });
    this._grpBars.classed("CV-nodeHL", function (node) { return node.highLight; });
    this._grpBars.append("text")
      .text("")
      .classed("CV-names", true); // For showing names on mouseover
    let index = _findMaxValue(this._vRings);
    let x = this._ringScale(this._vRings[this._vRings.length - 1].pX) + this._vRings[index].barCircleScale(this._vRings[index].maxValue);
    this._grpBars.selectAll("text.CV-names")
      .attr("x", x)
      .attr("y", 0)
      .attr("text-anchor", "start")
      .text(function (n) {
      if (n.highLight === true) {
        if (_isTheFirstOccurence(n.id, d.cluster)) {
          d.cluster.push(n);
        }
        // let names = n.labels[0].split(",");
        let names = n.labels[1];
        // if (names.length === 1) {
        //     names = n.labels[0].split(".");
        //     if (names.length === 2) {
        //         return names[1];
        //     } else {
        //         return names[2];
        //     }
        // }
        return names;
      }
      return "";
    })
      .style("font-size", "10px")
      .style("font-family", "Arial")
      .style("color", "black");
    function _isTheFirstOccurence(id, tab) {
      if (tab.length === 0)
        return true;
      else {
        for (let i = 0; i < tab.length; i++) {
          if (tab[i].id === id)
            return false;
        }
        return true;
      }
    }
    function _findMaxValue(_vRings) {
      let i, max = 0;
      for (i = 0; i < _vRings.length; i++) {
        if (_vRings[i].maxValue > max)
          max = i;
      }
      return max;
    }
  }
  _mouseOutNode(event, d) {
    this._grpBars.classed("CV-nodeHL", false);
    this._links.classed("CV-linkHL", false);
    this._grpBars.selectAll("text.CV-names").text(" ");
  }
  /**
     * _calcGeometry
     *
     * Calculates all geometric parameters for ClusterVis display
     */
  _calcGeometry(data) {
    let largBarra, percMargin, percBar; // Percentage of the margin in relation to the width occupied by the sector
    this._barsArea.angleBar = this._widthToAngle(this._barsArea.widthBar + this._barsArea.marginBar, this._innerRadius);
    this._barsArea.maxBars = Math.floor(360 / this._barsArea.angleBar);
    this._barsArea.angleBar = 360.0 / this._barsArea.maxBars;
    this._barsArea.numBars = this.model.data.nodes.dataNodes.length;
    this._barsArea.startSector = Math.round((this._barsArea.maxBars - this._barsArea.numBars) / 2);
    if (this._barsArea.numBars > this._barsArea.maxBars) {
      percMargin = this._barsArea.pMarginBar / (this.model.pWidthBar + this._barsArea.pMarginBar);
      percBar = 1 - percMargin;
      this._barsArea.angleBar = 360.0 / this._barsArea.numBars;
      largBarra = this._angleToWidth(this._barsArea.angleBar, this._innerRadius);
      this._barsArea.widthBar = largBarra * percBar;
      this._barsArea.marginBar = largBarra * percMargin;
      this._barsArea.startSector = 0;
    }
    this._vAngle = [];
    data.nodes.dataNodes.forEach((d, i) => {
      this._vAngle[i] = ((i + this._barsArea.startSector) * this._barsArea.angleBar + 180) % 360;
    });
  }
  /**
   * _calcCoordinates
   *
   * Calculates the coordinates of the leaf nodes
   */
  _calcCoordinates(dataNodes) {
    let distScale = linear().range([20, this._innerRadius]).domain([0, this._dataLinks.heightTree]);
    this._vOrder.forEach((d, i) => {
      dataNodes[d].x = this._vAngle[i];
      dataNodes[d].y = this._innerRadius;
    });
    posOrdem(this._dataLinks.tree);
    function posOrdem(raiz) {
      let xPrim, xUlt;
      if (raiz.children !== undefined) {
        raiz.children.forEach(function (d) {
          posOrdem(d);
        });
        console.log("parent", raiz);
        console.log("children", raiz.children[0]);
        xPrim = raiz.children[0].data.x;
        xUlt = raiz.children[raiz.children.length - 1].data.x;
        if (xPrim < xUlt) {
          raiz.x = (xPrim + xUlt) / 2;
          raiz.data.x = (xPrim + xUlt) / 2;
        }
        else {
          raiz.x = ((xUlt + 360 - xPrim) / 2 + xPrim) % 360;
          raiz.data.x = (xPrim + xUlt) / 2;
        }
        raiz.y = distScale(raiz.depth);
        raiz.data.y = distScale(raiz.depth);
      }
    }
  }
  /**
   * _widthToAngle
   *
   * Calculates the angle of the occupied sector by a width
   * E: width, radius
   * S: angle in degrees
   */
  _widthToAngle(width, radius) {
    return Math.acos(1.0 - width * width / (2 * radius * radius)) * 180.0 / Math.PI;
  }
  /**
   * _angleToWidth
   *
   * Calculates the sector width from the angle and a radius
   * E: width, radius
   * S: angle in degrees
   */
  _angleToWidth(angle, radius) {
    let angRadianos = angle * Math.PI / 180.0;
    return Math.sqrt(2 * radius * radius - 2 * radius * radius * Math.cos(angRadianos));
  }
  /**
   * _getTree
   *
   * Generates a tree in the format { id:..., chidren[] }
   */
  _getTree(heightTree, dados, degree, vOrder) {
    let children = null;
    let levelMax = heightTree - 1;
    let result = createTree(0, vOrder);
    result.depth = 0;
    function createTree(nivel, vNodos) {
      let obj = [], objPai, inic, fim, delta;
      if (nivel < levelMax) {
        delta = Math.floor(vNodos.length / degree);
        inic = 0;
        fim = delta;
        for (let i = 0; i < degree - 1; i++) {
          obj.push(createTree(nivel + 1, vNodos.slice(inic, fim)));
          inic = fim;
          fim += delta;
        }
        obj.push(createTree(nivel + 1, vNodos.slice(inic)));
        // console.log(obj)
        objPai = { id: "N" + nivel, children: obj };
      }
      else if (nivel === levelMax) {
        children = [];
        vNodos.forEach(function (d) {
          children.push(dados[d]);
        });
        objPai = { id: "N" + nivel, children: children };
      }
      objPai.children.forEach(function (d) {
        d.parent = objPai;
        d.depth = nivel + 1;
      });
      return objPai;
    }
    return result;
  }
  /**
   * _getEdges
   *
   * Generates a vector with the list of edges in the format: [ {source:Object, target: Object},...]
   */
  // _getEdges(nodes) {
  //    var map = {},
  //        imports = [];
  //    // Compute a map from name to node.
  //    nodes.forEach(function(d) {
  //      map[d.data.id] = d;
  //    });
  //    // console.log(map);
  //    // For each import, construct a link from the source to target node.
  //    nodes.forEach(function(d) {
  //      if (d.data.parent) d.data.parent.forEach(function(i) {
  //        imports.push(map[d.data.id].path(map[i]));
  //      });
  //    });
  //    return imports;
  //  }
  _getEdges(dados, nodes) {
    let nodos = dados.nodes.dataNodes, edges = dados.edges.dataEdges, objSource, objTarget, map = {};
    nodes.forEach(function (d) {
      map[d.data.id] = d;
    });
    let result = [];
    edges.forEach(function (d) {
      objSource = findNodo(d.src);
      objTarget = findNodo(d.tgt);
      // result.push({ source: objSource, target: objTarget });
      // result.push({ source: objSource, target: objTarget });
      // result.push({source: map[objSource.id].data, target: (map[objTarget.id].data)})
      result.push(map[objSource.id].path(map[objTarget.id]));
    });
    function findNodo(id) {
      for (let i = 0; i < nodos.length; i++)
        if (nodos[i].id === id)
          return nodos[i];
      return null;
    }
    return result;
  }
  // This function is only valid for numeric attributes
  _updateMaxRings() {
    this._vRings.forEach((ring) => {
      if (ring.typeAttr === "V")
        ring.maxValue = max$1(this.model.data.nodes.dataNodes, function (d) { return d.values[ring.indexAttr]; });
      else
        ring.maxValue = 0; // Copy here what was done in the addAttribute()
    });
  }
  async obtemRings() {
    return this._vRings;
  }
  ;
  //---------------------
  async setBox(_) {
    if (!arguments.length)
      return this.model.box;
    this.model.box = _;
  }
  ;
  //---------------------
  // This function is required in all techniques
  // It is called internally in conectChart
  async setPanel(_) {
    if (!arguments.length)
      return this._clusterVisPanel;
    this._clusterVisPanel = _;
  }
  ;
  //---------------------
  async setData(_) {
    if (!arguments.length)
      return this.model.data;
    if (_.cluster) {
      _ = this._subGraph.clusterClusterVis(_, state._data);
    }
    else {
      _ = this._subGraph.normalClusterVis(_, state._data);
    }
    this.model.data = _;
    this.addAttribute(this.ATN_Category, "L");
    this.addAttribute(this.ATN_QtPublicacoes - 1000, "V");
    this.addAttribute(this.ATN_QtProceedings - 1000, "V");
    this.addAttribute(this.ATN_QtJournals - 1000, "V");
    this.addAttribute(this.ATN_QtBooks - 1000, "V");
    this._sort.inic(this.model.data.nodes.labelTitle.length, this.model.data.nodes.valueTitle.length)
      .data(this.model.data.nodes.dataNodes);
    this._sort.exec(this._indexAttrSort);
    this._vOrder = this._sort.getVetOrder();
    // console.log(this.model.data.nodes.dataNodes);
    let tempHierachy = hierarchy(this._getTree(this._dataLinks.heightTree, this.model.data.nodes.dataNodes, this._dataLinks.degreeTree, this._vOrder));
    tree().size([20, this._innerRadius])(tempHierachy);
    // console.log(a)
    // console.log(this._getTree(this._dataLinks.heightTree, this.model.data.nodes.dataNodes, this._dataLinks.degreeTree, this._vOrder))
    this._dataLinks.tree = hierarchy(this._getTree(this._dataLinks.heightTree, this.model.data.nodes.dataNodes, this._dataLinks.degreeTree, this._vOrder));
    this._dataLinks.vBundleLinks = this._getEdges(this.model.data, this._dataLinks.tree.descendants());
    // console.log(this._dataLinks.tree.descendants());
    // console.log(this._dataLinks.vBundleLinks)
    // console.log(this._dataLinks.vBundleLinks)
    // Appends the source and target attributes to the data of each edge
    // this._dataLinks.vBundleLinks.forEach(function (d) { d.source = d[0]; d.target = d[d.length - 1]; });
    // console.log(this._dataLinks.vBundleLinks);
    // this._dataLinks.vBundleLinks.forEach(function (d) {d.source = d[0], d.target = d[d.length - 1]; });
    this.model.data.nodes.dataNodes.forEach(function (d) { d.highLight = false; });
    this._updateMaxRings();
    // this._clusterVisPanel.update();   // For now it's only here.
  }
  ;
  //---------------------
  async setpInnerRadius(_) {
    if (!arguments.length)
      return this.model.pInnerRadius;
    this.model.pInnerRadius = _;
  }
  ;
  //---------------------
  async setpOuterRadius(_) {
    if (!arguments.length)
      return this.model.pOuterRadius;
    this.model.pOuterRadius = _;
  }
  ;
  //---------------------
  removeAnelExterno() {
    let i, deltaHeight, pHeight;
    this._vRings.pop(); // Removes the data from the ring
    deltaHeight = 100 / this._vRings.length;
    // Adjust todo o this._vRings
    for (i = 0, pHeight = deltaHeight; i < this._vRings.length; i++, pHeight += deltaHeight) {
      this._vRings[i].pHeight = pHeight;
      this._vRings[i].pHeightBar = deltaHeight / 100;
    }
    if (this._vRings.length > 0) {
      this._vRings[0].pX = 0;
      for (i = 1; i < this._vRings.length; i++)
        this._vRings[i].pX = this._vRings[i - 1].pHeight;
    }
    this.model.redraw += 1;
  }
  ;
  //---------------------
  addAttribute(_indexAttr, _typeAttr) {
    let maxValue, tempKeys, pX, deltaHeight = 100 / (this._vRings.length + 1), _vLabelDomain = [];
    if (_typeAttr === "V") {
      maxValue = max$1(this.model.data.nodes.dataNodes, function (d) { return d.values[_indexAttr]; });
    }
    else { // Determines domain for categorical attributes (deve ser colocado tamb�m na fun��o chart.data)
      maxValue = -1;
      tempKeys = groups(this.model.data.nodes.dataNodes, d => d.labels[_indexAttr]).sort((a, b) => ascending(a[0], b[0]));
      for (i = 0; i < tempKeys.length; i++)
        _vLabelDomain[i] = tempKeys[i].key;
    }
    pX = 0;
    //      barScale = d3.scale.linear().range(0, model.ringScale(deltaHeight)-_innerRadius).domain(0,maxValue);
    // Adjust todo o _vRings
    for (var i = 0, pHeight = deltaHeight; i < this._vRings.length; i++, pHeight += deltaHeight) {
      this._vRings[i].pHeight = pHeight;
      this._vRings[i].pHeightBar = deltaHeight / 100;
    }
    //    barScale.range(0, ringScale() ).domain(0,maxValue);  
    if (this._vRings.length > 0) {
      this._vRings[0].pX = 0;
      pX = this._vRings[this._vRings.length - 1].pHeight;
      for (i = 1; i < this._vRings.length; i++)
        this._vRings[i].pX = this._vRings[i - 1].pHeight;
    }
    if (_typeAttr === "V")
      this._vRings.push({
        indexAttr: _indexAttr, typeAttr: _typeAttr, pHeight: pHeight, pX: pX,
        pHeightBar: deltaHeight / 100, maxValue: maxValue, vLabelDomain: _vLabelDomain, barCircleScale: linear()
      });
    else
      this._vRings.push({
        indexAttr: _indexAttr, typeAttr: _typeAttr, pHeight: pHeight, pX: pX,
        pHeightBar: deltaHeight / 100, maxValue: maxValue, vLabelDomain: _vLabelDomain, barCircleScale: ordinal()
      });
    this.model.redraw += 1;
  }
  ;
  //---------------------
  alteraAttribute(_indexAnel, _indexAttr, _typeAttr) {
    let maxValue, tempKeys, i, _vLabelDomain = [];
    if (_typeAttr === "V") {
      maxValue = max$1(this.model.data.nodes.dataNodes, function (d) { return d.values[_indexAttr]; });
    }
    else { // Determines or domain for categorical attributes (should also be placed in the function chart.data)
      maxValue = -1;
      tempKeys = groups(this.model.data.nodes.dataNodes, d => d.labels[_indexAttr]).sort((a, b) => ascending(a[0], b[0]));
      // tempKeys = nest().key(function (d) { return d.labels[_indexAttr]; }).sortKeys(ascending).entries(this.model.data.nodes.dataNodes);
      for (i = 0; i < tempKeys.length; i++)
        _vLabelDomain[i] = tempKeys[i].key;
    }
    this._vRings[_indexAnel].indexAttr = _indexAttr;
    this._vRings[_indexAnel].typeAttr = _typeAttr;
    this._vRings[_indexAnel].maxValue = maxValue;
    this._vRings[_indexAnel].vLabelDomain = _vLabelDomain;
    if (_typeAttr === "V")
      this._vRings[_indexAnel].barCircleScale = linear();
    else
      this._vRings[_indexAnel].barCircleScale = ordinal();
    this.model.redraw += 1;
  }
  ;
  //---------------------
  async setIndexAttrSort(_) {
    if (!arguments.length)
      return this._indexAttrSort;
    this._indexAttrSort = _;
  }
  ;
  //======== Actions Functions
  acSortExec(_) {
    this._indexAttrSort = _;
    this._sort.exec(this._indexAttrSort);
    this._vOrder = this._sort.getVetOrder();
    this._grpBarsRotScale.domain(this._vOrder);
    this._dataLinks.tree = this._getTree(this._dataLinks.heightTree, this.model.data.nodes.dataNodes, this._dataLinks.degreeTree, this._vOrder);
    this._dataLinks.vBundleLinks = this._getEdges(this.model.data, this._dataLinks.tree.descendants());
    // this._dataLinks.vBundleLinks.forEach(function (d) { d.source = d[0]; d.target = d[d.length - 1]; });
    this._calcCoordinates(this.model.data.nodes.dataNodes);
    this._grpBars.transition().duration(800)
      .attr("transform", function (d, i) { return "rotate(" + this._grpBarsRotScale(i) + ")"; });
    this._grpLinks.selectAll("path")
      .data(this._dataLinks.vBundleLinks).transition().duration(800).attr("d", this._drawLine);
  }
  ;
  //-------------------------
  acAlteraAnel(indexAnel, indexAttr) {
    let indexAtributo;
    indexAtributo = +indexAttr;
    if (indexAtributo >= 1000)
      this.alteraAttribute(indexAnel, indexAtributo - 1000, "V");
    else
      this.alteraAttribute(indexAnel, indexAtributo, "L");
    this._clusterVisPanel.alteraSelectOrder();
  }
  ;
  //-------------------------
  acSameScale(checked) {
    this._sameScale = checked;
    this.model.redraw += 1;
  }
  ;
  buildChart(idDiv, svg) {
    this.setBox(this.model.box);
    this.setIndexAttrSort(2);
    this.addClusterChart(idDiv, svg);
    // this.setData(this.chartData);
    // console.log(this._chart);
    // this._chart().data(this.chartData);
  }
  componentDidLoad() {
    let clusterDiv = select(this.element.querySelectorAll(".cluster")[0])
      .attr("width", this.width)
      .attr("height", this.height);
    this.buildChart("cluster", clusterDiv);
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "cluster" })));
  }
  get element() { return getElement(this); }
  static get style() { return mgeClustervisCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "mge-clustervis",
    "$members$": {
      "width": [2],
      "height": [2],
      "data": [1],
      "addClusterChart": [64],
      "obtemRings": [64],
      "setBox": [64],
      "setPanel": [64],
      "setData": [64],
      "setpInnerRadius": [64],
      "setpOuterRadius": [64],
      "removeAnelExterno": [64],
      "addAttribute": [64],
      "alteraAttribute": [64],
      "setIndexAttrSort": [64],
      "acSortExec": [64],
      "acAlteraAnel": [64],
      "acSameScale": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}


const mgeDashboardCss = "/*!@:host*/.sc-mge-dashboard-h{display:block}/*!@.graph*/.graph.sc-mge-dashboard{position:absolute;z-index:1}/*!@.DS-linkChartShow*/.DS-linkChartShow.sc-mge-dashboard{stroke:#3399FF;stroke-width:2.0}/*!@.DS-linkChartHidden*/.DS-linkChartHidden.sc-mge-dashboard{stroke:gray;stroke-width:1.0;stroke-dasharray:2, 3}/*!@.DS-conect*/.DS-conect.sc-mge-dashboard{stroke:gray;stroke-width:1.0;fill:#f0f0f0;cursor:move}/*!@.DS-popup*/.DS-popup.sc-mge-dashboard{position:absolute;left:0;top:0;background-color:#F0F0F0;width:72px;border:1px #ccc solid;border-radius:4px;box-shadow:#333 2px 2px 4px;padding:3px;z-index:1000;font-family:sans-serif;font-size:10px;font-weight:bold}/*!@.small-size*//*!@.medium-size*//*!@.big-size*//*!@.DS-popup div*/.DS-popup.sc-mge-dashboard div.sc-mge-dashboard{padding:3px 5px 3px 5px}/*!@.DS-popup div:hover*/.DS-popup.sc-mge-dashboard div.sc-mge-dashboard:hover{background-color:#FFF}/*!@.linktool*/.linktool.sc-mge-dashboard{z-index:0}";

// import * as $ from 'jquery';
class MgeDashboard {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    // this._idDashboard = this.idDiv,     // The div id containing the dashboard
    this.width = 400;
    this.height = 400;
    this.data = "[]";
    this.title = "[]";
    this._treeCharts = null, // Stores the tree of connections between views
      this._historyChart = null, // Stores the graph that contains history
      //_svgLinks = null,
      this._selectedQuery;
    this._configView = {
      barTitle: true,
      btTool: true,
      btClose: true,
      draggable: true,
      resizable: true,
      aspectRatio: false,
      visible: true
    },
      this._dashboardArea = {
        div: null,
        dash: null,
        svg: null,
        width: 0,
        height: 0
      };
    this._dashboardArea.div = select("#viewArea");
    this._dashboardArea.width = this._dashboardArea.div.node().scrollWidth;
    this._dashboardArea.height = this._dashboardArea.div.node().scrollHeight;
    const that = this;
    this._dragConect = drag().on("drag", function (e, d) { return that._onDragConect.call(this, e, d, that); });
  }
  async _addLink(viewParent, viewChild) {
    let line, conect;
    let centerViewParent = await viewParent.getCenter(), centerViewChild = await viewChild.getCenter();
    if (typeof centerViewParent !== "undefined" && typeof centerViewChild !== "undefined") {
      line = this._dashboardArea.svg.
        insert("line", ".DS-conect")
        .attr("x1", centerViewParent.cx)
        .attr("y1", centerViewParent.cy)
        .attr("x2", centerViewChild.cx)
        .attr("y2", centerViewChild.cy)
        .attr("class", "DS-linkChartShow P-" + await viewParent.idChart() + " F-" + await viewChild.idChart());
      conect = this._dashboardArea.svg.
        append("rect")
        .datum([{ x: centerViewChild.cx, y: centerViewChild.cy, viewParent: viewParent, viewChild: viewChild }])
        .attr("class", "DS-conect " + await viewChild.idChart())
        .attr("x", centerViewChild.cx - 6)
        .attr("y", centerViewChild.cy - 6)
        .attr("width", 12)
        .attr("height", 12)
        .on("click", () => {
        this.showView(viewChild);
      });
      conect.call(this._dragConect);
    }
    return { line: line, conect: conect, visible: true };
  }
  //---------------------
  async showView(view) {
    let nodeTree = this.getChart(await view.idChart());
    let node = nodeTree;
    while (node.link.visible === false) {
      node.link.visible = true;
      node = node.parentNode;
      node.isLeaf = false;
      if (node.parentNode == null) // Check if root
        break;
    }
    nodeTree.hidden = false;
    view.setVisible(true);
    this.refreshLinks();
  }
  ;
  async closeView(view) {
    let nodeTree = this.getChart(await view.idChart());
    let node = nodeTree;
    if (node.isLeaf) {
      while (node != null) {
        // node.link.visible = false;
        if (temFilhosVisiveis(node.parentNode)) {
          break;
        }
        else {
          node.parentNode.isLeaf = true;
        }
        node = node.parentNode;
        if (node.hidden === false) {
          break;
        }
      }
    }
    nodeTree.hidden = true;
    view.setVisible(false);
    this.refreshLinks();
    /*
            nodeTree.hidden = true;
            view.show(false);

            node = nodeTree;
            while (node.hidden) {
                if (node.isLeaf) {
                    node.link.visible = false;
                    console.log(node);
                    if ( temFilhosVisiveis(node.parentNode)) {
                        console.log("tem filho");
                        break;
                    } else {
                        node.parentNode.isLeaf = true;
                    }
                }
                node = node.parentNode;
            }
    */
    function temFilhosVisiveis(node) {
      let i;
      if (node.children === undefined)
        return false;
      else {
        for (i = 0; i < node.children.length; i++)
          //          if (node.children[i].hidden===false)
          if (node.children[i].link.visible)
            return true;
      }
      return false;
    }
  }
  async _onDragConect(event, d, globalThis) {
    let dt, line, rects;
    d.x = event.x;
    d.y = event.y;
    select(this).attr("x", d.x - 6).attr("y", d.y - 6);
    dt = select(this).datum();
    line = globalThis._dashboardArea.svg.select(".F-" + await dt[0].viewChild.idChart());
    rects = globalThis._dashboardArea.svg.selectAll(".P-" + await dt[0].viewChild.idChart());
    line.attr("x2", d.x).attr("y2", d.y);
    rects.attr("x1", d.x).attr("y1", d.y);
    dt[0].viewChild.setCenter(d.x, d.y); // Move the hidden window
    dt[0].viewChild.refresh();
    dt[0].x = d.x;
    dt[0].y = d.y;
  }
  getChart(idChart) {
    return getChartRec(this._treeCharts);
    function getChartRec(nodeTree) {
      let tempNodeTree;
      if (nodeTree == null)
        return null;
      if (nodeTree.id === idChart)
        return nodeTree;
      if (nodeTree.children === undefined)
        return null;
      for (let i = 0; i < nodeTree.children.length; i++) {
        tempNodeTree = getChartRec(nodeTree.children[i]);
        if (tempNodeTree != null)
          return tempNodeTree;
      }
      return null;
    }
  }
  ;
  async addChart(idParent, objChart) {
    let nodeTree;
    if (idParent === 0) {
      if (this._treeCharts == null) {
        this._treeCharts = {
          id: objChart.id, title: objChart.title, typeChart: objChart.typeDiv, hidden: objChart.hidden,
          x: objChart.x, y: objChart.y, view: objChart.view,
          parentNode: null, isLeaf: true, link: null
        };
      }
      else {
        return -1;
      }
    }
    else {
      nodeTree = this.getChart(idParent);
      if (nodeTree == null)
        return -1;
      if (nodeTree.children === undefined)
        nodeTree.children = [];
      nodeTree.isLeaf = false;
      // link = _addLink(nodeTree.view, objChart.view);
      console.log(objChart.title);
      nodeTree.children.push({
        id: objChart.id, title: objChart.title, typeChart: objChart.typeChart, hidden: objChart.hidden,
        x: objChart.x, y: objChart.y, view: objChart.view,
        parentNode: nodeTree, isLeaf: true, link: objChart.link
      });
    }
  }
  ;
  refreshSvg() {
    this._dashboardArea.width = this._dashboardArea.div.node().scrollWidth;
    this._dashboardArea.height = this._dashboardArea.div.node().scrollHeight;
    this._dashboardArea.svg.attr("width", this._dashboardArea.width);
    this._dashboardArea.svg.attr("height", this._dashboardArea.height);
  }
  ;
  async addDashboard(_svg) {
    if (state._data != null) {
      state._data.nodes.dataNodes.forEach(function (node) {
        node.idOrig = node.id;
      });
    }
   
    this._historyChart = _svg.append("mge-view")
      .attr("x", this.x)
      .attr("y", this.y + 400)
      .attr("type-div", "mge-history")
      .attr("title", "History")
      .attr("id-div", "chart-history")
      .attr("id-template", this.idTemplate);
    this._nodelink = _svg
      .append("mge-view")
      .attr("x", this.x)
      .attr("y", this.y)
      .attr("data", this.data)
      .attr("type-div", this.typeDiv)
      .attr("title", "Co-publication")
      .attr("id-div", "chart-0")
      .attr("id-template", this.idTemplate);
    if (typeof await this._nodelink.node().getChart() !== "undefined") {
      let _nodelink = await this._nodelink.node().getChart();
      await _nodelink.setData(state._data);
    }
    this.addChart(0, {
      id: "chart-0", title: "Co-publication", typeChart: "NE", hidden: false,
      x: this.x, y: this.y, view: this._nodelink.node()
    });
    await this.refreshLinks();
  }
  async refreshLinks() {
    refreshLinksRec(this._treeCharts);
    this._historyChart.node().componentOnReady().then(async () => {
      let viewChart = await this._historyChart.node().getChart();
      if (typeof viewChart !== "undefined")
        await viewChart.setTree(this._treeCharts);
    });
    // if (typeof this._historyChart.node() !== "undefined"){
    //     let viewChart = await this._historyChart.node().getChart()
    //     await viewChart.setTree(this._treeCharts)
    // }
    function refreshLinksRec(nodeTree) {
      //let tempNodeTree;
      if (nodeTree != null) {
        processNode(nodeTree);
      }
      if (nodeTree.children !== undefined) {
        for (let i = 0; i < nodeTree.children.length; i++) {
          refreshLinksRec(nodeTree.children[i]);
        }
      }
    }
    function processNode(nodeTree) {
      if (nodeTree.link != null) {
        if (nodeTree.link.visible) {
          if (nodeTree.hidden === true || (nodeTree.parentNode.hidden && !nodeTree.hidden)) {
            nodeTree.link.line.classed("DS-linkChartShow", false);
            nodeTree.link.line.classed("DS-linkChartHidden", true);
          }
          else {
            nodeTree.link.line.classed("DS-linkChartShow", true);
            nodeTree.link.line.classed("DS-linkChartHidden", false);
          }
          nodeTree.link.conect.style("display", null);
          nodeTree.link.line.style("display", null);
        }
        else {
          nodeTree.link.conect.style("display", "none");
          nodeTree.link.line.style("display", "none");
        }
      }
    }
  }
  ;
  componentDidLoad() {
    let svg = select(this.element.shadowRoot.querySelectorAll(".graph")[0]);
    this._dashboardArea.svg = select(this.element.shadowRoot.querySelectorAll(".linktool")[0])
      .attr("width", this._dashboardArea.width)
      .attr("height", this._dashboardArea.height)
      .style("top", 0)
      .style("left", 0)
      .style("right", 0)
      .style("position", "absolute");
    this.addDashboard(svg);
  }
  // <div class="graph"></div>
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "graph" }), hAsync("svg", { class: "linktool" })));
  }
  get element() { return getElement(this); }
  static get style() { return mgeDashboardCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "mge-dashboard",
    "$members$": {
      "width": [2],
      "height": [2],
      "typeDiv": [1, "type-div"],
      "data": [1],
      "title": [1],
      "idTemplate": [1, "id-template"],
      "x": [1026],
      "y": [1026],
      "_addLink": [64],
      "showView": [64],
      "closeView": [64],
      "addChart": [64],
      "refreshSvg": [64],
      "refreshLinks": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

/**
* numericGlyph
*
*/
const NumericGlyph = function (id) {
  
  var _selectedGlyph = id,     // �ndice do glifo criado
      _vIndexMapAttr = null,   // Vetor que contem os indices dos atributos a serem mapeados para o glifo
	  _vMaxValuesAttr = null,  // Vetor com os valores m�ximos de cada atributo do glifo
	  _vMinValuesAttr = null,  // Vetor com os valores m�nimos de cada atributo do glifo
	  _maxValueAttr = 0,       // Valor m�ximo considerando todos os atributos
	  _minValueAttr = 0,       // Valor m�nimo considerando todos os atributos
	  
	  _widthCell = 0,          
	  _xCenterCell = 0,        
	  _yCenterCell = 0,
	  _glyphScale = d3.scaleLinear(),
	  
	  _heightTooltip = 0,
	  _xCenterTooltip = 0,        
	  _yCenterTooltip = 0,
	  _glyphScaleTooltip = d3.scaleLinear(),
	  
	  _drawPolyline = d3.line()
			.x (function(d) { return d.x})
			.y (function(d) { return d.y}),
	  
	  _data = null;            // Dados associados ao glifo
	  
    function glyphNone() {}
    function glyphCircle() {}
    function glyphTwoCircle() {}
	function glyphTwinBars() {}	
	function glyphStar() {}
	
  var _vGlyphs = [glyphNone,glyphCircle,glyphTwoCircle, glyphTwinBars,glyphStar];
  
// Atributos privados dos glifos
  var _circleColor =  "black",
      _twoCircleColor = ["black","white"], 
	  _twinBarsColor = ["black","white"],
	  _starColor = [ "black"],
	  _starBkColor = [ "gray"],
	  _starOpacity = 0.6,
	  _vGlyphScale = null,     // GlyphTwinBars - Escala em X para as barras (uma para cada dupla)
	  _twinBarsYScale = d3.scaleBand();         // Escala em Y usada para desenhar barras
	
// ---------------- Acoes de inicializacao	  


//--------------------------------- Funcoes privadas
    function _calcMaxMin() {
	    var i,j,k;
		
		_vMaxValuesAttr = d3.range (_vIndexMapAttr.length);
		_vMinValuesAttr = d3.range (_vIndexMapAttr.length);
		
		for (i=0; i< _vMaxValuesAttr.length; i++) {
			_vMaxValuesAttr[i] = Number.MIN_VALUE;
			_vMinValuesAttr[i] = Number.MAX_VALUE;
		}

		for (i=0; i< _data.matrix.length; i++)	
			for ( j=0; j< _data.matrix[i].length; j++)
				if (_data.matrix[i][j].exist) {
					for (k=0; k< _vIndexMapAttr.length; k++) {
						if (_data.matrix[i][j].values[_vIndexMapAttr[k]] > _vMaxValuesAttr[k])
							_vMaxValuesAttr[k] = _data.matrix[i][j].values[_vIndexMapAttr[k]];
						if (_data.matrix[i][j].values[_vIndexMapAttr[k]] < _vMinValuesAttr[k])
							_vMinValuesAttr[k] = _data.matrix[i][j].values[_vIndexMapAttr[k]];							
					}				
				}
				
		_maxValueAttr = d3.max(_vMaxValuesAttr);
		_minValueAttr = d3.min(_vMinValuesAttr);
	}
	
	function _fCalcCenter( widthCell) {
	  _widthCell = widthCell;
	  _xCenterCell = widthCell/2;
	  _yCenterCell = widthCell/2;		
	}
	
	function _fCalcCenterTooltip( widthTooltip, heightTooltip) {
	  _heightTooltip = heightTooltip;	  
	  _xCenterTooltip = widthTooltip/2;
	  _yCenterTooltip = heightTooltip/2;		
	}	
	
//================================= GLYPHS	  

//----- GLYPH-NONE
	
	glyphNone.data = function(_) {
	
	};

	glyphNone.draw = function(_) {

	
	};	
	
    glyphNone.calcScale = function(_) {
	
	};
	
//----- GLYPH-CIRCLE
            // Utiliza apenas um atributo (index=0)
            // S� funciona para valores positivos			
	 
	glyphCircle.indexMapAttr = function(_) {
	  if (!arguments.length)
	     return _vIndexMapAttr;	 
	  _vIndexMapAttr = _;
	  return glyphCircle;
	};
	
	 	//---------------------	 
	glyphCircle.data = function(_) { 
	  if (!arguments.length)
	     return _data;	 
	  _data = _;

      _calcMaxMin();	  
	  return glyphCircle;  
	};

	 	//---------------------		
	glyphCircle.draw = function( cells) {  
		cells.append("g")
			.append("circle")
				.attr("cx", _xCenterCell )
				.attr("cy", _yCenterCell )
				.style("fill", _circleColor)
				.attr("r",function(d) { 
								return _glyphScale(d.values[ _vIndexMapAttr[0]]);
							});		  
	};

	 	//---------------------		
    glyphCircle.calcScale = function( widthCell) {
		var maxRange = widthCell/2;

		if (maxRange > 2)
			maxRange -= 1;
		
		_fCalcCenter(widthCell);					
		_glyphScale.range( [0,maxRange]).domain( [0,_vMaxValuesAttr[0]]);	
	};

	 	//---------------------		
    glyphCircle.color = function(_) {
	  if (!arguments.length)
	     return _circleColor;	 
	  _circleColor = _;
 
	  return glyphCircle;	
	};

//----- GLYPH-TWOCIRCLE
            // Utiliza apenas dois atributos (index=0,1)
            // S� funciona para valores positivos. Mostra a diferen�a entre os atributos	
	glyphTwoCircle.indexMapAttr = function(_) {
	  if (!arguments.length)
	     return _vIndexMapAttr;	 
	  _vIndexMapAttr = _;

	  return glyphTwoCircle;
	};

	 	//---------------------	 
	glyphTwoCircle.data = function(_) { 
	  if (!arguments.length)
	     return _data;	 
	  _data = _;

      _calcMaxMin();	  
	  return glyphTwoCircle;  
	};

    glyphTwoCircle.calcScale = function( widthCell) {
		var maxRange = widthCell/2,
		    maxValue;

		if (maxRange > 2)
			maxRange -= 1;
		
		_fCalcCenter(widthCell);
		if (_vMaxValuesAttr[0] > _vMaxValuesAttr[1])
		   maxValue = _vMaxValuesAttr[0];
		else
		   maxValue = _vMaxValuesAttr[1];		
		_glyphScale.range( [0,maxRange]).domain( [0,maxValue]);	
	};

	glyphTwoCircle.draw = function( cells) { 
		var group = cells.append("g");
		
		group.append("circle")
				.attr("cx", _xCenterCell )
				.attr("cy", _yCenterCell )
				.style("fill", _twoCircleColor[0])
				.attr("r",function(d) { 
							if (d.values[ _vIndexMapAttr[0]] > d.values[ _vIndexMapAttr[1]])
								return _glyphScale(d.values[ _vIndexMapAttr[0]]);
							else
								return _glyphScale(d.values[ _vIndexMapAttr[1]]);
							});	
		group.append("circle")
				.attr("cx", _xCenterCell )
				.attr("cy", _yCenterCell )
				.style("fill", function (d) {
								if (d.values[ _vIndexMapAttr[0]] == d.values[ _vIndexMapAttr[1]]) 
								   return _twoCircleColor[0];
								else
								   return _twoCircleColor[1];								
							})
				.attr("r",function(d) { 
							if (d.values[ _vIndexMapAttr[0]] < d.values[ _vIndexMapAttr[1]])
								return _glyphScale(d.values[ _vIndexMapAttr[0]]);
							else
								return _glyphScale(d.values[ _vIndexMapAttr[1]]);
							});							
	};
	
    glyphTwoCircle.color = function(_) {
	  if (!arguments.length)
	     return _twoCircleColor;	 
	  _twoCircleColor = _;
 
	  return glyphTwoCircle;	
	};

//----- GLYPH-TWINBARS
            // Os atributos devem ser informados em pares [0e,0d,1e,1d] 
			// � usada para comparar cada par de atributos
			// � usada uma escada para cada par de atributos
            // S� funciona para valores positivos.
			
	glyphTwinBars.indexMapAttr = function(_) {
	  if (!arguments.length)
	     return _vIndexMapAttr;	 
	  _vIndexMapAttr = _;
	  _vGlyphScale = d3.range(_vIndexMapAttr.length/2).map(function (d,i) { return d3.scale.linear()});	 
	  return glyphTwinBars;
	};
			
	 	//---------------------	 
	glyphTwinBars.data = function(_) { 
	  if (!arguments.length)
	     return _data;	 
	  _data = _;

      _calcMaxMin();	  
	  return glyphTwinBars;  
	};
	
	 	//---------------------	 	
	glyphTwinBars.draw = function( cells) { 
		var group = cells.append("g").attr("transform", function(d, i) { return "translate(" + _xCenterCell +",0)"; });
			
		_vIndexMapAttr.forEach (function (d,i) {
				var index = Math.floor(i/2);
				group.append("rect")				
					.attr("x", function (d) { return (i%2==0) ? -_vGlyphScale[index](d.values[ _vIndexMapAttr[i] ]) : 0})
					.attr("y", _twinBarsYScale(index))
					.attr("width", function (d) { return _vGlyphScale[index](d.values[ _vIndexMapAttr[i] ]) })
					.attr("height", _twinBarsYScale.rangeBand()-1)
					.style("fill",_twinBarsColor[ i%2]);				
		
		});  
	};
	
	 	//---------------------	 	
    glyphTwinBars.calcScale = function( widthCell) {
		var maxRange = widthCell/2;

		if (maxRange > 2)
			maxRange -= 1;
		
		_fCalcCenter(widthCell);
		
		_vGlyphScale.forEach( function(d,i) {
			var max;
			if (_vMaxValuesAttr[2*i] > _vMaxValuesAttr[2*i+1])
			   max = _vMaxValuesAttr[2*i];
			else
			   max = _vMaxValuesAttr[2*i+1];
			d.range([0,maxRange]).domain([0,max]);				   
		});
		
		_twinBarsYScale.rangeBands([0, widthCell],0,0.35).domain(d3.range(_vGlyphScale.length));
	};

//----- GLYPH-STAR
            // Deve possuir pelo menos 3 atributos 
	glyphStar.indexMapAttr = function(_) {
	  if (!arguments.length)
	     return _vIndexMapAttr;	 
	  _vIndexMapAttr = _;

	  return glyphStar;
	};

	 	//---------------------	 
	glyphStar.data = function(_) { 
	  if (!arguments.length)
	     return _data;	 
	  _data = _;

      _calcMaxMin();	  
	  return glyphStar;  
	};

	 	//---------------------	 	
    glyphStar.calcScale = function( widthCell) {
		var maxRange = widthCell/2,
		    minValue = _minValueAttr,
			maxValue = _maxValueAttr;

	  if (minValue > 0)  
	     minValue = 0;
		 
	  if (maxValue < 0)  
	     minValue = 0;			
			
		if (maxRange > 2)
			maxRange -= 1;
		
		_fCalcCenter(widthCell);	
		_glyphScale.range( [0,maxRange]).domain( [minValue,maxValue]);	
	
	};
	 	//---------------------	 	
    glyphStar.calcScaleTooltip = function( widthTooltip, heightTooltip) {
		var maxRange = heightTooltip/2,
		    minValue = _minValueAttr,
			maxValue = _maxValueAttr;

	  if (minValue > 0)  
	     minValue = 0;
		 
	  if (maxValue < 0)  
	     minValue = 0;			
			
		if (maxRange > 2)
			maxRange -= 1;  // Desconta a margem
		
		_fCalcCenterTooltip(widthTooltip,heightTooltip);	
		_glyphScaleTooltip.range( [0,maxRange]).domain( [minValue,maxValue]);	
	
	};	
	 	//---------------------
	glyphStar.draw = function( cells) { 
		var group = cells.append("g").attr("transform", function(d, i) { return "translate(" + _xCenterCell +"," + _yCenterCell + ")"; });
		var angSector = 2 * Math.PI / _vIndexMapAttr.length;
		
		group.each( function (d,i) {          
           var element = d3.select(this); 
		   var vData=[], xExtremo,yExtremo;
		   
		   element.append("circle")
			.attr("cx",0).attr("cy",0).attr("r",(_widthCell-2)/2)
			.style("fill","none")
			.style("stroke",_starColor[0])
			.style("stroke-width",0.2);


		   _vIndexMapAttr.forEach (function (d,i) {
				vData.push( {x:_glyphScale(element.data()[0].values[ _vIndexMapAttr[i] ]) * Math.cos(i * angSector ), 
							 y:_glyphScale(element.data()[0].values[ _vIndexMapAttr[i] ]) * Math.sin(i * angSector )} );
				xExtremo = (_widthCell-2)/2 * Math.cos(i * angSector );							 
				yExtremo = (_widthCell-2)/2 * Math.sin(i * angSector );
				
				element.append("line")				
					.attr("x1", 0)
					.attr("y1", 0)
					.attr("x2", xExtremo)
					.attr("y2", yExtremo)
//					.attr("x2", function (d) { return vData[i].x})  // Implementa��o anterior:  n�o desenha os eixos
//					.attr("y2", function (d) { return vData[i].y})
					.style("stroke",_starColor[0])
					.style("stroke-width",0.2 );
				
		   });
		   
		   element.append("path")
				  .attr("d", _drawPolyline(vData))
				  .attr("fill",_starBkColor[0])
				  .style("opacity", _starOpacity);		   
		});
		
/*		_vIndexMapAttr.forEach (function (d,i) {
				group.append("line")				
					.attr("x1", 0)
					.attr("y1", 0)
					.attr("x2", function (d) { return _glyphScale(d.values[ _vIndexMapAttr[i] ]) * Math.cos(i * angSector )})
					.attr("y2", function (d) { return _glyphScale(d.values[ _vIndexMapAttr[i] ]) * Math.sin(i * angSector )})
					.style("stroke", _starColor[0]);
		
		});
*/		
	};

	glyphStar.drawTooltip = function( grpGlyphTooltip, cell) { 
		var grpStarGlyph = grpGlyphTooltip.append("g").attr("transform", function() { return "translate(" + _xCenterTooltip +"," + _yCenterTooltip + ")"; });
//		grpStarGlyph.append("circle").attr("r",50);
		var angSector = 2 * Math.PI / _vIndexMapAttr.length;
		var xExtremo,yExtremo,angulo,valor;
		
		var vData=[];

		grpStarGlyph.append("circle")
			.attr("cx",0).attr("cy",0).attr("r",(_heightTooltip)/2)
			.style("fill","none")
			.style("stroke",_starColor[0])
			.style("stroke-width",0.2);
			
		_vIndexMapAttr.forEach (function (d,i) {
				vData.push( {x:_glyphScaleTooltip( cell.values[ _vIndexMapAttr[i] ]) * Math.cos(i * angSector ), 
							 y:_glyphScaleTooltip( cell.values[ _vIndexMapAttr[i] ]) * Math.sin(i * angSector )} );	
							 
				xExtremo = (_heightTooltip)/2 * Math.cos(i * angSector );							 
				yExtremo = (_heightTooltip)/2 * Math.sin(i * angSector );
				valor = cell.values[ _vIndexMapAttr[i]]; 
//				grpStarGlyph.append("text").text(cell.values[ _vIndexMapAttr[i] ])

				angulo = i*angSector;
				if (angulo==0) {
					grpStarGlyph.append("text").text(valor)
						.attr("x",xExtremo+3).attr("y",yExtremo+3)
						.style( "text-anchor","start");
					grpStarGlyph.append("text").text("  " + _data.edges[_vIndexMapAttr[i]])
						.attr("x",xExtremo+20).attr("y",yExtremo+3)
						.attr("class","MG-Tooltip-Attr")
						.style("text-anchor","start")
						.style( "fill","gray");						
				}
				else if (angulo < Math.PI/2) {
						grpStarGlyph.append("text").text(valor)
							.attr("x",xExtremo+3).attr("y",yExtremo+10)
							.style( "text-anchor","start");
						grpStarGlyph.append("text").text("  " + _data.edges[_vIndexMapAttr[i]])
							.attr("x",xExtremo+20).attr("y",yExtremo+10)
							.attr("class","MG-Tooltip-Attr")
							.style("text-anchor","start")
							.style("fill","gray");							
				}
				else if (angulo == Math.PI/2) {
						grpStarGlyph.append("text").text(valor)
							.attr("x",xExtremo-3).attr("y",yExtremo+10)
							.style( "text-anchor","start");
						grpStarGlyph.append("text").text("  " + _data.edges[_vIndexMapAttr[i]])
							.attr("x",xExtremo+17).attr("y",yExtremo+10)
							.attr("class","MG-Tooltip-Attr")
							.style("text-anchor","start")
							.style("fill","gray");							
				}
				else if (angulo < Math.PI) {
						grpStarGlyph.append("text").text(valor)
							.attr("x",xExtremo-3).attr("y",yExtremo+6)
							.style( "text-anchor","end");
						grpStarGlyph.append("text").text(_data.edges[_vIndexMapAttr[i]] + "  ")
							.attr("x",xExtremo-20).attr("y",yExtremo+6)
							.attr("class","MG-Tooltip-Attr")
							.style("text-anchor","end")
							.style("fill","gray");							
				}
				else if (angulo == Math.PI) {
						grpStarGlyph.append("text").text( valor)
							.attr("x",xExtremo-3).attr("y",yExtremo+3)
							.style( "text-anchor","end");
						grpStarGlyph.append("text").text(_data.edges[_vIndexMapAttr[i]] + "  ")
							.attr("x",xExtremo-23).attr("y",yExtremo+3)
							.attr("class","MG-Tooltip-Attr")
							.style("text-anchor","end")
							.style("fill","gray");							
				}
				else if (angulo < 3*Math.PI/2) {
						grpStarGlyph.append("text").text(valor)
							.attr("x",xExtremo-3).attr("y",yExtremo)
							.style( "text-anchor","end");
						grpStarGlyph.append("text").text(_data.edges[_vIndexMapAttr[i]] + "  ")
							.attr("x",xExtremo-20).attr("y",yExtremo)
							.attr("class","MG-Tooltip-Attr")
							.style("text-anchor","end")
							.style("fill","gray");							
				}
				else if (angulo == 3*Math.PI/2) {
						grpStarGlyph.append("text").text(valor)
							.attr("x",xExtremo-3).attr("y",yExtremo-3)
							.style( "text-anchor","start");
						grpStarGlyph.append("text").text("  " + _data.edges[_vIndexMapAttr[i]])
							.attr("x",xExtremo+17).attr("y",yExtremo-3)
							.attr("class","MG-Tooltip-Attr")
							.style("text-anchor","start")
							.style("fill","gray");							
				}
				else {
						grpStarGlyph.append("text").text(valor)
							.attr("x",xExtremo+3).attr("y",yExtremo-3)
							.style( "text-anchor","start");	
						grpStarGlyph.append("text").text("  " + _data.edges[_vIndexMapAttr[i]])
							.attr("x",xExtremo+20).attr("y",yExtremo-3)
							.attr("class","MG-Tooltip-Attr")
							.style("text-anchor","start")
							.style("fill","gray");							
				}
				
				grpStarGlyph.append("circle").attr("cx",vData[i].x).attr("cy",vData[i].y).attr("r",2);
							 
				grpStarGlyph.append("line")				
					.attr("x1", 0)
					.attr("y1", 0)
					.attr("x2", xExtremo)					
					.attr("y2", yExtremo)					
//					.attr("x2", function (d) { return vData[i].x})  // Implementa��o anterior:  n�o desenha os eixos
//					.attr("y2", function (d) { return vData[i].y})
					.style("stroke", _starColor[0])
					.style("stroke-width",0.2);							 
		   });
		   
		   grpStarGlyph.append("path")
				  .attr("d", _drawPolyline(vData)+"Z")
				  .attr("fill",_starBkColor[0])
				  .style("opacity", _starOpacity)
				  .style("stroke","black")
				  .style("stroke-width",1.5);		   	
	};
	
//------------------
	
    return _vGlyphs[_selectedGlyph]; 
  };

const mgeGlyphMatrixCss = ":host{display:block}.MG-TopLegend{cursor:default}.MG-LeftLegend{cursor:default}.MG-Tooltip{position:absolute;border-radius:4px;background-color:rgba(246,240,186,0.9);border:1px solid #c7b51a;font-family:sans-serif;font-size:10px;font-weight:bold;z-index:1000}.MG-Tooltip-Attr{font-family:sans-serif;font-size:9px;font-weight:normal}.DS-popup{position:absolute;left:0;top:0;background-color:#F0F0F0;width:72px;border:1px #ccc solid;border-radius:4px;box-shadow:#333 2px 2px 4px;padding:3px;z-index:1000;font-family:sans-serif;font-size:10px;font-weight:bold}.small-size{}.medium-size{}.big-size{}.DS-popup div{padding:3px 5px 3px 5px}.DS-popup div:hover{background-color:#FFF}";

class MgeGlyphMatrix {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.width = 350;
    this.height = 350;
    this.data = "[]";
    this.id = "[]";
    this._glyphStar = NumericGlyph(state.GLYPH_STAR);
    this._matrixGlyphPanel = null; // Representa o panel associado aao grafico
    this._cellGlyph = NumericGlyph(0); // objeto que representa o glifo associado a celula
    this._grpMatrixGlyph = null; // Grupo que representa todo o grafico
    this._grpOverview = null; // Grupo que representa o overview da matriz      
    this._grpLeftLegend = null;
    this._grpTopLegend = null;
    this._grpMatrix = null;
    this._grpDragLL = null;
    this._grpDragTL = null;
    this._grpDragMT = null;
    this._grpBarsLL = null; // Sele��o com todos os grupos das barras da legenda esquerda
    this._grpBarsTL = null;
    this._grpLines = null; // Cont�m as linhas com c�lulas em cada uma
    this._legend = {
      margin: 1,
      marginText: 1,
      width: 0,
      totalWidth: 0,
      fontHeight: 0,
      coordMin: 0 // Coordenada minima. Limitador do deslocamento da legenda para cima. Igual para x e y
    };
    this._overview = {
      rectBk: null,
      rectCur: null // Cursor
    };
    this._cell = {
      height: 0,
      heightMin: 10 // Usada para definir qtVisibleLinesMax (inclui a margem de 1px)
    };
    this._cellColorScaleDefault = ordinal(schemeCategory10);
    this._fCellColorMapDefault = (d) => {
      return this._cellColorMap.colorScale(d);
    };
    this._cellColorMap = {
      colorScale: this._cellColorScaleDefault,
      indexAttrColor: 0,
      fMap: this._fCellColorMapDefault
    };
    this._colors = {
      legendBk: "#F0D1B2",
      legendTxt: "black",
      overviewBk: "#F0D1B2",
      overviewCur: "#E6B280"
    };
    this._lines = {
      qtVisible: 0,
      qtMaxVisible: 0,
      qtMinVisible: 0,
      qtTotal: 0 // Quantidade total de linhas da matriz (calculado)
    };
    this._tooltips = {
      divTT: null,
      matrixCell: null,
      xCell: -1,
      yCell: -1 // Coluna da c�lula onde est� o tooltip. -1 Se n�o est� ativo      
    };
    this._matrixWidth = 0; // Largura da �rea da matriz (calculado)
    this._matrixHeight = 0; // Altura da �rea da matriz (calculado)
    this._idClipLeft = this.id + "l"; // Id da �rea de recorte da legenda esquerda
    this._idClipTop = this.id + "t"; // Id da �rea de recorte da legenda do topo
    this._idClipMatrix = this.id + "m"; // Id da �rea de recorte da matriz
    this._indexAttrSort = 0; // �ndice do atributo utilizado para o sort (0-primeiro labels[] 1000-primeiro values[])
    this._indexAttrLegend = 0; // �ndice do atributo que ser� impresso na legenda (nodo)
    this._vOrder = null; // Vetor indireto de ordenacao
    this._cellCoordScale = band(); // Escala usada para definir as coordenadas das c�lulas e elementos da legenda
    this._overviewScale = linear(); // Escala usada para definir as coordenada do cursor do overview
    this._dragListenerL = null; // Listener das legendas
    this._dragListenerM = null; // Listener da matriz  
    this.model = model();
    this.lcv = libCava();
    this._subGraph = this.lcv.subGraph();
    this._glyphStar.indexMapAttr([state.ATE_QtPublicacoes - 1000, state.ATE_QtProceedings - 1000, state.ATE_QtBooks - 1000, state.ATE_QtJournals - 1000]);
    
  }
  async addMatrixGlyph(idDiv, divTag) {
    this.model.margin = { top: 2, right: 2, bottom: 2, left: 2 };
    this.model.box = { width: this.width, height: this.height };
    this.model.pLegendWidth = 0.15; // Percentual da largura em rela��o ao this.model.widthChart
    this.model.pFontHeight = 0.0225; // Percentual da altura da fonte em rela�� ao this.model.widthChart
    this.model.redraw = 0; // Quando alterado executa um redesenho  
    // ---------------- Acoes de inicializacao
    var _svg = divTag.append("svg"), // Cria o svg sem dimensoes  
    _grpChart = _svg.append("g"); // Grupo que representa a �rea para o gr�fico,    
    this._sort = this.lcv.sort(); // Cria fun��o de ordena��o
    // Add zoom event
    let _zoomListener = zoom().on("zoom", _chartZoom);
    _zoomListener.scaleExtent([0.9, 1.1]);
    _svg.call(_zoomListener);
    this._tooltips.divTT = divTag.append("div")
      .style("display", "none")
      .classed("MG-Tooltip", true), // Tooltip para o nodo normal  
      this._dragListenerL = drag()
        .on("drag", this._chartDragLegend.bind(this))
        .on("end", this._chartDragendLegend.bind(this));
    this._dragListenerM = drag()
      .on("drag", this._chartDragMatrix.bind(this))
      .on("end", this._chartDragendMatrix.bind(this));
    // ==========  <CLIPPATH>    
    _grpChart.append("clipPath").attr("id", this._idClipTop).append("rect"); // ----- clipPath da legenda do topo                             
    _grpChart.append("clipPath").attr("id", this._idClipLeft).append("rect"); // ----- clipPath da legenda esquerda
    _grpChart.append("clipPath").attr("id", this._idClipMatrix).append("rect"); // ----- clipPath da matrix                               
    this._grpMatrixGlyph = _grpChart.append("g").attr("class", "MatrixGlyphChart");
    this._grpOverview = this._grpMatrixGlyph.append("g").attr("class", "MG-Overview");
    this._overview.rectBk = this._grpOverview.append("rect").style("fill", this._colors.overviewBk);
    this._overview.rectCur = this._grpOverview.append("rect").style("fill", this._colors.overviewCur);
    this._grpTopLegend = this._grpMatrixGlyph.append("g") // Grupo da legenda superior
      .attr("class", "MG-TopLegend")
      .attr("clip-path", "url(#" + this._idClipTop + ")");
    this._grpDragTL = this._grpTopLegend.selectAll("g")
      .data([{ x: 0, y: 0, cellsInv: 0, t: 0 }])
      .enter()
      .append("g").call(this._dragListenerL);
    this._grpLeftLegend = this._grpMatrixGlyph.append("g") // Grupo da legenda esquerda
      .attr("class", "MG-LeftLegend")
      .attr("clip-path", "url(#" + this._idClipLeft + ")");
    this._grpDragLL = this._grpLeftLegend.selectAll("g")
      .data([{ x: 0, y: 0, cellsInv: 0, t: 1 }])
      .enter()
      .append("g").call(this._dragListenerL);
    this._grpMatrix = this._grpMatrixGlyph.append("g") // Grupo da matriz
      .attr("class", "MG-Matrix")
      .attr("clip-path", "url(#" + this._idClipMatrix + ")");
    this._grpDragMT = this._grpMatrix.selectAll("g")
      .data([{ x: 0, y: 0, cellsInvX: 0, cellsInvY: 0 }])
      .enter()
      .append("g").call(this._dragListenerM);
    //===================================================
    this.model.when("box", function (box) {
      _svg.attr("width", box.width).attr("height", box.height);
    });
    //---------------------  
    this.model.when("margin", function (margin) {
      _grpChart.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    });
    //---------------------    
    this.model.when(["box", "margin"], (box, margin) => {
      this.model.widthChart = box.width - margin.left - margin.right,
        this.model.heightChart = box.height - margin.top - margin.bottom;
    });
    //---------------------
    this.model.when(["widthChart", "pLegendWidth"], (widthChart, pLegendWidth) => {
      this._legend.width = Math.round(this.model.widthChart * pLegendWidth);
      this._legend.totalWidth = this._legend.margin + this._legend.width;
      this._overviewScale.range([0, this._legend.totalWidth - 1]);
      this._matrixWidth = this.model.widthChart - this._legend.totalWidth;
      this._matrixHeight = this.model.heightChart - this._legend.totalWidth;
      this._calcVisibleLines();
      _grpChart.select("#" + this._idClipMatrix + " rect")
        .attr("width", this._matrixWidth)
        .attr("height", this._matrixHeight);
      _grpChart.select("#" + this._idClipLeft + " rect")
        .attr("width", this._legend.totalWidth)
        .attr("height", this._matrixHeight);
      _grpChart.select("#" + this._idClipTop + " rect")
        .attr("width", this._legend.totalWidth)
        .attr("height", this._matrixWidth);
      this.model.redraw += 1; // Para for�ar o redesenho      
    });
    //---------------------
    this.model.when(["widthChart", "pFontHeight"], (widthChart, pFontHeight) => {
      this._legend.fontHeight = widthChart * pFontHeight;
      this.model.redraw += 1; // Para for�ar o redesenho      
    });
    //--------------------- 
    this.model.when(["data", "widthChart", "heightChart", "redraw"], (data, widthChart, heightChart, redraw) => {
      // this._matrixGlyphPanel.update();  // Atualiza informa��es no painel associado a t�cnica   
      this._cellCoordScale.range([0, this._matrixWidth * this._lines.qtTotal / this._lines.qtVisible])
        .domain(this._vOrder);
      this._cell.height = this._calcHeightCell();
      this._legend.coordMin = this._matrixWidth - this._matrixWidth * this._lines.qtTotal / this._lines.qtVisible;
      this._overview.rectBk
        .attr("width", this._legend.totalWidth - 1)
        .attr("height", this._legend.totalWidth - 1);
      this._overview.rectCur
        .attr("x", this._overviewScale(-this._grpDragMT.datum().cellsInvX))
        .attr("y", this._overviewScale(-this._grpDragMT.datum().cellsInvY))
        .attr("width", this._overviewScale(this._lines.qtVisible))
        .attr("height", this._overviewScale(this._lines.qtVisible));
      this._grpLeftLegend.attr("transform", "translate(0," + this._legend.totalWidth + ")");
      this._grpDragLL.attr("transform", (d) => {
        d.y = d.cellsInv * this._cellCoordScale.bandwidth();
        return "translate(0," + d.y + ")";
      });
      this._grpTopLegend.attr("transform", "translate(" + this._legend.totalWidth + "," + this._legend.width + ") rotate(-90)");
      this._grpDragTL.attr("transform", (d) => {
        d.y = d.cellsInv * this._cellCoordScale.bandwidth();
        return "translate(0," + d.y + ")";
      });
      this._grpMatrix.attr("transform", "translate(" + this._legend.totalWidth + "," + this._legend.totalWidth + ")");
      this._grpDragMT.attr("transform", (d) => {
        d.x = d.cellsInvX * this._cellCoordScale.bandwidth();
        d.y = d.cellsInvY * this._cellCoordScale.bandwidth();
        return "translate(" + d.x + "," + d.y + ")";
      });
      this._appendLeftLegend(data);
      this._appendTopLegend(data);
      this._appendMatrix(data);
    });
    /**
     * Zoom event
     */
    function _chartZoom(event) {
      _zoomListener.scaleExtent([0.9, 1.1]);
      _grpChart.attr("transform", event.transform);
    }
  }
  _appendLeftLegend(data) {
    if (this._grpBarsLL != null)
      this._grpBarsLL.remove();
    this._grpBarsLL = this._grpDragLL.selectAll("g")
      .data(data.nodes.dataNodes)
      .enter()
      .append("g")
      .attr("transform", (d, i) => { return "translate(0," + this._cellCoordScale(i) + ")"; });
    this._grpBarsLL.append("rect")
      .attr("class", "GM-node")
      .attr("width", this._legend.width)
      .attr("height", this._cell.height)
      .style("fill", this._colors.legendBk);
    this._grpBarsLL.append("text")
      .attr("class", "GM-node")
      .attr("x", this._legend.marginText) // -3 margem do texto em rela��o ao ret�ngulo onde ele est� inserido            
      .attr("y", this._cellCoordScale.bandwidth() / 2) // Foi usado para centralizar o texto na linha da matriz
      .attr("dy", ".2em")
      .attr("text-anchor", "start")
      .style("font", this._legend.fontHeight + "px sans-serif")
      .style("fill", this._colors.legendTxt)
      .text((d, i) => { return this._adjustLengthText(d.labels[1], 12); })
      .append("title")
      .text(d => d.labels[1]);
  }
  /**
   * _textCentroid
   *
   * Adjusts the size of the text that will be printed in the centroid title
  */
  _adjustLengthText(stText, limit) {
    if (stText.length > limit)
      return stText.slice(0, limit) + "...";
    else
      return stText;
  }
  //---------------------    
  _appendTopLegend(data) {
    if (this._grpBarsTL != null)
      this._grpBarsTL.remove();
    this._grpBarsTL = this._grpDragTL.selectAll("g")
      .data(data.nodes.dataNodes)
      .enter()
      .append("g")
      .attr("transform", (d, i) => { return "translate(0," + this._cellCoordScale(i) + ")"; });
    this._grpBarsTL.append("rect")
      .attr("class", "GM-node")
      .attr("width", this._legend.width)
      .attr("height", this._cell.height)
      .style("fill", this._colors.legendBk);
    this._grpBarsTL.append("text")
      .attr("class", "GM-node")
      .attr("x", this._legend.marginText) // -3 margem do texto em rela��o ao ret�ngulo onde ele est� inserido            
      .attr("y", this._cellCoordScale.bandwidth() / 2) // Foi usado para centralizar o texto na linha da matriz
      .attr("dy", ".2em")
      .attr("text-anchor", "start")
      .style("font", this._legend.fontHeight + "px sans-serif")
      .style("fill", this._colors.legendTxt)
      .text((d, i) => { return this._adjustLengthText(d.labels[1], 12); })
      .append("title")
      .text(d => d.labels[1]);
  }
  //---------------------    
  _appendMatrix(data) {
    var globalThis = this;
    if (this._grpLines != null)
      this._grpLines.remove();
    this._cellGlyph.calcScale(this._cellCoordScale.bandwidth());
    this._grpLines = this._grpDragMT.selectAll("g")
      .data(data.matrix)
      .enter()
      .append("g")
      .attr("class", "MG-Line")
      .attr("transform", (d, i) => { return "translate(0," + this._cellCoordScale(i) + ")"; })
      .each(function (d, i) {
      drawCells(d, this, globalThis); // Desenha cada c�lula da matriz
    });
    function drawCells(d, elemThis, globalThis) {
      var cells = select(elemThis).selectAll(".MG-Cell")
        .data(d.filter(function (d) { return d.exist; })) // Seleciona as c�lulas que possuem dados
        .enter()
        .append("g")
        .attr("class", "MG-Cell")
        .attr("transform", (d, i) => { return "translate(" + globalThis._cellCoordScale(d.x) + ",0)"; }) // Inclui grupos de cada c�lula da linha
        .on("mouseenter", globalThis._onMouseEnterNode.bind(globalThis))
        .on("mouseleave", globalThis._onMouseLeaveNode.bind(globalThis));
      cells.append("rect")
        .attr("width", globalThis._calcHeightCell())
        .attr("height", globalThis._calcHeightCell())
        .style("fill", function (d) {
        if (globalThis._cellColorMap.indexAttrColor >= 1000) {
          return globalThis._cellColorMap.fMap(d.values[globalThis._cellColorMap.indexAttrColor - 1000]);
        }
        else
          return globalThis._cellColorMap.fMap(d.labels[globalThis._cellColorMap.indexAttrColor]);
      });
      globalThis._cellGlyph.draw(cells);
    }
  }
  /**
   * _onMouseOverNode
   */
  _onMouseEnterNode(event, d) {
    if (this._tooltips.matrixCell != null)
      this._tooltips.matrixCell.create(this._tooltips.divTT, d, event);
    //    console.log("Mouse over:" + d.x + "," + d.y);  
    //    if (_tooltips.xCell == -1) {
    //      _tooltips.xCell = d.x;
    //      _tooltips.yCell = d.y;
    //      console.log("Mouse over");    
    //    }      
  }
  /**
   * _onMouseOutNode
   */
  _onMouseLeaveNode(event, d) {
    if (this._tooltips.matrixCell != null)
      this._tooltips.matrixCell.remove();
    //    if (_tooltips.xCell != d.x || _tooltips.yCell != d.y) {
    //      _tooltips.xCell = _tooltips.yCell  = -1;
    //        console.log(this);
    //    }
  }
  /**
   * _calcVisibleLines
   *
   * Determina os limites para as linhas visiveis
   */
  _calcVisibleLines() {
    this._lines.qtMaxVisible = Math.floor(this._matrixHeight / this._cell.heightMin);
    if (this._lines.qtMaxVisible > 3)
      this._lines.qtMinVisible = 3;
    else
      this._lines.qtMinVisible = 1;
    if (this._lines.qtMaxVisible > this._lines.qtTotal)
      this._lines.qtMaxVisible = this._lines.qtTotal;
    if (this._lines.qtMaxVisible < this._lines.qtVisible && this._lines.qtMaxVisible != 0)
      this._lines.qtVisible = this._lines.qtMaxVisible;
  }
  ;
  /**
   * _calcHeightCell
   *
   * Calcula a altura/largura da c�lula. � a mesma para as barras da legenda
   */
  _calcHeightCell() {
    var h = this._cellCoordScale.bandwidth();
    if (h > 2)
      h -= 1; // Ajusta para margem de 1 px entre c�lulas
    return h;
  }
  ;
  /**
   * _limCoord
   *
   * Limita o valor da coordenada
   */
  _limCoord(coord) {
    if (coord < this._legend.coordMin)
      return this._legend.coordMin;
    else if (coord > 0)
      return 0;
    else
      return coord;
  }
  ;
  _chartDragLegend(event, d) {
    var temp;
    d.y += event.dy;
    d.y = this._limCoord(d.y);
    select(this).attr("transform", "translate(0," + d.y + ")");
    temp = this._grpDragMT.datum();
    if (d.t == 0) {
      temp.x = d.y;
      this._overview.rectCur.attr("x", this._overviewScale(-Math.round(d.y / this._cellCoordScale.bandwidth())));
    }
    else {
      temp.y = d.y;
      this._overview.rectCur.attr("y", this._overviewScale(-Math.round(d.y / this._cellCoordScale.bandwidth())));
    }
    this._grpDragMT.attr("transform", "translate(" + temp.x + "," + temp.y + ")");
  }
  _chartDragendLegend(event, d) {
    var temp;
    d.cellsInv = Math.round(d.y / this._cellCoordScale.bandwidth());
    d.y = d.cellsInv * this._cellCoordScale.bandwidth();
    select(this).attr("transform", "translate(0," + d.y + ")");
    temp = this._grpDragMT.datum();
    if (d.t == 0) {
      temp.x = d.y;
      temp.cellsInvX = d.cellsInv;
    }
    else {
      temp.y = d.y;
      temp.cellsInvY = d.cellsInv;
    }
    this._grpDragMT.attr("transform", "translate(" + temp.x + "," + temp.y + ")");
  }
  _chartDragMatrix(event, d) {
    d.x += event.dx;
    d.x = this._limCoord(d.x);
    d.y += event.dy;
    d.y = this._limCoord(d.y);
    this._grpDragMT.attr("transform", "translate(" + d.x + "," + d.y + ")");
    this._grpDragLL.datum().y = d.y;
    this._grpDragTL.datum().y = d.x;
    this._overview.rectCur
      .attr("x", this._overviewScale(-Math.round(d.x / this._cellCoordScale.bandwidth())))
      .attr("y", this._overviewScale(-Math.round(d.y / this._cellCoordScale.bandwidth())));
    this._grpDragLL.attr("transform", "translate(0," + d.y + ")");
    this._grpDragTL.attr("transform", "translate(0," + d.x + ")");
  }
  _chartDragendMatrix(event, d) {
    d.cellsInvX = Math.round(d.x / this._cellCoordScale.bandwidth());
    d.cellsInvY = Math.round(d.y / this._cellCoordScale.bandwidth());
    d.x = d.cellsInvX * this._cellCoordScale.bandwidth();
    d.y = d.cellsInvY * this._cellCoordScale.bandwidth();
    this._grpDragMT.attr("transform", "translate(" + d.x + "," + d.y + ")");
    this._grpDragLL.attr("transform", "translate(0," + d.y + ")");
    this._grpDragTL.attr("transform", "translate(0," + d.x + ")");
  }
  //---------------------
  async setBox(_) {
    if (!arguments.length)
      return this.model.box;
    this.model.box = _;
  }
  //---------------------
  // Essa fun��o � necess�rio em todas as t�cnicas
  // � chamada internamente na conectChart 
  async setPanel(_) {
    if (!arguments.length)
      return this._matrixGlyphPanel;
    this._matrixGlyphPanel = _;
  }
  //---------------------
  async setData(_) {
    var qtLabel = 0, qtValue = 0;
    if (!arguments.length)
      return this.model.data;
    if (_.cluster) {
      _ = this._subGraph.clusterMatrixGlyph(_, state._data);
    }
    else {
      _ = this._subGraph.normalMatrixGlyph(_, state._data);
    }
    this.model.data = _;
    if (this.model.data.nodes.labelTitle != null)
      qtLabel = this.model.data.nodes.labelTitle.length;
    if (this.model.data.nodes.valueTitle != null)
      qtValue = this.model.data.nodes.valueTitle.length;
    this._sort.inic(qtLabel, qtValue).data(this.model.data.nodes.dataNodes);
    this._sort.exec(this._indexAttrSort);
    this._vOrder = this._sort.getVetOrder();
    this._lines.qtTotal = this.model.data.nodes.dataNodes.length;
    this._lines.qtVisible = this.model.data.nodes.dataNodes.length;
    this._overviewScale.domain([0, this._lines.qtTotal]);
    this._calcVisibleLines();
    this._grpDragTL.datum({ x: 0, y: 0, cellsInv: 0, t: 0 });
    this._grpDragLL.datum({ x: 0, y: 0, cellsInv: 0, t: 1 });
    this._grpDragMT.datum({ x: 0, y: 0, cellsInvX: 0, cellsInvY: 0 });
    this._cellGlyph.data(_);
    if (this._matrixGlyphPanel != null)
      this._matrixGlyphPanel.updateSelect();
  }
  //---------------------   
  async indexAttrSort(_) {
    if (!arguments.length)
      return this._indexAttrSort;
    this._indexAttrSort = _;
  }
  //---------------------   
  async indexAttrLegend(_) {
    if (!arguments.length)
      return this._indexAttrLegend;
    this._indexAttrLegend = _;
  }
  //---------------------   
  async indexAttrCellColor(_) {
    if (!arguments.length)
      return this._cellColorMap.indexAttrColor;
    this._cellColorMap.indexAttrColor = _;
  }
  //---------------------   
  async pLegendWidth(_) {
    if (!arguments.length)
      return this.model.pLegendWidth;
    this.model.pLegendWidth = _;
  }
  //---------------------   
  async cellColorsMap(colors) {
    if (!arguments.length) {
      this._cellColorMap.colorScale = this._cellColorScaleDefault;
      this._cellColorMap.fMap = this._fCellColorMapDefault;
    }
    else if (typeof colors === "function")
      this._cellColorMap.fMap = colors;
    else {
      this._cellColorMap.colorScale = ordinal().domain(range(colors.length)).range(colors);
    }
  }
  //---------------------   
  async setTTMatrixCell(_) {
    this._tooltips.matrixCell = _;
  }
  //---------------------   
  async getMaxVisibleLines() {
    return this._lines.qtMaxVisible;
  }
  //---------------------   
  async getMinVisibleLines() {
    return this._lines.qtMinVisible;
  }
  //---------------------   
  async getVisibleLines() {
    return this._lines.qtVisible;
  }
  async debug() {
    console.log(">>>>>DEBUG");
    console.log(this._lines);
    console.log(this._matrixHeight);
    console.log(this._legend);
    console.log(this.model.heightChart);
  }
  //---------------------   
  async pFontHeight(_) {
    if (!arguments.length)
      return this.model.pFontHeight;
    this.model.pFontHeight = _;
  }
  //---------------------   
  async glyph(_) {
    if (!arguments.length)
      return this._cellGlyph;
    this._cellGlyph = _;
  }
  /*
      //---------------------
    chart.setGlyph = function(idGlyph) {
      _cellGlyph = NumericGlyph(idGlyph);
      return chart;
    }
  
    
      //---------------------
    chart.glyphIndexMapAttr = function(vet) {
      _cellGlyph.indexMapAttr(vet);
      return chart;
    }
  */
  //======== Fun�oes de a��es   
  async acSortExec(_) {
    this._indexAttrSort = _;
    this._sort.exec(this._indexAttrSort);
    this._vOrder = this._sort.getVetOrder();
    this._cellCoordScale.domain(this._vOrder);
    this._grpBarsLL.transition().duration(800)
      .attr("transform", function (d, i) { return "translate(0," + this._cellCoordScale(i) + ")"; });
    this._grpBarsTL.transition().duration(800)
      .attr("transform", function (d, i) { return "translate(0," + this._cellCoordScale(i) + ")"; });
    this._grpLines.transition().duration(800)
      .attr("transform", function (d, i) { return "translate(0," + this._cellCoordScale(i) + ")"; })
      .selectAll(".MG-Cell")
      .attr("transform", function (d, i) { return "translate(" + this._cellCoordScale(d.x) + ",0)"; });
  }
  //---------------------     
  async acChangeAttrLegend(_) {
    this._indexAttrLegend = _;
    this._grpBarsLL.selectAll("text")
      .text((d, i) => { return d.labels[this._indexAttrLegend]; });
    this._grpBarsTL
      .selectAll("text")
      .text((d, i) => { return d.labels[this._indexAttrLegend]; });
  }
  //---------------------   
  async acChangeVisibleLines(qtLines) {
    var tempTL = this._grpDragTL.datum(), tempLL = this._grpDragLL.datum(), tempMT = this._grpDragMT.datum(), dLines = qtLines - this._lines.qtVisible;
    tempTL.cellsInv = calcCellsInv(dLines, tempTL.cellsInv);
    tempLL.cellsInv = calcCellsInv(dLines, tempLL.cellsInv);
    tempMT.cellsInvX = tempTL.cellsInv;
    tempMT.cellsInvY = tempLL.cellsInv;
    this._lines.qtVisible = qtLines;
    this.model.redraw += 1;
    function calcCellsInv(dLines, cellsInv) {
      if (dLines > this._lines.qtTotal - this._lines.qtVisible + cellsInv)
        return (qtLines - this._lines.qtTotal); // cellsInv possui valor negativo  
      return cellsInv;
    }
  }
  buildChart(idDiv, svg) {
    this.addMatrixGlyph(idDiv, svg);
    this.setBox(this.model.box);
    this.indexAttrSort(0); // Numeric attribute 0. Must be before date ()
    this.indexAttrLegend(0); //  Must be before date ()
    this.indexAttrCellColor(1001);
    this.glyph(this._glyphStar);
    this.cellColorsMap(["#99E6E6"]);
    // this.setData(this.chartData);
    this.setTTMatrixCell(libCava().tooltips().matrixCell(this.chartData, this._glyphStar, state.ATN_AuthorName));
    // console.log(this._chart);
    // this._chart().data(this.chartData);
  }
  componentWillLoad() {
  }
  componentDidLoad() {
    let svg = select(this.element.querySelectorAll(".glyph-matrix")[0])
      .attr("width", this.width)
      .attr("height", this.height);
    // console.log(this.id)
    // this._nodeEdgeLegend.create(this.id)
    this.buildChart("glyph-matrix", svg);
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "glyph-matrix" })));
  }
  get element() { return getElement(this); }
  static get style() { return mgeGlyphMatrixCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "mge-glyph-matrix",
    "$members$": {
      "width": [2],
      "height": [2],
      "data": [1],
      "id": [1],
      "addMatrixGlyph": [64],
      "setBox": [64],
      "setPanel": [64],
      "setData": [64],
      "indexAttrSort": [64],
      "indexAttrLegend": [64],
      "indexAttrCellColor": [64],
      "pLegendWidth": [64],
      "cellColorsMap": [64],
      "setTTMatrixCell": [64],
      "getMaxVisibleLines": [64],
      "getMinVisibleLines": [64],
      "getVisibleLines": [64],
      "debug": [64],
      "pFontHeight": [64],
      "glyph": [64],
      "acSortExec": [64],
      "acChangeAttrLegend": [64],
      "acChangeVisibleLines": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const mgeHistoryCss = ":host{display:block}.HT-grpNodos{cursor:pointer}.HT-grpRoot rect{cursor:default}.HT-grpNodos rect{fill:#c8daea;stroke:steelblue;stroke-width:1.5px}.HT-grpNodos text{font-size:10px;font-family:sans-serif;font-weight:bold;cursor:move}.HistoryTreeChart{cursor:move}.HT-NodeHidden text{fill:gray;font-size:10px;font-family:sans-serif}.HT-NodeHidden rect{fill:#f0f0f0;stroke:gray}";

class MgeHistory {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.width = 350;
    this.height = 250;
    this.tree = "{}";
    this.historyTreePanel = null; // Represents the panel associated with the graphic
    this._nodoHeight = 14; // Space height for each node without the margins
    this._leftText = 18; // Distance from the text to the left coordinate of the node
    this._nodeMargin = 1;
    this._rectHeight = this._nodoHeight - this._nodeMargin * 2;
    this._treeLayout = tree().size([0, this._nodoHeight]);
    this._vNodes = []; // Vector with objects of all nodes
    this._dashboard = null;
    this._grpHistory = null; // Group representing history tree
    this._grpNodes = null;
    this.model = model();
    this._dashboard = document.querySelector("mge-dashboard");
    this.chartData = JSON.parse(this.tree);
  }
  watchHandler(newValue, oldValue) {
    this.setData(newValue);
  }
  async setTree(newTree) {
    this.tree = newTree;
    this.setData(newTree);
  }
  async addHistoryTreeChart(idDiv, divTag) {
    this.model.margin = { top: 4, right: 4, bottom: 4, left: 4 };
    this.model.box = { width: this.width, height: this.height };
    let _svg = divTag.append("svg"), // Create dimensionless svg
    _grpChart = _svg.append("g"); // Does not exist in the original Iris
    this._grpHistory = _grpChart.append("g").attr("class", "HistoryTreeChart");
    // Add zoom event
    let _zoomListener = zoom().on("zoom", _chartZoom);
    _zoomListener.scaleExtent([0.9, 1.1]);
    _svg.call(_zoomListener);
    this.model.when(["box", "margin"], (box, margin) => {
      this.model.widthChart = box.width - margin.left - margin.right;
      this.model.heightChart = box.height - margin.top - margin.bottom;
    });
    this.model.when("box", function (box) {
      _svg.attr("width", box.width).attr("height", box.height);
    });
    //---------------------
    this.model.when("margin", function (margin) {
      _grpChart.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    });
    //---------------------
    this.model.when(["data"], () => {
      this._appendNodos();
    });
    function _chartZoom(event) {
      _zoomListener.scaleExtent([0.9, 1.1]);
      _grpChart.attr("transform", event.transform);
    }
  }
  _appendNodos() {
    if (this._grpNodes != null)
      this._grpNodes.remove();
    this._grpNodes = this._grpHistory.selectAll(".HT-grpNodos")
      .data(this._vNodes)
      .enter()
      .append("g")
      .attr("class", function (d) {
      if (d.data.id === "chart-history")
        return "HT-grpNodos HT-grpRoot";
      else
        return "HT-grpNodos";
    })
      .attr("transform", function (d) { return "translate(" + d.y + "," + d.x + ")"; })
      .classed("HT-NodeHidden", function (d) { return d.data.hidden; });
    this._grpNodes.append("rect")
      .attr("x", this._nodeMargin)
      .attr("y", this._nodeMargin)
      .attr("height", this._rectHeight)
      .attr("width", this._rectHeight)
      .on("click", async (event, d) => {
      if (d.data.id !== "chart-history") {
        if (!d.data.hidden) {
          await this._dashboard.closeView(d.data.view);
        }
        else {
          await this._dashboard.showView(d.data.view);
        }
        this._grpNodes.classed("HT-NodeHidden", function (d) { return d.data.hidden; });
      }
    });
    this._grpNodes.append("text")
      .attr("x", this._leftText)
      .attr("y", this._nodoHeight / 2 + 3)
      .attr("text-anchor", "start")
      .text(function (d) {
      return d.data.title;
    });
  }
  async setBox(_) {
    if (!arguments.length)
      return this.model.box;
    this.model.box = _;
  }
  ;
  async getBox(_) {
    return this.model.box;
  }
  ;
  async setData(_) {
    if (!arguments.length)
      return this.model.data;
    this.model.data = _;
    this._vNodes = this._treeLayout(hierarchy(this.model.data)).descendants();
    this._vNodes.forEach((n, i) => {
      n.x = i * this._nodoHeight;
    });
    // _irisPanel.update();
    // setupPrimaryVersion();
  }
  ;
  componentWillLoad() {
    this.setBox(this.model.box);
    // this.setData(this.chartData);
  }
  // componentWillUpdate(){
  //     this.watchHandler
  // }
  buildChart(idDiv, svg) {
    this.addHistoryTreeChart(idDiv, svg);
  }
  componentDidLoad() {
    let svg = select(this.element.querySelectorAll(".history-tree")[0])
      .attr("width", this.width)
      .attr("height", this.height);
    this.buildChart("history-tree", svg);
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "history-tree" })));
  }
  get element() { return getElement(this); }
  static get watchers() { return {
    "tree": ["watchHandler"]
  }; }
  static get style() { return mgeHistoryCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "mge-history",
    "$members$": {
      "width": [2],
      "height": [2],
      "tree": [1025],
      "setTree": [64],
      "addHistoryTreeChart": [64],
      "setBox": [64],
      "getBox": [64],
      "setData": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const mgeIrisCss = ":host{display:block}@CHARSET \"UTF-8\"; .iris{}.IrisChart{font-family:sans-serif;font-size:10px;}.IC-centroidBack{stroke:blue;stroke-width:0.5;fill:#D8F2FF}.IC-centroidTitle,.IC-centroidSubtitle{text-anchor:middle;font-weight:bold;fill:black}.IC-centroidDegree,.IC-totalLabel{text-anchor:middle;fill:black}.IC-focus{fill:rgb(210,210,210)}.IC-bars{stroke:black;stroke-width:0.25;cursor:pointer}.IC-grpBar text.IC-active{fill:#F48D2E}.IC-grpBar text{fill:black;font-family:Arial;font-weight:bold;cursor:pointer}.IC-panel{font-family:sans-serif;font-size:10px;font-weight:bold;cursor:move}.IC-panel select{font-family:sans-serif;font-size:10px;background:#f8f8f8}.DS-popup{position:absolute;left:0;top:0;background-color:#F0F0F0;width:72px;border:1px #ccc solid;border-radius:4px;box-shadow:#333 2px 2px 4px;padding:3px;z-index:1000;font-family:sans-serif;font-size:10px;font-weight:bold}.small-size{}.medium-size{}.big-size{}.DS-popup div{padding:3px 5px 3px 5px}.DS-popup div:hover{background-color:#FFF}";

class MgeIris {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.width = 350;
    this.height = 350;
    this.data = "[]";
    // ---------------- Model
    this.model = model();
    this.lcv = libCava();
    this._sort = this.lcv.sortIris();
    this._subGraph = this.lcv.subGraph();
    this._irisPanel = null; // represents the panel associated with the graph
    this._sortByText = true;
    this._xIrisCenter = 0;
    this._yIrisCenter = 0;
    this._innerRadius = 0; // (calculated) radius of the circle where the centroid is inserted
    this._outerRadius = 0;
    this._maxHeightBar = 0; // (calculated) distance occupied by the bars - Change causes change in the maximum number of bars of the Iris - Original 40
    this._numTotalBars = 0;
    this._numMaxBars = 0;
    this._grpIris = null; // Group representing IRIS
    this._grpBars = null; // Selection that contains all groups of bars
    this._dataVis = []; // Vector of visible data. Points to the elements of model.data (has the attributes "angle" and "index")
    this._indexFirstData = 0; // Index in the "dataVis" vector where the first element of the data vector is located
    // Used only when the amount of elements in this.data is less than or equal to "dataVis"
    this._pDesloc = 0.08; // Percentage of center displacement
    this._vOrder = null; // Indirect ordering vector
    this._orders = {
      publications: [0, 1, 2, 3],
      journals: [1, 2, 3, 0],
      books: [2, 3, 0, 1],
      proceedings: [3, 0, 1, 2],
    },
      this._focusArea = {
        widthBar: 0,
        angleBar: 0.0,
        marginBar: 1,
        angleSector: 0.0,
        indexCenter: 0,
        numBars: 7 // Number of bars in focus (best odd number)
      },
      //_updateIndexCenter = true,   // Indicates that IndexCenter should be updated
      this._fishEyeArea = {
        geometry: [{ width: 0.0, angle: 0.0 }],
        marginBar: 1,
        numBars: 0,
        angleSector: 0.0 // (calculated) Sum of the angle of all bars forming the fish eye area
      },
      this._minArea = {
        widthBar: 0,
        angleBar: 0.0,
        marginBar: 1,
        numBars: 0,
        angleSector: 0.0 // (calculated)
      },
      this._hiddenArea = {
        widthBar: 0,
        angleBar: 0.0,
        numBars: 1,
        angleSector: 0.0 // (calculated) Sector angle occupied by hidden area
      },
      this._cfgIndexAttr = {
        titleCentroid: 0,
        titleDegree: "co-authors",
        textBar: 0 // Text that will be printed after the bars
      },
      this._nbOfTypesDoc = 4, // number of types of documents in the base
      this._colorsBars = ["#1f77b4", "#2ca02c", "#d62728", "#ff7d0e"]; // colors for the different types
  }
  async setBox(_) {
    if (!arguments.length)
      return this.model.box;
    this.model.box = _;
  }
  ;
  async getBox(_) {
    return this.model.box;
  }
  ;
  //---------------------
  async setpInnerRadius(_) {
    if (!arguments.length)
      return this.model.pInnerRadius;
    this.model.pInnerRadius = _;
  }
  ;
  //---------------------
  async setpOuterRadius(_) {
    if (!arguments.length)
      return this.model.pOuterRadius;
    this.model.pOuterRadius = _;
  }
  ;
  //---------------------
  async setpMaxHeightBar(_) {
    if (!arguments.length)
      return this.model.pMaxHeightBar;
    this.model.pMaxHeightBar = _;
  }
  ;
  //---------------------
  // This function is required in all techniques
  // It is called internally in conectChart
  async setPanel(_) {
    if (!arguments.length)
      return this._irisPanel;
    this._irisPanel = _;
  }
  ;
  //---------------------
  async setData(_) {
    if (!arguments.length)
      return this.model.data;
    console.log(this._subGraph.normalIris(_, state._data));
    this.model.data = this._subGraph.normalIris(_, state._data);
    // Configure to sort node names
    this._sort.inic(this.model.data.children.labelTitle.length, this.model.data.children.valueTitle.length)
      .data(this.model.data.children.data);
    this._sort.exec(this._cfgIndexAttr.textBar);
    this._vOrder = this._sort.getVetOrder();
    // _irisPanel.update();
  }
  ;
  //---------------------
  // Configure the data that will be printed in the centroid and the text of the bar (Label only)
  async setConfigCentroid(titulo, tituloGrau, textoBarra) {
    this._cfgIndexAttr.titleCentroid = titulo;
    this._cfgIndexAttr.titleDegree = tituloGrau;
    this._cfgIndexAttr.textBar = textoBarra;
  }
  ;
  //---------------------
  async dataVisToNode(index) {
    return this.model.data.children.data[index];
  }
  ;
  async getSourceObject() {
    return this.model.data.root.data;
  }
  ;
  //---------------------
  async setIndexAttrBar(_) {
    if (!arguments.length)
      return this.model.indexAttBar + 1000;
    this.model.indexAttBar = _ - 1000;
  }
  ;
  async getVOrder() {
    return this._vOrder;
  }
  ;
  //======== Actions Functions
  async acSortExecText() {
    this._sortByText = true;
    this._sort.exec(this._cfgIndexAttr.textBar);
    this._vOrder = this._sort.getVetOrder();
    this.model.redraw += 1;
  }
  ;
  //---------------------
  async acSortExecAttribute() {
    this._sortByText = false;
    this._sort.exec(this.model.indexAttBar + 1000);
    this._vOrder = this._sort.getVetOrder();
    this.model.redraw += 1;
  }
  ;
  async putBarsOnIris() {
    var that = this;
    var __grpBars = this._grpIris.selectAll(".IC-grpBar")
      .data(this._dataVis)
      .enter()
      .append("g")
      .attr("class", "IC-grpBar")
      .attr("transform", function (d) { return "rotate(" + d.angleRot + ")"; });
    that._grpBars = __grpBars.on("click", function (event, d) {
      const e = __grpBars.nodes();
      const i = e.indexOf(this);
      if (i > that._focusArea.indexCenter) {
        that.chartRotate(i - that._focusArea.indexCenter, 1, i - 1);
      }
      else {
        that.chartRotate(that._focusArea.indexCenter - i, -1, i + 1);
      }
    });
    let order = this._getTheRightOrder(this.model.indexAttBar);
    // console.log(order);
    for (let j = 0; j < order.length; j++) {
      let previous = ((order[j] - 1 + this._nbOfTypesDoc) % this._nbOfTypesDoc);
      this._grpBars.append("rect")
        .attr("class", "IC-bars")
        .attr("x", (d) => {
        let prevWidth = 0;
        if (j !== 0) {
          prevWidth = this._calcXBar(d, previous, this.model.indexAttBar);
        }
        return this._innerRadius + prevWidth;
      })
        .attr("y", function (d) { return Math.round(-d.width / 2); })
        .attr("height", (d) => { return d.width; })
        .attr("width", (d) => { return this._calcWidthBar(d, order[j]); })
        .attr("fill", this._colorsBars[order[j]])
        .append("title")
        .text((d) => { return this._tooltip(d, order[j]); });
    }
    this._grpBars.append("text")
      .attr("class", "IC-node")
      .text((d) => { return this._text(d); })
      .attr("x", this._innerRadius + this._maxHeightBar)
      .attr("y", function (d) { return d.widthText / 2 * 0.48; })
      .classed("IC-active", (d, i) => { return this._focusArea.indexCenter === i; })
      .style("font-size", function (d) { return (d.widthText * 0.55) + "px"; }) // Size reduced by 30%
      .append("title")
      .text((d) => { return this._tooltipComplete(d); });
  }
  ;
  chartRotate(qtBars, dir, origin) {
    if (qtBars !== 0) {
      this.moveDataVis(this._focusArea.indexCenter + dir, this._focusArea.indexCenter);
      this._grpBars.remove();
      this.putBarsOnIris();
      setTimeout(() => {
        this.chartRotate(qtBars - 1, dir, origin - dir);
      }, 45);
    }
  }
  ;
  moveDataVis(source, target) {
    let i, index, sizeData;
    sizeData = this.model.data.children.data.length;
    if (sizeData >= this._dataVis.length) {
      index = (sizeData + this._dataVis[source].indexData - target) % sizeData;
      for (i = 0; i < this._dataVis.length; i++) {
        this._dataVis[i].indexData = index;
        index = (index + 1) % sizeData;
      }
    }
    else {
      index = (this._indexFirstData - source + target + this._dataVis.length) % this._dataVis.length;
      this._indexFirstData = index;
      for (i = 0; i < this._dataVis.length; i++)
        this._dataVis[i].indexData = -1;
      for (i = 0; i < sizeData; i++) {
        this._dataVis[index].indexData = i;
        index = (index + 1) % this._dataVis.length;
      }
    }
  }
  ;
  //---------------------
  acChangeAttrBar(atributo) {
    this.model.indexAttBar = atributo;
    this._grpBars.remove();
    this.putBarsOnIris();
    /*if ( !_sortByText) {
        _sort.exec(model.indexAttBar+1000);
        _vOrder = _sort.getVetOrder();
    }*/
  }
  ;
  /**
        *
        * _getTheRightOrder
        *
        * Returns the order in which we need to display the types of documents
        *
        * @param i
        * @returns {number[]}
        * @private
        */
  _getTheRightOrder(i) {
    switch (i) {
      case 0:
        return this._orders.publications;
      case 1:
        return this._orders.journals;
      case 2:
        return this._orders.books;
      case 3:
        return this._orders.proceedings;
    }
  }
  ;
  /**
   * _calcWidthBar
   *
   * Calculates the bar width of the chart
   * If there is no slash (d.indexData == -1) do not draw
   */
  _calcWidthBar(d, i) {
    if (d.indexData !== -1) {
      return this.model.barScale(this.model.data.children.data[this._vOrder[d.indexData]].edge.values[i]);
    }
    else
      return 0; // Do not draw the rectangle
  }
  ;
  /**
   *
   * _calcXBar
   *
   * Calculates the x position of the bar
   *
   * @param d
   * @param beginning
   * @param end
   * @returns {number}
   * @private
   */
  _calcXBar(d, beginning, end) {
    let order = this._getTheRightOrder(end);
    let start = 0;
    if (beginning < end) {
      let i = 0;
      beginning = beginning + this._nbOfTypesDoc;
      while (beginning >= end) {
        start += this._calcWidthBar(d, order[i]);
        beginning--;
        i++;
      }
    }
    else {
      while (beginning >= end) {
        start += this._calcWidthBar(d, beginning);
        beginning--;
      }
    }
    return start;
  }
  /**
   * _text
   *
   * returns the text associated with the slash
   *   number + " " + name
   */
  _text(d) {
    if (d.indexData !== -1)
      return this._adjustLengthText(this.model.data.children.data[this._vOrder[d.indexData]].labels[1], 20);
    else
      return "";
  }
  /**
   * _textCentroid
   *
   * Adjusts the size of the text that will be printed in the centroid title
   */
  _adjustLengthText(stText, limit) {
    if (stText.length > limit)
      return stText.slice(0, limit) + "...";
    else
      return stText;
  }
  /**
   * _tooltip
   *
   * returns the tooltip associated with the toolbar
   *
   */
  _tooltip(d, i) {
    // console.log("flag");
    if (d.indexData !== -1) {
      return this.model.data.children.data[this._vOrder[d.indexData]].labels[1] + "\n" + // Full name
        this.model.data.edges.valueTitle[i] + ": " +
        this.model.data.children.data[this._vOrder[d.indexData]].edge.values[i];
    }
    else
      return ""; // Empty Tooltip
  }
  /**
   * _tooltipComplete
   *
   * returns the complete tooltip associated with the toolbar group
   *
   */
  _tooltipComplete(d) {
    if (d.indexData !== -1) {
      let result = this.model.data.children.data[this._vOrder[d.indexData]].labels[1] + "\n";
      let j;
      for (j = 0; j < this._nbOfTypesDoc; j++) {
        result += this.model.data.edges.valueTitle[j] + ": " +
          this.model.data.children.data[this._vOrder[d.indexData]].edge.values[j] + "\n";
      }
      return result;
    }
    else
      return ""; // Empty Tooltip
  }
  /**
   * _angleToWidth
   *
   * Calculates the width of the circle string from the angle (degrees) and radius
   * E: angle, radius
   * S: width
   */
  _angleToWidth(angle, radius) {
    return 2 * radius * Math.sin(angle * Math.PI / 360.0);
  }
  /**
   * _widthToAngle
   *
   * Calculates the angle of the occupied sector by a width
   * E: width, radius
   * S: angle in degrees
   */
  _widthToAngle(width, radius) {
    return Math.acos(1.0 - width * width / (2 * radius * radius)) * 180.0 / Math.PI;
  }
  /**
   * _degreeToRadian
   *
   * Converts an angle from degrees to radians
   */
  _degreeToRadian(angle) {
    return angle * Math.PI / 180;
  }
  _calcGeometry() {
    this.i_CalcFocusArea();
    this.i_CalcFishEyeArea();
    this.i_CalcHiddenArea();
    this.i_CalcMinArea(); // It should be the last one to be calculated as it is the area left over
    // Recalculates the sector angle of the hidden area
    // adding what's missing to 360 degrees
    this._hiddenArea.angleSector = 360 - this._fishEyeArea.angleSector * 2 - this._focusArea.angleSector - this._minArea.angleSector * 2;
    // The calculation of the number of bars must be performed after the calculation of the area elements
    this._numMaxBars = this._focusArea.numBars + 2 * this._fishEyeArea.numBars + 2 * this._minArea.numBars;
    this._numTotalBars = this.model.data.children.data.length; // number of coauthors of the selected author
    // The calculation of the index in the dataVis vector where the center of the focus is to be calculated after the elements of the areas
    this._focusArea.indexCenter = this._minArea.numBars + this._fishEyeArea.numBars + Math.floor(this._focusArea.numBars / 2);
    // Initializes the dataVis vector with capacity for the maximum number of bars
    // Do not associate the dataVis with the data vector (indicated by the value -1 in the indices)
    // console.log(i_BindDataVisToData);
    this.i_InicDataVisVector();
    this.i_BindDataVisToData();
  }
  //--------
  i_CalcFocusArea() {
    this._focusArea.angleBar = this._widthToAngle(this._focusArea.widthBar + this._focusArea.marginBar, this._innerRadius);
    this._focusArea.angleSector = this._focusArea.angleBar * this._focusArea.numBars;
  }
  //--------
  i_CalcFishEyeArea() {
    let index = 0;
    this._fishEyeArea.angleSector = 0.0;
    this._fishEyeArea.geometry = [{ width: 0.0, angle: 0.0 }];
    for (let widthBar = this._minArea.widthBar + 1; widthBar < this._focusArea.widthBar; widthBar++) {
      this._fishEyeArea.geometry[index] = { width: widthBar, angle: this._widthToAngle(widthBar + this._fishEyeArea.marginBar, this._innerRadius) };
      this._fishEyeArea.angleSector += this._fishEyeArea.geometry[index].angle;
      index++;
    }
    this._fishEyeArea.numBars = index;
  }
  //--------
  i_CalcHiddenArea() {
    this._hiddenArea.angleBar = this._widthToAngle(this._hiddenArea.widthBar + 1, this._innerRadius);
    this._hiddenArea.angleSector = this._hiddenArea.angleBar * this._hiddenArea.numBars;
  }
  //--------
  i_CalcMinArea() {
    this._minArea.angleBar = this._widthToAngle(this._minArea.widthBar + this._minArea.marginBar, this._innerRadius);
    this._minArea.numBars = Math.floor((360.0 - this._fishEyeArea.angleSector * 2 - this._focusArea.angleSector - this._hiddenArea.angleSector) / (2 * this._minArea.angleBar));
    this._minArea.angleSector = this._minArea.numBars * this._minArea.angleBar;
  }
  //--------
  i_InicDataVisVector() {
    let angleRotBar;
    this._dataVis = range(this._numMaxBars).map(function () { return { angleRot: 0.0, width: 0, widthText: 0, indexData: 0 }; });
    // Determines as the initial rotation angle of the bar with index 0 the angle of the upper line of the sector of the not visible area
    angleRotBar = 180 + this._hiddenArea.angleSector / 2;
    // ---------- Minimum Area 1
    angleRotBar = this.i_CalcGeometryFixedArea(angleRotBar, 0, this._minArea.numBars - 1, this._minArea.widthBar, this._minArea.angleBar);
    // ---------- Fish Eye Area 1
    angleRotBar = this.i_CalcGeometryFishEyeArea(angleRotBar, this._minArea.numBars, this._minArea.numBars + this._fishEyeArea.numBars - 1, true);
    // ---------- Focus Area
    angleRotBar = this.i_CalcGeometryFixedArea(angleRotBar, this._minArea.numBars + this._fishEyeArea.numBars, this._minArea.numBars + this._fishEyeArea.numBars + this._focusArea.numBars - 1, this._focusArea.widthBar, this._focusArea.angleBar); // Focus Area
    // ---------- Fish Eye Area 2
    angleRotBar = this.i_CalcGeometryFishEyeArea(angleRotBar, this._minArea.numBars + this._fishEyeArea.numBars + this._focusArea.numBars, this._minArea.numBars + 2 * this._fishEyeArea.numBars + this._focusArea.numBars - 1, false);
    // ---------- Minimum Area 2
    angleRotBar = this.i_CalcGeometryFixedArea(angleRotBar, this._minArea.numBars + 2 * this._fishEyeArea.numBars + this._focusArea.numBars, 2 * this._minArea.numBars + 2 * this._fishEyeArea.numBars + this._focusArea.numBars - 1, this._minArea.widthBar, this._minArea.angleBar);
  }
  //--------
  i_CalcGeometryFixedArea(angleRotBar, startIndex, finalIndex, width, angleBar) {
    let radiusText = this._innerRadius + this._maxHeightBar;
    for (let i = startIndex; i <= finalIndex; i++) { // adjusts the angle of rotation to the center of the bar
      this._dataVis[i].angleRot = (angleRotBar + angleBar / 2) % 360;
      this._dataVis[i].indexData = -1;
      this._dataVis[i].width = width;
      this._dataVis[i].widthText = this._angleToWidth(angleBar, radiusText);
      angleRotBar = (angleRotBar + angleBar) % 360;
    }
    return angleRotBar;
  }
  //--------
  i_CalcGeometryFishEyeArea(angleRotBar, startIndex, finalIndex, ascending) {
    let indexGeometry, lastIndex = this._fishEyeArea.geometry.length - 1, radiusText = this._innerRadius + this._maxHeightBar;
    for (let i = startIndex; i <= finalIndex; i++) {
      indexGeometry = (ascending) ? i - startIndex : lastIndex - (i - startIndex);
      this._dataVis[i].angleRot = (angleRotBar + this._fishEyeArea.geometry[indexGeometry].angle / 2) % 360;
      this._dataVis[i].indexData = -1;
      this._dataVis[i].width = this._fishEyeArea.geometry[indexGeometry].width;
      this._dataVis[i].widthText = this._angleToWidth(this._fishEyeArea.geometry[indexGeometry].angle, radiusText);
      angleRotBar = (angleRotBar + this._fishEyeArea.geometry[indexGeometry].angle) % 360;
    }
    return angleRotBar;
  }
  //--------
  i_BindDataVisToData() {
    let i, startIndex, endIndex, index, sizeDataChildren;
    sizeDataChildren = this.model.data.children.data.length;
    if (sizeDataChildren >= this._dataVis.length)
      for (i = 0; i < this._dataVis.length; i++)
        this._dataVis[i].indexData = i;
    else {
      startIndex = this._focusArea.indexCenter - Math.floor(sizeDataChildren / 2);
      this._indexFirstData = startIndex;
      endIndex = startIndex + sizeDataChildren;
      index = 0;
      for (i = startIndex; i < endIndex; i++, index++)
        this._dataVis[i].indexData = index;
    }
  } // End i_BindDataVisToData
  async addIrisChart(idDiv, divTag) {
    // ---------------- Geometric attributes of the graph
    this.model.margin = { top: 2, right: 2, bottom: 2, left: 2 };
    this.model.box = { width: this.width, height: this.height };
    this.model.pInnerRadius = 0.13; // Percentage relative to graph width for _innerRadius calculation
    this.model.pOuterRadius = 0.57; // Percentage relative to graph width for _OuterRadius calculation
    this.model.pMaxHeightBar = 0.15; // Percentage relative to graph width for _MaxHeightBar calculation
    this.model.pFocusWidthBar = 0.0275; // Percentage relative to graph width for calculation of _focusArea.widthBar
    this.model.pMinWidthBar = 0.01; // Percentage relative to graph width for calculation of _minArea.widthBar Original 4
    this.model.indexAttBar = 0; // Index of the attribute that will be plotted in the toolbar
    this.model.redraw = 0;
    // ---------------- Initialization Actions
    let _svg = divTag.append("svg"), // Create dimensionless svg
    _grpChart = _svg.append("g"); // Does not exist in the original Iris
    // Add zoom event
    let _zoomListener = zoom().on("zoom", _chartZoom);
    _zoomListener.scaleExtent([0.9, 1.1]);
    _svg.call(_zoomListener);
    this._grpIris = _grpChart.append("g").attr("class", "IrisChart");
    this._grpIris.append("circle").attr("class", "IC-centroidBack");
    this._grpIris.append("text")
      .text("")
      .classed("IC-centroidTitle", true); // Includes title attribute of centroid
    this._grpIris.append("text")
      .text("")
      .classed("IC-authorsMissing", true);
    // ------      Inclusion of the arc (sector) that represents the background of the focus
    this._grpIris.append("path").attr("class", "IC-focus");
    //===================================================
    this.model.when(["box", "margin"], (box, margin) => {
      this.model.widthChart = box.width - margin.left - margin.right;
      this.model.heightChart = box.height - margin.top - margin.bottom;
    });
    this.model.when("box", function (box) {
      _svg.attr("width", box.width).attr("height", box.height);
    });
    //---------------------
    this.model.when("margin", function (margin) {
      _grpChart.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    });
    //---------------------
    this.model.when(["widthChart", "pInnerRadius"], (widthChart, pInnerRadius) => {
      this._innerRadius = Math.floor(widthChart * pInnerRadius);
      this._grpIris.select("circle.IC-centroidBack").attr("r", this._innerRadius);
    });
    //---------------------
    this.model.when(["widthChart", "pOuterRadius"], (widthChart, pOuterRadius) => {
      this._outerRadius = Math.floor(widthChart * pOuterRadius);
    });
    //---------------------
    this.model.when(["data", "widthChart", "indexAttBar", "pMaxHeightBar"], (data, widthChart, indexAttBar, pMaxHeightBar) => {
      // console.log(data);
      let maxValue = max$1(data.children.data, (d) => {
        let max = 0;
        let j;
        for (j = 0; j < this._nbOfTypesDoc; j++) {
          max += d.edge.values[0];
        }
        // console.log('MAX', data.children.data, max);
        return max;
      });
      this._maxHeightBar = Math.floor(widthChart * pMaxHeightBar);
      // console.log('SCALE ', maxValue,  this._maxHeightBar);
      this.model.barScale = linear().domain([0, maxValue]).range([0, this._maxHeightBar]);
    });
    //---------------------
    this.model.when(["widthChart", "pFocusWidthBar"], (widthChart, pFocusWidthBar) => {
      this._focusArea.widthBar = Math.floor(widthChart * pFocusWidthBar);
      this._hiddenArea.widthBar = this._focusArea.widthBar;
    });
    //---------------------
    this.model.when(["widthChart", "pMinWidthBar"], (widthChart, pMinWidthBar) => {
      this._minArea.widthBar = Math.floor(widthChart * pMinWidthBar);
      if (this._minArea.widthBar === 0)
        this._minArea.widthBar = 1;
    });
    //---------------------
    this.model.when(["data", "widthChart", "heightChart", "barScale", "pInnerRadius", "pOuterRadius", "redraw"], (data, widthChart, heightChart) => {
      this._xIrisCenter = Math.floor(widthChart / 2) - Math.floor(widthChart * this._pDesloc); // To move center to left
      this._yIrisCenter = Math.floor(heightChart / 2);
      this._grpIris.attr("transform", "translate(" + this._xIrisCenter + "," + this._yIrisCenter + ")");
      this._calcGeometry();
      this._grpIris.select(".IC-focus")
        .attr("d", arc().innerRadius(this._innerRadius)
        .outerRadius(this._outerRadius) // Change to avoid adding
        .startAngle(-this._degreeToRadian(this._focusArea.angleSector / 2) + Math.PI / 2)
        .endAngle(this._degreeToRadian(this._focusArea.angleSector / 2) + Math.PI / 2));
      let subName = (data.root.data.labels[this._cfgIndexAttr.titleCentroid]).split(',');
      // if (subName.length === 1) {
      //     let subName = (data.root.data.labels[_cfgIndexAttr.titleCentroid]).split('.');
      //     if (subName.length === 2) {
      //         _grpIris.select("text.IC-centroidTitle")
      //             .text(_adjustLengthText(subName[1], 13))
      //             .style("font-size", (_dataVis[_focusArea.indexCenter].widthText * 0.60) + "px")
      //             .append("title")
      //             .text(data.root.data.labels[0]);
      //     } else {
      //         _grpIris.select("text.IC-centroidTitle")
      //             .text(_adjustLengthText(subName[2], 13))
      //             .style("font-size", (_dataVis[_focusArea.indexCenter].widthText * 0.60) + "px")
      //             .append("title")
      //             .text(data.root.data.labels[0]);
      //     }
      // } else {
      this._grpIris.select("text.IC-centroidTitle")
        .text(this._adjustLengthText(subName[0], 13))
        .style("font-size", (this._dataVis[this._focusArea.indexCenter].widthText * 0.60) + "px")
        .append("title")
        .text(data.root.data.labels[1]);
      // }
      console.log(this._dataVis);
      if (this._grpBars != null)
        this._grpBars.remove();
      this.putBarsOnIris();
      let nbBarsMissing = 0; //to display the number of coauthors not shown
      if (this._numMaxBars < this._numTotalBars) {
        nbBarsMissing = this._numTotalBars - this._numMaxBars;
      }
      this._grpIris.select("text.IC-authorsMissing")
        .attr("x", (-2.8 * this._innerRadius))
        .attr("y", 0)
        .text((nbBarsMissing > 0 ? nbBarsMissing + " coauthors hidden" : "")) //only display text if there are coauthors not shown
        .style("font-family", "Arial")
        .style("font-size", "8px");
    } // End
    );
    /**
     * Zoom event
     */
    function _chartZoom(event) {
      _zoomListener.scaleExtent([0.9, 1.1]);
      _grpChart.attr("transform", event.transform);
    }
  }
  buildChart(idDiv, svg) {
    // this.setBox(this.model.box);
    // this.setData(this.chartData);
    this.addIrisChart(idDiv, svg);
    // console.log(this._chart);
    // this._chart().data(this.chartData);
  }
  componentDidLoad() {
    let svg = select(this.element.querySelectorAll(".iris")[0])
      .attr("width", this.width)
      .attr("height", this.height);
    this.buildChart("iris", svg);
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "iris" })));
  }
  get element() { return getElement(this); }
  static get style() { return mgeIrisCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "mge-iris",
    "$members$": {
      "width": [2],
      "height": [2],
      "data": [1],
      "setBox": [64],
      "getBox": [64],
      "setpInnerRadius": [64],
      "setpOuterRadius": [64],
      "setpMaxHeightBar": [64],
      "setPanel": [64],
      "setData": [64],
      "setConfigCentroid": [64],
      "dataVisToNode": [64],
      "getSourceObject": [64],
      "setIndexAttrBar": [64],
      "getVOrder": [64],
      "acSortExecText": [64],
      "acSortExecAttribute": [64],
      "putBarsOnIris": [64],
      "addIrisChart": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const mgeListingCss = ":host{display:block}";

class MgeListing {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.width = 400;
    this.height = 300;
    this.data = "[]";
    this._papersListPanel = null; // represents the panel associated with the graph
    this._sortByText = true;
    this._grpPapersList = null; // Group representing IRIS
    this._grpPapers = null; // Selection that contains all groups of bars
    this._names = null; // Selection that contains the names of the members of a cluster
    this._maxLenghtTitleIndex = 7.8;
    this._maxNamesLenght = 87;
    this._data = null;
    this._colorsRect = ["#1f77b4", "#2ca02c", "#d62728", "#ff7d0e"]; // colors for the different types
    this.model = model();
    this.lcv = libCava();
    this._sort = this.lcv.sortIris();
    this._subGraph = this.lcv.subGraph();
    
  }
  async setBox(_) {
    if (!arguments.length)
      return this.model.box;
    this.model.box = _;
  }
  ;
  async getBox(_) {
    return this.model.box;
  }
  ;
  //---------------------
  async dataVisToNode(index) {
    return this.model.data.children.data[index];
  }
  ;
  //---------------------
  async setData(_) {
    if (!arguments.length)
      return this.model.data;
    _ = this._subGraph.allPapersList(_, state._data);
    this.model.data = _;
    let headerHeight = 50;
    if (_.root.data.documents.length <= 10)
      this.model.box.height = _.root.data.documents.length * 35 + headerHeight;
    else {
      this.model.box.height = 10 * 35 + headerHeight;
    }
    // _papersListPanel.update();
    // _irisPanel.update();
    // setupPrimaryVersion();
  }
  ;
  execSortByText() {
    this._sortByText = false;
    this._data.root.data.documents.sort(function (x, y) {
      return ascending(x.title, y.title);
    });
    this.model.redraw += 1;
  }
  ;
  //---------------------
  sortByYear() {
    this._sortByText = false;
    this._data.root.data.documents.sort(function (x, y) {
      return ascending(x.date, y.date);
    });
    this.model.redraw += 1;
  }
  ;
  async addPaperListChart(idDiv, divTag) {
    this.model.margin = { top: 2, right: 2, bottom: 2, left: 2 };
    this.model.box = { width: this.width, height: this.height };
    this.model.pInnerRadius = 0.13; // Percentage relative to graph width for _innerRadius calculation
    this.model.pOuterRadius = 0.57; // Percentage relative to graph width for _OuterRadius calculation
    this.model.pMaxHeightBar = 0.15; // Percentage relative to graph width for _MaxHeightBar calculation
    this.model.pFocusWidthBar = 0.0275; // Percentage relative to graph width for calculation of _focusArea.widthBar
    this.model.pMinWidthBar = 0.01; // Percentage relative to graph width for calculation of _minArea.widthBar Original 4
    this.model.indexAttBar = 0; // Index of the attribute that will be plotted in the toolbar
    this.model.redraw = 0;
    // ---------------- Initialization Actions
    let _container = divTag.append("div").attr("class", "PL-container");
    let _svg = _container.append("svg"), // Create dimensionless svg
    _grpChart = _svg.append("g");
    // Add zoom event
    let _zoomListener = zoom().on("zoom", _chartZoom);
    _zoomListener.scaleExtent([0.9, 1.1]);
    _svg.call(_zoomListener);
    _svg.attr("class", "PaperListView");
    this._grpPapersList = _grpChart.append("g").attr("class", "PapersListChart");
    //===================================================
    this.model.when(["box", "margin"], (box, margin) => {
      this.model.widthChart = box.width - margin.left - margin.right;
      this.model.heightChart = box.height - margin.top - margin.bottom;
    });
    this.model.when("box", function (box) {
      _svg.attr("width", box.width).attr("height", box.height);
    });
    //---------------------
    this.model.when("margin", function (margin) {
      _grpChart.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    });
    //---------------------
    this.model.when(["data", "widthChart", "heightChart", "redraw"], () => {
      if (this._grpPapers !== null)
        this._grpPapers.remove();
      console.log(this.model.data);
      this._data = this.model.data;
      if (this._sortByText)
        this.execSortByText();
      let endOfNames = 0;
      if (this.model.data.root.data.documents.length * 38 >= 350) {
        _svg.attr("height", this.model.data.root.data.documents.length * 38);
      }
      if (this.model.data.children.cluster === true) {
        if (this._names !== null)
          this._names.remove();
        let names = " ";
        for (let i = 0; i < this.model.data.children.data.length; i++) {
          // names += this.model.data.children.data[i].labels[0];
          names += this.model.data.children.data[i].labels[1];
          if (i !== this.model.data.children.data.length - 1) {
            names += ", ";
          }
        }
        let tempNamesTab;
        tempNamesTab = names.split(",");
        let finalNamesTab = [];
        let j = 0;
        let pas = Math.round(this.model.widthChart / this._maxNamesLenght);
        for (let i = 0; i < tempNamesTab.length; i += pas) {
          finalNamesTab[j] = tempNamesTab[i] + ", ";
          for (let k = 1; k < pas; k++) {
            if (i + k < tempNamesTab.length && i + k !== tempNamesTab.length - 1) {
              finalNamesTab[j] += tempNamesTab[i + k] + ", ";
            }
            else if (i + k < tempNamesTab.length && i + k === tempNamesTab.length - 1) {
              finalNamesTab[j] += tempNamesTab[i + k];
            }
          }
          j++;
        }
        this._names = this._grpPapersList.selectAll(".PL-grpNames")
          .data(finalNamesTab)
          .enter()
          .append("g")
          .attr("class", "PL-names");
        this._names.append("text")
          .attr("class", "PL-names")
          .text("Cluster : ")
          .attr("x", 10)
          .attr("y", 12)
          .style("font-size", "12px")
          .append("title")
          .text(names);
        let y = 0;
        let i = 0;
        this._names.append("text")
          .attr("class", "PL-names")
          .text(function () {
          let result = finalNamesTab[i];
          i++;
          return result;
        })
          .attr("x", 55)
          .attr("y", function () { return y += 12; })
          .style("font-size", "12px")
          .append("title")
          .text(names);
        endOfNames = y - 15;
      }
      this._grpPapers = this._grpPapersList.selectAll(".PL-grpPapers")
        .data(this.model.data.root.data.documents)
        .enter()
        .append("g")
        .attr("class", "PL-grpPapers");
      let x = 5, y = (this.model.data.children.cluster === true ? endOfNames : -15);
      this._grpPapers.append("rect")
        .attr("class", "PL-type")
        .attr("x", x)
        .attr("y", function () { return y += 35; })
        .attr("height", 10)
        .attr("width", 10)
        .attr("fill", (d) => {
        return this._colorsRect[this._getTheIndex(d.type)];
      })
        .append("title")
        .text(function (d) { return d.type; });
      x = 25;
      y = (this.model.data.children.cluster === true ? endOfNames + 5 : -9);
      this._grpPapers.append("a")
        .attr("xlink:href", function (d) { return d.link; })
        .attr("target", "_blank")
        .append("text")
        .attr("class", "PL-title")
        .text(function (d) {
        // if (d.title.length <= maxLenghtTitle)
        return d.title;
        // else
        //     return d.title.slice(0, maxLenghtTitle) + "..."
      })
        .attr("x", x)
        .attr("y", function () { return y += 35; })
        .style("font-size", "12px")
        .append("title")
        .text(function (d) { return d.title; });
      x = 25;
      y = (this.model.data.children.cluster === true ? endOfNames + 17 : 5);
      this._grpPapers.append("text")
        .attr("class", "PL-infos")
        .text((d) => {
        let authorsNames = this._getAuthorList(d);
        return authorsNames + " - " + d.date + " - " + d.link.slice(d.link.length - 2);
      })
        .attr("x", x)
        .attr("y", function () { return y += 35; })
        .style("font-size", "12px")
        .append("title")
        .text((d) => {
        let authorsNames = this._getAuthorList(d);
        return authorsNames + " - " + d.date + " - " + d.link.slice(d.link.length - 2);
      });
    } // End
    );
    /**
   * Zoom event
   */
    function _chartZoom(event) {
      _zoomListener.scaleExtent([0.9, 1.1]);
      _grpChart.attr("transform", event.transform);
    }
  }
  //--------------------------------- Private functions
  _getAuthorList(d) {
    if (d.authorList != null) {
      return d.authorList;
    }
    let authorsNames = "";
    for (let i = 0; i < d.authors.length; i++) {
      authorsNames += this._findAuthorById(d.authors[i]);
      if (i !== d.authors.length - 1)
        authorsNames += ", ";
    }
    return authorsNames;
  }
  /**
   *
   * _getTheRightOrder
   *
   * Returns the index for the color
   *
   * @param type
   * @returns number
   * @private
   */
  _getTheIndex(type) {
    switch (type) {
      case "publications":
        return 0;
      case "conference paper":
        return 1;
      case "report":
        return 2;
      case "article":
        return 3;
    }
  }
  /**
   *
   * _findAuthorById
   *
   * Returns the author depending on his id
   *
   * @param id
   * @returns string
   * @private
   */
  _findAuthorById(id) {
    for (let i = 0; i < this.model.data.children.data.length; i++) {
      if (this.model.data.children.data[i].id === id) {
        return this.model.data.children.data[i].labels[1];
      }
      else if (this.model.data.children.data[i].idOrig === id) {
        return this.model.data.children.data[i].labels[1];
      }
    }
    if (this.model.data.children.others.length === 0) {
      return "Not known";
    }
    else {
      for (let j = 0; j < this.model.data.children.others.length; j++) {
        if (this.model.data.children.others[j].id === id) {
          return this.model.data.children.others[j].labels[1];
        }
        else if (this.model.data.children.others[j].idOrig === id) {
          return this.model.data.children.others[j].labels[1];
        }
      }
    }
  }
  buildChart(idDiv, svg) {
    this.addPaperListChart(idDiv, svg);
    // console.log(this._chart);
    // this._chart().data(this.chartData);
  }
  componentWillLoad() {
    // console.log(this.model.box)
    this.setBox({ width: this.width, height: this.height });
    // this.setData(this.chartData);
  }
  componentDidLoad() {
    let svg = select(this.element.querySelectorAll(".paper-list")[0])
      .attr("width", this.width)
      .attr("height", this.height);
    this.buildChart("paper-list", svg);
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "paper-list" })));
  }
  get element() { return getElement(this); }
  static get style() { return mgeListingCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "mge-listing",
    "$members$": {
      "width": [2],
      "height": [2],
      "data": [1],
      "setBox": [64],
      "getBox": [64],
      "dataVisToNode": [64],
      "setData": [64],
      "addPaperListChart": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}


/**
* algCluster
*
*/

const AlgCluster = function () {

  return function AlgCluster () {
  
  function _addEdgesBetweenCluster(data) {
	var j,achei,dataEdges = [];

	data.edges.dataEdges.forEach(
	    function (d,i) {
			if ( data.nodes.dataNodes[d.src].idCluster != data.nodes.dataNodes[d.tgt].idCluster) {
				achei = false;
				for (j=0; j<dataEdges.length; j++) {
					if ( data.nodes.dataNodes[dataEdges[j].src].idCluster == data.nodes.dataNodes[d.src].idCluster && 
						data.nodes.dataNodes[dataEdges[j].tgt].idCluster == data.nodes.dataNodes[d.tgt].idCluster ||
						data.nodes.dataNodes[dataEdges[j].src].idCluster == data.nodes.dataNodes[d.tgt].idCluster &&
						data.nodes.dataNodes[dataEdges[j].tgt].idCluster == data.nodes.dataNodes[d.src].idCluster) {
						dataEdges[j].qt++;
						achei = true;
					}				 
				}

				if (!achei) {
					dataEdges.push({
							src: data.nodes.dataNodes[d.src].idCluster + data.nodes.qtNodes, 
							tgt: data.nodes.dataNodes[d.tgt].idCluster + data.nodes.qtNodes, 
							qt:1 , 
							source:data.nodes.dataNodes[d.src].idCluster + data.nodes.qtNodes, 
							target:data.nodes.dataNodes[d.tgt].idCluster + data.nodes.qtNodes, 
							visible:true
							});
				}
			} else {
			// Utiliza só o fonte porque aqui source=target
				data.nodes.dataNodes[data.nodes.dataNodes[d.src].idCluster + data.nodes.qtNodes].qtEdges++;
			}
		}	  
	);
  
	dataEdges.forEach(
	    function (d) {
		  data.edges.dataEdges.push(d);
		}
	);	   
  }
 
//--------------------------------- Funcoes publicas	  
	
    function alg() {}
	
 	//---------------------
    // Acrescenta no objeto data os nodos clusterizados
    //	
	alg.byAttribute = function(data, attr) {
	  var j, achei=false;
	  var dataNodes = null,
	      dataEdges = [];
	  
	  if (data.isCluster===undefined) {  // Caso os dados ainda não tenham sido clusterizados
	  	 data.isCluster = true;
		 data.nodes.qtNodes = data.nodes.dataNodes.length;
		 data.edges.qtEdges = data.edges.dataEdges.length;		 
	  }
	  
	  data.isCluster = true;
	  data.typeCluster = "A";
	  
			// Torna os nodos originais invisiveis ou complementa com os novos atributos
	  for (j=0; j<data.nodes.qtNodes; j++) {
		data.nodes.dataNodes[j].idCluster = -1;
		data.nodes.dataNodes[j].qtNodes = 1;
		data.nodes.dataNodes[j].visible = false;
		data.nodes.dataNodes[j].cluster = false;		
	  }
	  
			// Torna as arestas originais invisiveis
	  for (j=0; j<data.edges.qtEdges; j++) {
		data.edges.dataEdges[j].visible = false;	
	  }	  
	  
			// Remove os nodos clusterizados se houver
	  if (data.nodes.dataNodes.length > data.nodes.qtNodes)
		data.nodes.dataNodes.splice(data.nodes.qtNodes,data.nodes.dataNodes.length-data.nodes.qtNodes);
		
			// Remove as arestas pertencentes a cluster se houver
	  if (data.edges.dataEdges.length > data.edges.qtEdges)
		data.edges.dataEdges.splice(data.edges.qtEdges,data.edges.dataEdges.length-data.edges.qtEdges);	  
	  
	  // Marca os dados como clusterizado
	  
	  if (attr>=1000) {
	    attr -= 1000;
		dataNodes = d3.nest().key( function (d) { return d.values[attr]}).entries(data.nodes.dataNodes);
      } else {
		dataNodes = d3.nest().key( function (d) { return d.labels[attr]}).entries(data.nodes.dataNodes);	  
	  }
		// Inclui os novos atributos nos nodos clusterizados
	  dataNodes.forEach(
	    function(d,i) {
		  d.id = i + data.nodes.qtNodes;
		  d.qtNodes = d.values.length;
		  d.qtEdges = 0;
		  d.idCluster = i;
		  d.visible = true;
		  d.cluster = true;
		  d.values.forEach(
		    function(d) {
				d.idCluster = i;
			}
		  );
		  data.nodes.dataNodes.push(d);
		}
	  );
	  	  
	  data.edges.dataEdges.forEach(
	    function (d,i) {
		  if ( data.nodes.dataNodes[d.src].idCluster != data.nodes.dataNodes[d.tgt].idCluster) {
		     achei = false;
		     for (j=0; j<dataEdges.length; j++) {
			   if ( data.nodes.dataNodes[dataEdges[j].src].idCluster == data.nodes.dataNodes[d.src].idCluster && 
			        data.nodes.dataNodes[dataEdges[j].tgt].idCluster == data.nodes.dataNodes[d.tgt].idCluster ||
					data.nodes.dataNodes[dataEdges[j].src].idCluster == data.nodes.dataNodes[d.tgt].idCluster &&
					data.nodes.dataNodes[dataEdges[j].tgt].idCluster == data.nodes.dataNodes[d.src].idCluster) {
				 dataEdges[j].qt++;
				 achei = true;
                 }				 
			 }

			 if (!achei) {
			   dataEdges.push({	src: data.nodes.dataNodes[d.src].idCluster + data.nodes.qtNodes, 
								tgt: data.nodes.dataNodes[d.tgt].idCluster + data.nodes.qtNodes, 
								qt:1 , 
								source:data.nodes.dataNodes[d.src].idCluster + data.nodes.qtNodes, 
								target:data.nodes.dataNodes[d.tgt].idCluster + data.nodes.qtNodes, 
								visible:true});
			 }
		  } else {
			// Utiliza só o fonte porque aqui source=target
		    data.nodes.dataNodes[data.nodes.dataNodes[d.src].idCluster + data.nodes.qtNodes].qtEdges++;
		  }
		}	  
	  );
	  
	  dataEdges.forEach(
	    function (d) {
		  data.edges.dataEdges.push(d);
		}
	  );	  
	};

 	//---------------------
    // Remove todos os elementos que são cluster
    //	
	alg.byNone = function(data, attr) {
			// Remove os nodos clusterizados se houver
	  if (data.isCluster!=undefined) {
		console.log("--------------");
		console.log(data.isCluster);	  
		data.isCluster = false;
		data.typeCluster = "N";

		if (data.nodes.dataNodes.length > data.nodes.qtNodes) {
			data.nodes.dataNodes.splice(data.nodes.qtNodes,data.nodes.dataNodes.length-data.nodes.qtNodes);
			console.log("splice nodos" + data.nodes.qtNodes + " " + (data.nodes.dataNodes.length-data.nodes.qtNodes));
			console.log(data.nodes);
		}
		
			// Remove as arestas pertencentes a cluster se houver
		if (data.edges.dataEdges.length > data.edges.qtEdges)
			data.edges.dataEdges.splice(data.edges.qtEdges,data.edges.dataEdges.length-data.edges.qtEdges);

			// Torna os nodos originais visiveis ou complementa com os novos atributos
		for (j=0; j<data.nodes.qtNodes; j++) {
			data.nodes.dataNodes[j].idCluster = -1;
			data.nodes.dataNodes[j].qtNodes = 1;
			data.nodes.dataNodes[j].visible = true;
			data.nodes.dataNodes[j].cluster = false;		
		}	

			// Torna as arestas originais visiveis
		for (j=0; j<data.edges.qtEdges; j++) {
			data.edges.dataEdges[j].visible = true;
		}
	  }
	};

 	//---------------------
    // Acrescenta no objeto data os nodos clusterizados
    //	
	alg.byLouvain = function(data) {
		var j, tempNodes,tempEdges,cluster, vKeys,dataNodes;
	  
		if (data.isCluster===undefined) {  // Caso os dados ainda não tenham sido clusterizados
			data.isCluster = true;
			data.nodes.qtNodes = data.nodes.dataNodes.length;
			data.edges.qtEdges = data.edges.dataEdges.length;		 
		}
	  
		data.isCluster = true;
		data.typeCluster = "L";		
	  
			// Torna os nodos originais invisiveis ou complementa com os novos atributos
		for (j=0; j<data.nodes.qtNodes; j++) {
			data.nodes.dataNodes[j].idCluster = -1;
			data.nodes.dataNodes[j].qtNodes = 1;
			data.nodes.dataNodes[j].visible = false;
			data.nodes.dataNodes[j].cluster = false;		
		}
	  
			// Torna as arestas originais invisiveis
		for (j=0; j<data.edges.qtEdges; j++) {
			data.edges.dataEdges[j].visible = false;	
		}	  
	  
			// Remove os nodos clusterizados se houver
		if (data.nodes.dataNodes.length > data.nodes.qtNodes)
			data.nodes.dataNodes.splice(data.nodes.qtNodes,data.nodes.dataNodes.length-data.nodes.qtNodes);
		
			// Remove as arestas pertencentes a cluster se houver
		if (data.edges.dataEdges.length > data.edges.qtEdges)
			data.edges.dataEdges.splice(data.edges.qtEdges,data.edges.dataEdges.length-data.edges.qtEdges);	  

		tempNodes = data.nodes.dataNodes.map ( function(d) { return d.id;} );
		tempEdges = data.edges.dataEdges.map ( function(d) { return { source: d.src, target: d.tgt, weight: 1}; });

		cluster = jLouvain().nodes(tempNodes).edges(tempEdges)();
		vKeys = Object.keys(cluster);
		vKeys.forEach ( function (d) {
			data.nodes.dataNodes[d].idCluster = cluster[d];		
		}); 
		
		dataNodes = d3.nest().key( function (d) { return d.idCluster}).entries(data.nodes.dataNodes);

		dataNodes.forEach(
			function(d,i) {
				d.id = i + data.nodes.qtNodes;
				d.qtNodes = d.values.length;
				d.qtEdges = 0;
				d.idCluster = +d.key;
				d.visible = true;
				d.cluster = true;
				data.nodes.dataNodes.push(d);
			}
		);
		_addEdgesBetweenCluster(data);
		
	    console.log(data);
	};
	
   	//======== 	
  	return alg; 
  };


};

const mgeNodelinkCss = ":host{display:block}.NE-edge{stroke:steelblue;stroke-opacity:.3;fill:none}.NE-node{stroke:none}.NE-node.NE-HighLight{stroke:red;stroke-width:1.5}.NE-node.NE-HighSearch{stroke:#FF6600;stroke-width:2.0;animation:rotate 1s ease-in-out 6 alternate}.NE-edge.NE-HighLight{stroke:red;stroke-opacity:1;stroke-width:1.5}.NE-Tooltip{position:absolute;border-radius:4px;background-color:rgba(246, 240, 186, 0.9);border:1px solid #c7b51a;font-family:sans-serif;font-size:10px;font-weight:bold;z-index:1000}.helpContainer{position:absolute;top:2%;right:3%}.helpTooltip{position:absolute;top:10%;right:3%;border-radius:4px;background-color:rgba(246, 240, 186, 0.9);border:1px solid #c7b51a;font-family:sans-serif;font-size:10px;font-weight:bold;z-index:1000}@keyframes rotate{0%{stroke-width:2.0}100%{stroke-width:20.0}}.DS-popup{position:absolute;left:0;top:0;background-color:#F0F0F0;width:72px;border:1px #ccc solid;border-radius:4px;box-shadow:#333 2px 2px 4px;padding:3px;z-index:1000;font-family:sans-serif;font-size:10px;font-weight:bold}.small-size{}.medium-size{}.big-size{}.DS-popup div{padding:3px 5px 3px 5px}.DS-popup div:hover{background-color:#FFF}";

// function range(start, end) {
//     var ans = [];
//     for (let i = start; i <= end; i++) {
//         ans.push(i);
//     }
//     return ans;
// }
class MgeNodelink {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.width = 350;
    this.height = 350;
    this.data = "[]";
    this._thisNodeEdge = this;
    this._nodeEdgePanel = null; // Represents the panel associated with the graphic
    this._nodeEdgeLegend = null;
    this._grpNodeEdge = null; // Group representing todo o grafico
    this._forceLayout = null;
    this._indexAttrSize = 0; // Just for categorical
    this._colors = {
      nodoNormal: "blue",
      nodoNormal2: "red",
      nodoMix: "purple",
      edgeNormal: "gray"
    };
    this._configDefault = {
      charge: 100,
      linkDistance: 25,
      fNodoClusterDefault: function () { return ""; }
    };
    //--------------------------------- Private functions
    this.dragNode = simulation => {
      function dragstarted(event, d) {
        if (!event.active)
          simulation.alphaTarget(0.05).restart();
        d.fx = d.x;
        d.fy = d.y;
      }
      function dragged(event, d) {
        d.fx = event.x;
        d.fy = event.y;
      }
      function dragended(event, d) {
        if (!event.active)
          simulation.alphaTarget(0);
        // simulation.stop()
        d.fx = null;
        d.fy = null;
      }
      return drag()
        .on("start", dragstarted)
        .on("drag", dragged)
        .on("end", dragended);
    };
    this.model = model();
    this._libtooltips = libCava().tooltips();
    this.algCluster = AlgCluster();
    
    // this._nodeEdgePanel = NodeEdgePanel(this.element);  // Represents the panel associated with the graphic
    // this._nodeEdgeLegend = NodeEdgeLegend(this.element, Model);  // Represents the panel associated with the graphic
    this._grpNodeEdge = null; // Group representing todo o grafico
    this._forceLayout = forceSimulation(),
      this._indexAttrSize = 0; // Just for categorical
    //_nodes = null,
    //_edges = null,
    this._rClusterScale = linear().range([3, 40]);
    this._linkWidthScale = linear().range([1, 7]);
    this._linkDistanceScale = linear();
    this._chargeScale = linear().range([50, 800]);
    this._rNormalNode = 3, // Normal node radius
      this._colors = {
        nodoNormal: "blue",
        nodoNormal2: "red",
        nodoMix: "purple",
        edgeNormal: "gray"
      },
      this._configDefault = {
        charge: 100,
        linkDistance: 25,
        fNodoClusterDefault: function () { return ""; }
      },
      this._tooltips = {
        divTT: null,
        normalNode: null,
        clusterNode: null,
        normalEdge: null,
        clusterEdge: null
      },
      this._contextMenu = {
        showing: false,
        itens: null
      },
      this._configLayout = {
        charge: this._configDefault.charge,
        fCharge: function (d) {
          return -(this._chargeScale(d.qtNodes) + this._configLayout.charge);
        },
        linkDistance: this._configDefault.linkDistance,
        gravity: 0 // calculated
      },
      this._graphElem = {
        nodes: null,
        edges: null
      },
      this._graphData = null, // Structure Displayed
      this._colorScale = null;
  }
  async addNodeLinkChart(idDiv, divTag) {
    this.model.margin = { top: 2, right: 2, bottom: 2, left: 2 };
    this.model.box = { width: this.width, height: this.height };
    this.model.redraw = 0; // When changed perform a redraw
    // ---------------- Initialization Actions
    let _svg = divTag.append("svg"), // Create dimensionless svg
    _grpChart = _svg.append("g"); // Does not exist in the original Iris
    // Add zoom event
    let _zoomListener = zoom().on("zoom", _chartZoom);
    _zoomListener.scaleExtent([0.5, 10]);
    _svg.call(_zoomListener);
    this._tooltips.divTT = divTag.append("div")
      .style("display", "none")
      .classed("NE-Tooltip", true); // Tooltip for the normal node
    this._grpNodeEdge = _grpChart.append("g").attr("class", "NodeEdgeChart");
    //===================================================
    this.model.when("box", function (box) {
      _svg.attr("width", box.width).attr("height", box.height);
    });
    //---------------------
    this.model.when("margin", function (margin) {
      _grpChart.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    });
    //---------------------
    this.model.when(["box", "margin"], (box, margin) => {
      this.model.widthChart = box.width - margin.left - margin.right;
      this.model.heightChart = box.height - margin.top - margin.bottom;
      this._forceLayout.force("center", forceCenter(this.model.widthChart / 2, this.model.heightChart / 2));
    });
    //---------------------
    this.model.when(["data", "widthChart", "heightChart", "redraw"], (data, widthChart) => {
      let dataLength;
      dataLength = data.nodes.dataNodes.length;
      this._configLayout.gravity = 500 / ((Math.PI * widthChart * widthChart / 4) / dataLength);
      if (this._configLayout.gravity < 0.05)
        this._configLayout.gravity = 0.05;
      if (this._configLayout.gravity < 0.1)
        this._configLayout.gravity = Math.round(this._configLayout.gravity * 100) / 100;
      else
        this._configLayout.gravity = Math.round(this._configLayout.gravity * 10) / 10;
      // console.log(this._forceLayout.force("link"));
      this._forceLayout.force("charge").strength(this._configLayout.gravity);
      this._forceLayout.alpha(0.2).restart();
      // this._forceLayout.force("gravity", this._configLayout.gravity);
      // this._nodeEdgePanel.update();  // Updates information in the panel associated with the technique
      // this._nodeEdgeLegend.update()
      this._appendEdges();
      this._appendNodes();
    });
    // this._forceLayout.force("charge").strength();
    // this._forceLayout.alpha(1).restart();
    function _chartZoom(event) {
      _zoomListener.scaleExtent([0.5, 10]);
      _grpChart.attr("transform", event.transform);
    }
  }
  _appendNodes() {
    //let corScale = d3.scale.category20();
    if (this._graphElem.nodes != null) {
      this._graphElem.nodes = null;
    }
    // console.log()
    if (this._graphData.nodes[0].cluster) {
      this._graphElem.nodes = this._grpNodeEdge.selectAll(".NE-node")
        .data(this._graphData.nodes)
        .enter()
        .append("circle")
        .attr("class", "NE-node")
        .attr("r", (d) => { return this._rClusterScale(d.qtNodes); })
        .style("fill", this._colors.nodoNormal)
        .on("mouseover", this._onMouseOverNode.bind(this))
        .on("mouseout", this._onMouseOutNode.bind(this))
        .call(this.dragNode(this._forceLayout));
    }
    else {
      this._graphElem.nodes = this._grpNodeEdge.selectAll(".NE-node")
        .data(this._graphData.nodes)
        .enter()
        .append("circle")
        .attr("class", "NE-node")
        //      .attr("r", function (d) { return _rClusterScale(1)} )
        .attr("r", (d) => { return this._rClusterScale(d.values[this._indexAttrSize] /*qtNodes*/); })
        //.style("fill", _colors.nodoNormal)        
        // .style("fill", function (d) { if (d.values[12] == 2) { return "red"; } else if (d.values[12] == 3) { return "yellow"; } else return "blue"; })
        .style("fill", (d) => {
        if (d.style != null) {
          return d.style;
        }
        return this._colorScale(d.values[12]);
      })
        //        .style("fill", function (d) { if (d.id==2) return "red"; else if (d.id==1) return "yellow"; else return corScale(d.cluster)})
        .on("mouseover", this._onMouseOverNode.bind(this))
        .on("mouseout", this._onMouseOutNode.bind(this))
        .call(this.dragNode(this._forceLayout));
    }
  }
  _appendEdges() {
    if (this._graphElem.edges != null)
      this._graphElem.edges = null;
    this._graphElem.edges = this._grpNodeEdge.selectAll(".NE-edge")
      .data(this._graphData.edges)
      .enter()
      .append("line")
      .attr("class", "NE-edge")
      .style("stroke-width", (d) => { return this._linkWidthScale(d.qt); })
      .on("mouseover", this._onMouseOverEdge.bind(this))
      .on("mouseout", this._onMouseOutEdge.bind(this));
  }
  // _appendLegend() {
  //     this._helpTooltip.append("svg")
  //         .text("okGUYYYYYYYYYYYYYYYYS");
  // }
  // _openToolTip() {
  //     this._helpTooltip.style("display", "block");
  // }
  // _closeToolTip() {
  //     this._helpTooltip.style("display", "none");
  // }
  _onMouseOverNode(event, d) {
    if (typeof this._graphElem !== "undefined") {
      this._graphElem.nodes.each(function (n) { n.highLight = false; });
      d.highLight = true;
      this._graphElem.edges.classed("NE-HighLight", function (edge) {
        if (edge.source === d || edge.target === d)
          return edge.source.highLight = edge.target.highLight = true;
        else
          return false;
      });
      this._graphElem.nodes.classed("NE-HighLight", function (node) { return node.highLight; });
      if (d.cluster) {
        if (this._tooltips.clusterNode != null)
          this._tooltips.clusterNode.create(this._tooltips.divTT, d, event);
      }
      else {
        if (this._tooltips.normalNode != null)
          this._tooltips.normalNode.create(this._tooltips.divTT, d, event);
      }
    }
  }
  /**
   * _onMouseOutNode
   */
  _onMouseOutNode(event, d) {
    if (typeof this._graphElem !== "undefined") {
      this._graphElem.nodes.classed("NE-HighLight", false);
      this._graphElem.edges.classed("NE-HighLight", false);
      if (d.cluster) {
        if (this._tooltips.clusterNode != null)
          this._tooltips.clusterNode.remove();
      }
      else {
        if (this._tooltips.normalNode != null)
          this._tooltips.normalNode.remove();
      }
    }
  }
  /**
   * _onMouseOverEdge
   */
  _onMouseOverEdge(event, d) {
    if (typeof this._graphElem !== "undefined") {
      this._graphElem.nodes.each(function (n) { n.highLight = false; });
      d.highLight = true;
      d.source.highLight = true;
      d.target.highLight = true;
      select(event.path[0]).classed("NE-HighLight", true);
      this._graphElem.nodes.classed("NE-HighLight", function (node) { return node.highLight; });
      if (d.source.cluster && d.target.cluster) {
        if (this._tooltips.clusterEdge != null)
          this._tooltips.clusterEdge.create(this._tooltips.divTT, d, event);
      }
      else {
        if (this._tooltips.normalEdge != null)
          this._tooltips.normalEdge.create(this._tooltips.divTT, d, event);
      }
    }
  }
  /**
 * _onMouseOutEdge
 */
  _onMouseOutEdge(event, d) {
    if (typeof this._graphElem !== "undefined") {
      d.highLight = false;
      d.source.highLight = false;
      d.target.highLight = false;
      select(event.path[0]).classed("NE-HighLight", false);
      this._graphElem.nodes.classed("NE-HighLight", false);
      if (d.source.cluster && d.target.cluster) {
        if (this._tooltips.clusterEdge != null)
          this._tooltips.clusterEdge.remove();
      }
      else {
        if (this._tooltips.normalEdge != null)
          this._tooltips.normalEdge.remove();
      }
    }
  }
  _adjustGraph(data) {
    let result = {
      nodes: null,
      edges: null
    };
    result.nodes = data.nodes.dataNodes.filter(function (d) { return d.visible; });
    result.nodes.forEach(function (d, i) {
      d.newIndex = i;
    });
    result.edges = data.edges.dataEdges.filter(function (d) { return d.visible; });
    result.edges.forEach(function (d) {
      d.source = data.nodes.dataNodes[d.src].newIndex;
      d.target = data.nodes.dataNodes[d.tgt].newIndex;
    });
    return result;
  }
  //---------------------
  async setBox(_) {
    if (!arguments.length)
      return this.model.box;
    this.model.box = _;
  }
  ;
  //---------------------
  // This function is required in all techniques
  // It is called internally in conectChart
  async setPanel(_) {
    if (!arguments.length)
      return this._nodeEdgePanel;
    this._nodeEdgePanel = _;
  }
  ;
  //---------------------
  // This function is required in all techniques
  // It is called internally in conectChart
  async setLegend(_) {
    if (!arguments.length)
      return this._nodeEdgeLegend;
    this._nodeEdgeLegend = _;
  }
  ;
  //---------------------
  setTTNormalNode(_) {
    this._tooltips.normalNode = _;
  }
  ;
  //---------------------
  setTTClusterNode(_) {
    this._tooltips.clusterNode = _;
  }
  ;
  //---------------------
  setTTNormalEdge(_) {
    this._tooltips.normalEdge = _;
  }
  ;
  //---------------------
  setTTClusterEdge(_) {
    this._tooltips.clusterEdge = _;
  }
  ;
  //---------------------
  async setData(_) {
    //let qtLabel=0, qtValue=0;
    let maxQtNodes, maxLinkDistance, maxQtEdges, vNodesTemp;
    if (!arguments.length)
      return this.model.data;
    this.model.data = _;
    if (this.model.data.isCluster === undefined) {
      vNodesTemp = range(0, this.model.data.nodes.dataNodes.length).map(function () { return 0; });
      this.model.data.isCluster = false;
      this.model.data.nodes.qtNodes = this.model.data.nodes.dataNodes.length;
      this.model.data.nodes.dataNodes.forEach(function (d) {
        d.idCluster = -1;
        d.qtNodes = 1;
        d.visible = true;
        d.cluster = false;
        d.grau = 0;
      });
      this.model.data.edges.qtEdges = this.model.data.edges.dataEdges.length;
      this.model.data.edges.dataEdges.forEach(function (d) {
        vNodesTemp[d.src]++;
        vNodesTemp[d.tgt]++;
        d.qt = 1;
        d.source = d.src;
        d.target = d.tgt;
        d.visible = true;
      });
      this.model.data.nodes.dataNodes.forEach(function (d, i) { d.grau = vNodesTemp[i]; });
    }
    // const nodeSet = new Set();
    // model.data.nodes.dataNodes.forEach(function (d, i) { nodeSet.add(d.values[12]) });
    // const nodeTypes = Array.from(nodeSet).sort()
    // Sort color set per node type
    this._colorScale = ordinal(schemeCategory10)
      .domain(await this.getColorBreaks());
    this.model.data.nodes.dataNodes.forEach(function (d) { d.highLight = false; });
    this._graphData = this._adjustGraph(this.model.data);
    this._rClusterScale.domain([1, this.model.data.nodes.qtNodes]);
    maxQtNodes = max$1(this._graphData.nodes, function (d) { return d.qtNodes; });
    this._chargeScale.domain([1, maxQtNodes]);
    maxLinkDistance = Math.round(this._rClusterScale(maxQtNodes));
    this._linkDistanceScale.range([3, maxLinkDistance]).domain([1, maxQtNodes]);
    maxQtEdges = max$1(this._graphData.edges, function (d) { return d.qt; });
    if (maxQtEdges === 1) {
      this._linkWidthScale.domain([maxQtEdges]);
    }
    else {
      this._linkWidthScale.domain([1, maxQtEdges]);
    }
    // this._forceLayout.nodes(this._graphData.nodes).force("charge", (d) => { return -(this._chargeScale(d.qtNodes) + this._configLayout.charge); })
    this._forceLayout.nodes(this._graphData.nodes).force("charge", forceManyBody().strength(this._configLayout.gravity))
      .force("link", forceLink().links(this._graphData.edges).distance((d) => {
      return this._configLayout.linkDistance + this._linkDistanceScale(d.source.qtNodes) + this._linkDistanceScale(d.target.qtNodes);
    })).force("forceX", forceX().strength(.1).x(this.width * .7))
      .force("forceY", forceY().strength(.1).y(this.height * .7)).force('collide', forceCollide(function (d) {
      return d.id === "j" ? 25 : 15;
    }));
    this._forceLayout.on("tick", () => {
      if (this.model.data !== null)
        var ticksPerRender = this.model.data.nodes.dataNodes.length / 100;
      else
        var ticksPerRender = 1;
      if (this._graphElem.edges != null) {
        requestAnimationFrame(() => {
          for (var i = 0; i < ticksPerRender; i++) {
            this._forceLayout.tick();
          }
          this._graphElem.edges.attr("x1", function (d) { return d.source.x; })
            .attr("y1", function (d) { return d.source.y; })
            .attr("x2", function (d) { return d.target.x; })
            .attr("y2", function (d) { return d.target.y; });
          this._graphElem.nodes.attr("cx", function (d) { return d.x; })
            .attr("cy", function (d) { return d.y; });
          if (this._forceLayout.alpha() < 0.03)
            this._forceLayout.stop();
        });
      }
    }).on("end", function () {
    });
    let indexNodeAttrTitle = [state.ATN_Category, state.ATN_LinhaPesq, state.ATN_QtLinhaPesq, state.ATN_QtPublicacoes];
    this.setTTNormalNode(this._libtooltips.normalNode(this.model.data, state.ATN_AuthorName, indexNodeAttrTitle, state.headerTitle));
    this.setTTNormalEdge(this._libtooltips.normalEdge(this.model.data, state.ATN_AuthorName, [state.ATE_QtPublicacoes]));
    // _appendLegend();
  }
  ;
  //---------------------
  getGravity() {
    return this._configLayout.gravity;
  }
  ;
  //---------------------
  getCharge() {
    return this._configLayout.charge;
  }
  ;
  //---------------------
  getLinkDistance() {
    return this._configLayout.linkDistance;
  }
  ;
  //---------------------
  getQtNodes() {
    return this._graphData.nodes.length;
  }
  ;
  //---------------------
  getQtEdges() {
    return this._graphData.edges.length;
  }
  ;
  //---------------------
  setItensContextMenu(itens) {
    this._contextMenu.itens = itens;
  }
  ;
  //---------------------
  // Changes the attribute that will be used to map the size
  indexAttrSize(_) {
    if (!arguments.length)
      return this._indexAttrSize + 1000;
    this._indexAttrSize = _ - 1000;
  }
  ;
  //======== Actions Functions
  //---------------------
  acChangeGravity(value) {
    this._configLayout.gravity = +value;
    this._forceLayout.gravity(this._configLayout.gravity).start();
  }
  ;
  //---------------------
  acChangeCharge(value) {
    this._configLayout.charge = +value;
    this._forceLayout.force("charge", (d) => { return -(this._chargeScale(d.qtNodes) + this._configLayout.charge); }).start();
  }
  ;
  //---------------------
  acChangeLinkDistance(value) {
    this._configLayout.linkDistance = +value;
    this._forceLayout.linkDistance((d) => {
      return this._configLayout.linkDistance + this._linkDistanceScale(d.source.qtNodes) + this._linkDistanceScale(d.target.qtNodes);
    }).start();
  }
  ;
  //---------------------
  acChangeAttrSize(atributo) {
    this._indexAttrSize = atributo;
    console.log(atributo + 1000);
    this._appendEdges();
    this._appendNodes();
    this.model.redraw += 1;
  }
  ;
  //---------------------
  resetHighSearch() {
    this._graphElem.nodes.classed("NE-HighSearch", function (d) { return false; });
  }
  ;
  //---------------------
  acSelectByName(nome) {
    this._graphElem.nodes.each(function (d) {
      console.log("flag");
      d.highSearch = false;
      d.highSearch = (d.labels[1] === nome);
    });
    this._graphElem.nodes.classed("NE-HighSearch", function (d) { return d.highSearch; });
  }
  ;
  //---------------------
  acSelectByNameCluster(nomeCluster) {
    this._graphElem.nodes.each(function (d) {
      d.highSearch = false;
      d.highSearch = (d.key === nomeCluster);
    });
    this._graphElem.nodes.classed("NE-HighSearch", function (d) { return d.highSearch; });
  }
  ;
  async getColorBreaks() {
    let breaks = this.model.data.nodes.dataNodes.map(d => d.values[12]);
    breaks = breaks.filter((d, i) => breaks.indexOf(d) == i).sort();
    return breaks;
  }
  ;
  async getColorScale() {
    return this._colorScale;
  }
  ;
  // getColorLabels(){
  //     return this._colorLabels;
  // }
  buildChart(idDiv, svg) {
    this.setBox(this.model.box);
    this.indexAttrSize(1011);
    this.addNodeLinkChart(idDiv, svg);
    // this.setData(this.chartData);
    // console.log(this._chart);
    // this._chart().data(this.chartData);
  }
  componentDidLoad() {
    let svg = select(this.element.querySelectorAll(".nodelink")[0])
      .attr("width", this.width)
      .attr("height", this.height);
    // console.log(this.id)
    // this._nodeEdgeLegend.create(this.id)
    this.buildChart("nodelink", svg);
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { class: "nodelink" })));
  }
  get element() { return getElement(this); }
  static get style() { return mgeNodelinkCss; }
  static get cmpMeta() { return {
    "$flags$": 0,
    "$tagName$": "mge-nodelink",
    "$members$": {
      "width": [2],
      "height": [2],
      "data": [1],
      "addNodeLinkChart": [64],
      "setBox": [64],
      "setPanel": [64],
      "setLegend": [64],
      "setData": [64],
      "getColorBreaks": [64],
      "getColorScale": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const mgeQueryCss = "/*!@:host*/.sc-mge-query-h{display:block}/*!@#toolBar*/#toolBar.sc-mge-query{position:fixed;width:100%;height:35px;font-family:Verdana, Arial;font-weight:bold;font-size:14px;color:#000;background-color:#AA9071}/*!@#toolBar span*/#toolBar.sc-mge-query span.sc-mge-query{cursor:pointer;margin-left:10px}/*!@#query*/#query.sc-mge-query{padding:7px 10px 0px 6px;display:inline-block}/*!@#titulo*/#titulo.sc-mge-query{font-size:14px;color:#ffe066;padding:0px 60px 0px 0px}/*!@#lblMensagem*/#lblMensagem.sc-mge-query{font-size:11px;font-style:italic;color:#ffe066;padding:0px 0px 0px 60px}/*!@.fa,\n.fas,\n.far,\n.fal,\n.fad,\n.fab*/.fa.sc-mge-query,.fas.sc-mge-query,.far.sc-mge-query,.fal.sc-mge-query,.fad.sc-mge-query,.fab.sc-mge-query{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-block;font-style:normal;font-variant:normal;text-rendering:auto;line-height:1}/*!@.fa-lg*/.fa-lg.sc-mge-query{font-size:1.33333em;line-height:0.75em;vertical-align:-.0667em}/*!@.fa-xs*/.fa-xs.sc-mge-query{font-size:.75em}/*!@.fa-sm*/.fa-sm.sc-mge-query{font-size:.875em}/*!@.fa-1x*/.fa-1x.sc-mge-query{font-size:1em}/*!@.fa-2x*/.fa-2x.sc-mge-query{font-size:2em}/*!@.fa-3x*/.fa-3x.sc-mge-query{font-size:3em}/*!@.fa-4x*/.fa-4x.sc-mge-query{font-size:4em}/*!@.fa-5x*/.fa-5x.sc-mge-query{font-size:5em}/*!@.fa-6x*/.fa-6x.sc-mge-query{font-size:6em}/*!@.fa-7x*/.fa-7x.sc-mge-query{font-size:7em}/*!@.fa-8x*/.fa-8x.sc-mge-query{font-size:8em}/*!@.fa-9x*/.fa-9x.sc-mge-query{font-size:9em}/*!@.fa-10x*/.fa-10x.sc-mge-query{font-size:10em}/*!@.fa-fw*/.fa-fw.sc-mge-query{text-align:center;width:1.25em}/*!@.fa-ul*/.fa-ul.sc-mge-query{list-style-type:none;margin-left:2.5em;padding-left:0}/*!@.fa-ul > li*/.fa-ul.sc-mge-query>li.sc-mge-query{position:relative}/*!@.fa-li*/.fa-li.sc-mge-query{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}/*!@.fa-border*/.fa-border.sc-mge-query{border:solid 0.08em #eee;border-radius:.1em;padding:.2em .25em .15em}/*!@.fa-pull-left*/.fa-pull-left.sc-mge-query{float:left}/*!@.fa-pull-right*/.fa-pull-right.sc-mge-query{float:right}/*!@.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left*/.fa.fa-pull-left.sc-mge-query,.fas.fa-pull-left.sc-mge-query,.far.fa-pull-left.sc-mge-query,.fal.fa-pull-left.sc-mge-query,.fab.fa-pull-left.sc-mge-query{margin-right:.3em}/*!@.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right*/.fa.fa-pull-right.sc-mge-query,.fas.fa-pull-right.sc-mge-query,.far.fa-pull-right.sc-mge-query,.fal.fa-pull-right.sc-mge-query,.fab.fa-pull-right.sc-mge-query{margin-left:.3em}/*!@.fa-spin*/.fa-spin.sc-mge-query{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}/*!@.fa-pulse*/.fa-pulse.sc-mge-query{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}/*!@.fa-rotate-90*/.fa-rotate-90.sc-mge-query{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";-webkit-transform:rotate(90deg);transform:rotate(90deg)}/*!@.fa-rotate-180*/.fa-rotate-180.sc-mge-query{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";-webkit-transform:rotate(180deg);transform:rotate(180deg)}/*!@.fa-rotate-270*/.fa-rotate-270.sc-mge-query{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";-webkit-transform:rotate(270deg);transform:rotate(270deg)}/*!@.fa-flip-horizontal*/.fa-flip-horizontal.sc-mge-query{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";-webkit-transform:scale(-1, 1);transform:scale(-1, 1)}/*!@.fa-flip-vertical*/.fa-flip-vertical.sc-mge-query{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";-webkit-transform:scale(1, -1);transform:scale(1, -1)}/*!@.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical*/.fa-flip-both.sc-mge-query,.fa-flip-horizontal.fa-flip-vertical.sc-mge-query{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";-webkit-transform:scale(-1, -1);transform:scale(-1, -1)}/*!@:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both*/.sc-mge-query:root .fa-rotate-90.sc-mge-query,.sc-mge-query:root .fa-rotate-180.sc-mge-query,.sc-mge-query:root .fa-rotate-270.sc-mge-query,.sc-mge-query:root .fa-flip-horizontal.sc-mge-query,.sc-mge-query:root .fa-flip-vertical.sc-mge-query,.sc-mge-query:root .fa-flip-both.sc-mge-query{-webkit-filter:none;filter:none}/*!@.fa-stack*/.fa-stack.sc-mge-query{display:inline-block;height:2em;line-height:2em;position:relative;vertical-align:middle;width:2.5em}/*!@.fa-stack-1x,\n.fa-stack-2x*/.fa-stack-1x.sc-mge-query,.fa-stack-2x.sc-mge-query{left:0;position:absolute;text-align:center;width:100%}/*!@.fa-stack-1x*/.fa-stack-1x.sc-mge-query{line-height:inherit}/*!@.fa-stack-2x*/.fa-stack-2x.sc-mge-query{font-size:2em}/*!@.fa-inverse*/.fa-inverse.sc-mge-query{color:#fff}/*!@.fa-500px:before*/.fa-500px.sc-mge-query:before{content:\"\\f26e\"}/*!@.fa-accessible-icon:before*/.fa-accessible-icon.sc-mge-query:before{content:\"\\f368\"}/*!@.fa-accusoft:before*/.fa-accusoft.sc-mge-query:before{content:\"\\f369\"}/*!@.fa-acquisitions-incorporated:before*/.fa-acquisitions-incorporated.sc-mge-query:before{content:\"\\f6af\"}/*!@.fa-ad:before*/.fa-ad.sc-mge-query:before{content:\"\\f641\"}/*!@.fa-address-book:before*/.fa-address-book.sc-mge-query:before{content:\"\\f2b9\"}/*!@.fa-address-card:before*/.fa-address-card.sc-mge-query:before{content:\"\\f2bb\"}/*!@.fa-adjust:before*/.fa-adjust.sc-mge-query:before{content:\"\\f042\"}/*!@.fa-adn:before*/.fa-adn.sc-mge-query:before{content:\"\\f170\"}/*!@.fa-adversal:before*/.fa-adversal.sc-mge-query:before{content:\"\\f36a\"}/*!@.fa-affiliatetheme:before*/.fa-affiliatetheme.sc-mge-query:before{content:\"\\f36b\"}/*!@.fa-air-freshener:before*/.fa-air-freshener.sc-mge-query:before{content:\"\\f5d0\"}/*!@.fa-airbnb:before*/.fa-airbnb.sc-mge-query:before{content:\"\\f834\"}/*!@.fa-algolia:before*/.fa-algolia.sc-mge-query:before{content:\"\\f36c\"}/*!@.fa-align-center:before*/.fa-align-center.sc-mge-query:before{content:\"\\f037\"}/*!@.fa-align-justify:before*/.fa-align-justify.sc-mge-query:before{content:\"\\f039\"}/*!@.fa-align-left:before*/.fa-align-left.sc-mge-query:before{content:\"\\f036\"}/*!@.fa-align-right:before*/.fa-align-right.sc-mge-query:before{content:\"\\f038\"}/*!@.fa-alipay:before*/.fa-alipay.sc-mge-query:before{content:\"\\f642\"}/*!@.fa-allergies:before*/.fa-allergies.sc-mge-query:before{content:\"\\f461\"}/*!@.fa-amazon:before*/.fa-amazon.sc-mge-query:before{content:\"\\f270\"}/*!@.fa-amazon-pay:before*/.fa-amazon-pay.sc-mge-query:before{content:\"\\f42c\"}/*!@.fa-ambulance:before*/.fa-ambulance.sc-mge-query:before{content:\"\\f0f9\"}/*!@.fa-american-sign-language-interpreting:before*/.fa-american-sign-language-interpreting.sc-mge-query:before{content:\"\\f2a3\"}/*!@.fa-amilia:before*/.fa-amilia.sc-mge-query:before{content:\"\\f36d\"}/*!@.fa-anchor:before*/.fa-anchor.sc-mge-query:before{content:\"\\f13d\"}/*!@.fa-android:before*/.fa-android.sc-mge-query:before{content:\"\\f17b\"}/*!@.fa-angellist:before*/.fa-angellist.sc-mge-query:before{content:\"\\f209\"}/*!@.fa-angle-double-down:before*/.fa-angle-double-down.sc-mge-query:before{content:\"\\f103\"}/*!@.fa-angle-double-left:before*/.fa-angle-double-left.sc-mge-query:before{content:\"\\f100\"}/*!@.fa-angle-double-right:before*/.fa-angle-double-right.sc-mge-query:before{content:\"\\f101\"}/*!@.fa-angle-double-up:before*/.fa-angle-double-up.sc-mge-query:before{content:\"\\f102\"}/*!@.fa-angle-down:before*/.fa-angle-down.sc-mge-query:before{content:\"\\f107\"}/*!@.fa-angle-left:before*/.fa-angle-left.sc-mge-query:before{content:\"\\f104\"}/*!@.fa-angle-right:before*/.fa-angle-right.sc-mge-query:before{content:\"\\f105\"}/*!@.fa-angle-up:before*/.fa-angle-up.sc-mge-query:before{content:\"\\f106\"}/*!@.fa-angry:before*/.fa-angry.sc-mge-query:before{content:\"\\f556\"}/*!@.fa-angrycreative:before*/.fa-angrycreative.sc-mge-query:before{content:\"\\f36e\"}/*!@.fa-angular:before*/.fa-angular.sc-mge-query:before{content:\"\\f420\"}/*!@.fa-ankh:before*/.fa-ankh.sc-mge-query:before{content:\"\\f644\"}/*!@.fa-app-store:before*/.fa-app-store.sc-mge-query:before{content:\"\\f36f\"}/*!@.fa-app-store-ios:before*/.fa-app-store-ios.sc-mge-query:before{content:\"\\f370\"}/*!@.fa-apper:before*/.fa-apper.sc-mge-query:before{content:\"\\f371\"}/*!@.fa-apple:before*/.fa-apple.sc-mge-query:before{content:\"\\f179\"}/*!@.fa-apple-alt:before*/.fa-apple-alt.sc-mge-query:before{content:\"\\f5d1\"}/*!@.fa-apple-pay:before*/.fa-apple-pay.sc-mge-query:before{content:\"\\f415\"}/*!@.fa-archive:before*/.fa-archive.sc-mge-query:before{content:\"\\f187\"}/*!@.fa-archway:before*/.fa-archway.sc-mge-query:before{content:\"\\f557\"}/*!@.fa-arrow-alt-circle-down:before*/.fa-arrow-alt-circle-down.sc-mge-query:before{content:\"\\f358\"}/*!@.fa-arrow-alt-circle-left:before*/.fa-arrow-alt-circle-left.sc-mge-query:before{content:\"\\f359\"}/*!@.fa-arrow-alt-circle-right:before*/.fa-arrow-alt-circle-right.sc-mge-query:before{content:\"\\f35a\"}/*!@.fa-arrow-alt-circle-up:before*/.fa-arrow-alt-circle-up.sc-mge-query:before{content:\"\\f35b\"}/*!@.fa-arrow-circle-down:before*/.fa-arrow-circle-down.sc-mge-query:before{content:\"\\f0ab\"}/*!@.fa-arrow-circle-left:before*/.fa-arrow-circle-left.sc-mge-query:before{content:\"\\f0a8\"}/*!@.fa-arrow-circle-right:before*/.fa-arrow-circle-right.sc-mge-query:before{content:\"\\f0a9\"}/*!@.fa-arrow-circle-up:before*/.fa-arrow-circle-up.sc-mge-query:before{content:\"\\f0aa\"}/*!@.fa-arrow-down:before*/.fa-arrow-down.sc-mge-query:before{content:\"\\f063\"}/*!@.fa-arrow-left:before*/.fa-arrow-left.sc-mge-query:before{content:\"\\f060\"}/*!@.fa-arrow-right:before*/.fa-arrow-right.sc-mge-query:before{content:\"\\f061\"}/*!@.fa-arrow-up:before*/.fa-arrow-up.sc-mge-query:before{content:\"\\f062\"}/*!@.fa-arrows-alt:before*/.fa-arrows-alt.sc-mge-query:before{content:\"\\f0b2\"}/*!@.fa-arrows-alt-h:before*/.fa-arrows-alt-h.sc-mge-query:before{content:\"\\f337\"}/*!@.fa-arrows-alt-v:before*/.fa-arrows-alt-v.sc-mge-query:before{content:\"\\f338\"}/*!@.fa-artstation:before*/.fa-artstation.sc-mge-query:before{content:\"\\f77a\"}/*!@.fa-assistive-listening-systems:before*/.fa-assistive-listening-systems.sc-mge-query:before{content:\"\\f2a2\"}/*!@.fa-asterisk:before*/.fa-asterisk.sc-mge-query:before{content:\"\\f069\"}/*!@.fa-asymmetrik:before*/.fa-asymmetrik.sc-mge-query:before{content:\"\\f372\"}/*!@.fa-at:before*/.fa-at.sc-mge-query:before{content:\"\\f1fa\"}/*!@.fa-atlas:before*/.fa-atlas.sc-mge-query:before{content:\"\\f558\"}/*!@.fa-atlassian:before*/.fa-atlassian.sc-mge-query:before{content:\"\\f77b\"}/*!@.fa-atom:before*/.fa-atom.sc-mge-query:before{content:\"\\f5d2\"}/*!@.fa-audible:before*/.fa-audible.sc-mge-query:before{content:\"\\f373\"}/*!@.fa-audio-description:before*/.fa-audio-description.sc-mge-query:before{content:\"\\f29e\"}/*!@.fa-autoprefixer:before*/.fa-autoprefixer.sc-mge-query:before{content:\"\\f41c\"}/*!@.fa-avianex:before*/.fa-avianex.sc-mge-query:before{content:\"\\f374\"}/*!@.fa-aviato:before*/.fa-aviato.sc-mge-query:before{content:\"\\f421\"}/*!@.fa-award:before*/.fa-award.sc-mge-query:before{content:\"\\f559\"}/*!@.fa-aws:before*/.fa-aws.sc-mge-query:before{content:\"\\f375\"}/*!@.fa-baby:before*/.fa-baby.sc-mge-query:before{content:\"\\f77c\"}/*!@.fa-baby-carriage:before*/.fa-baby-carriage.sc-mge-query:before{content:\"\\f77d\"}/*!@.fa-backspace:before*/.fa-backspace.sc-mge-query:before{content:\"\\f55a\"}/*!@.fa-backward:before*/.fa-backward.sc-mge-query:before{content:\"\\f04a\"}/*!@.fa-bacon:before*/.fa-bacon.sc-mge-query:before{content:\"\\f7e5\"}/*!@.fa-bacteria:before*/.fa-bacteria.sc-mge-query:before{content:\"\\e059\"}/*!@.fa-bacterium:before*/.fa-bacterium.sc-mge-query:before{content:\"\\e05a\"}/*!@.fa-bahai:before*/.fa-bahai.sc-mge-query:before{content:\"\\f666\"}/*!@.fa-balance-scale:before*/.fa-balance-scale.sc-mge-query:before{content:\"\\f24e\"}/*!@.fa-balance-scale-left:before*/.fa-balance-scale-left.sc-mge-query:before{content:\"\\f515\"}/*!@.fa-balance-scale-right:before*/.fa-balance-scale-right.sc-mge-query:before{content:\"\\f516\"}/*!@.fa-ban:before*/.fa-ban.sc-mge-query:before{content:\"\\f05e\"}/*!@.fa-band-aid:before*/.fa-band-aid.sc-mge-query:before{content:\"\\f462\"}/*!@.fa-bandcamp:before*/.fa-bandcamp.sc-mge-query:before{content:\"\\f2d5\"}/*!@.fa-barcode:before*/.fa-barcode.sc-mge-query:before{content:\"\\f02a\"}/*!@.fa-bars:before*/.fa-bars.sc-mge-query:before{content:\"\\f0c9\"}/*!@.fa-baseball-ball:before*/.fa-baseball-ball.sc-mge-query:before{content:\"\\f433\"}/*!@.fa-basketball-ball:before*/.fa-basketball-ball.sc-mge-query:before{content:\"\\f434\"}/*!@.fa-bath:before*/.fa-bath.sc-mge-query:before{content:\"\\f2cd\"}/*!@.fa-battery-empty:before*/.fa-battery-empty.sc-mge-query:before{content:\"\\f244\"}/*!@.fa-battery-full:before*/.fa-battery-full.sc-mge-query:before{content:\"\\f240\"}/*!@.fa-battery-half:before*/.fa-battery-half.sc-mge-query:before{content:\"\\f242\"}/*!@.fa-battery-quarter:before*/.fa-battery-quarter.sc-mge-query:before{content:\"\\f243\"}/*!@.fa-battery-three-quarters:before*/.fa-battery-three-quarters.sc-mge-query:before{content:\"\\f241\"}/*!@.fa-battle-net:before*/.fa-battle-net.sc-mge-query:before{content:\"\\f835\"}/*!@.fa-bed:before*/.fa-bed.sc-mge-query:before{content:\"\\f236\"}/*!@.fa-beer:before*/.fa-beer.sc-mge-query:before{content:\"\\f0fc\"}/*!@.fa-behance:before*/.fa-behance.sc-mge-query:before{content:\"\\f1b4\"}/*!@.fa-behance-square:before*/.fa-behance-square.sc-mge-query:before{content:\"\\f1b5\"}/*!@.fa-bell:before*/.fa-bell.sc-mge-query:before{content:\"\\f0f3\"}/*!@.fa-bell-slash:before*/.fa-bell-slash.sc-mge-query:before{content:\"\\f1f6\"}/*!@.fa-bezier-curve:before*/.fa-bezier-curve.sc-mge-query:before{content:\"\\f55b\"}/*!@.fa-bible:before*/.fa-bible.sc-mge-query:before{content:\"\\f647\"}/*!@.fa-bicycle:before*/.fa-bicycle.sc-mge-query:before{content:\"\\f206\"}/*!@.fa-biking:before*/.fa-biking.sc-mge-query:before{content:\"\\f84a\"}/*!@.fa-bimobject:before*/.fa-bimobject.sc-mge-query:before{content:\"\\f378\"}/*!@.fa-binoculars:before*/.fa-binoculars.sc-mge-query:before{content:\"\\f1e5\"}/*!@.fa-biohazard:before*/.fa-biohazard.sc-mge-query:before{content:\"\\f780\"}/*!@.fa-birthday-cake:before*/.fa-birthday-cake.sc-mge-query:before{content:\"\\f1fd\"}/*!@.fa-bitbucket:before*/.fa-bitbucket.sc-mge-query:before{content:\"\\f171\"}/*!@.fa-bitcoin:before*/.fa-bitcoin.sc-mge-query:before{content:\"\\f379\"}/*!@.fa-bity:before*/.fa-bity.sc-mge-query:before{content:\"\\f37a\"}/*!@.fa-black-tie:before*/.fa-black-tie.sc-mge-query:before{content:\"\\f27e\"}/*!@.fa-blackberry:before*/.fa-blackberry.sc-mge-query:before{content:\"\\f37b\"}/*!@.fa-blender:before*/.fa-blender.sc-mge-query:before{content:\"\\f517\"}/*!@.fa-blender-phone:before*/.fa-blender-phone.sc-mge-query:before{content:\"\\f6b6\"}/*!@.fa-blind:before*/.fa-blind.sc-mge-query:before{content:\"\\f29d\"}/*!@.fa-blog:before*/.fa-blog.sc-mge-query:before{content:\"\\f781\"}/*!@.fa-blogger:before*/.fa-blogger.sc-mge-query:before{content:\"\\f37c\"}/*!@.fa-blogger-b:before*/.fa-blogger-b.sc-mge-query:before{content:\"\\f37d\"}/*!@.fa-bluetooth:before*/.fa-bluetooth.sc-mge-query:before{content:\"\\f293\"}/*!@.fa-bluetooth-b:before*/.fa-bluetooth-b.sc-mge-query:before{content:\"\\f294\"}/*!@.fa-bold:before*/.fa-bold.sc-mge-query:before{content:\"\\f032\"}/*!@.fa-bolt:before*/.fa-bolt.sc-mge-query:before{content:\"\\f0e7\"}/*!@.fa-bomb:before*/.fa-bomb.sc-mge-query:before{content:\"\\f1e2\"}/*!@.fa-bone:before*/.fa-bone.sc-mge-query:before{content:\"\\f5d7\"}/*!@.fa-bong:before*/.fa-bong.sc-mge-query:before{content:\"\\f55c\"}/*!@.fa-book:before*/.fa-book.sc-mge-query:before{content:\"\\f02d\"}/*!@.fa-book-dead:before*/.fa-book-dead.sc-mge-query:before{content:\"\\f6b7\"}/*!@.fa-book-medical:before*/.fa-book-medical.sc-mge-query:before{content:\"\\f7e6\"}/*!@.fa-book-open:before*/.fa-book-open.sc-mge-query:before{content:\"\\f518\"}/*!@.fa-book-reader:before*/.fa-book-reader.sc-mge-query:before{content:\"\\f5da\"}/*!@.fa-bookmark:before*/.fa-bookmark.sc-mge-query:before{content:\"\\f02e\"}/*!@.fa-bootstrap:before*/.fa-bootstrap.sc-mge-query:before{content:\"\\f836\"}/*!@.fa-border-all:before*/.fa-border-all.sc-mge-query:before{content:\"\\f84c\"}/*!@.fa-border-none:before*/.fa-border-none.sc-mge-query:before{content:\"\\f850\"}/*!@.fa-border-style:before*/.fa-border-style.sc-mge-query:before{content:\"\\f853\"}/*!@.fa-bowling-ball:before*/.fa-bowling-ball.sc-mge-query:before{content:\"\\f436\"}/*!@.fa-box:before*/.fa-box.sc-mge-query:before{content:\"\\f466\"}/*!@.fa-box-open:before*/.fa-box-open.sc-mge-query:before{content:\"\\f49e\"}/*!@.fa-box-tissue:before*/.fa-box-tissue.sc-mge-query:before{content:\"\\e05b\"}/*!@.fa-boxes:before*/.fa-boxes.sc-mge-query:before{content:\"\\f468\"}/*!@.fa-braille:before*/.fa-braille.sc-mge-query:before{content:\"\\f2a1\"}/*!@.fa-brain:before*/.fa-brain.sc-mge-query:before{content:\"\\f5dc\"}/*!@.fa-bread-slice:before*/.fa-bread-slice.sc-mge-query:before{content:\"\\f7ec\"}/*!@.fa-briefcase:before*/.fa-briefcase.sc-mge-query:before{content:\"\\f0b1\"}/*!@.fa-briefcase-medical:before*/.fa-briefcase-medical.sc-mge-query:before{content:\"\\f469\"}/*!@.fa-broadcast-tower:before*/.fa-broadcast-tower.sc-mge-query:before{content:\"\\f519\"}/*!@.fa-broom:before*/.fa-broom.sc-mge-query:before{content:\"\\f51a\"}/*!@.fa-brush:before*/.fa-brush.sc-mge-query:before{content:\"\\f55d\"}/*!@.fa-btc:before*/.fa-btc.sc-mge-query:before{content:\"\\f15a\"}/*!@.fa-buffer:before*/.fa-buffer.sc-mge-query:before{content:\"\\f837\"}/*!@.fa-bug:before*/.fa-bug.sc-mge-query:before{content:\"\\f188\"}/*!@.fa-building:before*/.fa-building.sc-mge-query:before{content:\"\\f1ad\"}/*!@.fa-bullhorn:before*/.fa-bullhorn.sc-mge-query:before{content:\"\\f0a1\"}/*!@.fa-bullseye:before*/.fa-bullseye.sc-mge-query:before{content:\"\\f140\"}/*!@.fa-burn:before*/.fa-burn.sc-mge-query:before{content:\"\\f46a\"}/*!@.fa-buromobelexperte:before*/.fa-buromobelexperte.sc-mge-query:before{content:\"\\f37f\"}/*!@.fa-bus:before*/.fa-bus.sc-mge-query:before{content:\"\\f207\"}/*!@.fa-bus-alt:before*/.fa-bus-alt.sc-mge-query:before{content:\"\\f55e\"}/*!@.fa-business-time:before*/.fa-business-time.sc-mge-query:before{content:\"\\f64a\"}/*!@.fa-buy-n-large:before*/.fa-buy-n-large.sc-mge-query:before{content:\"\\f8a6\"}/*!@.fa-buysellads:before*/.fa-buysellads.sc-mge-query:before{content:\"\\f20d\"}/*!@.fa-calculator:before*/.fa-calculator.sc-mge-query:before{content:\"\\f1ec\"}/*!@.fa-calendar:before*/.fa-calendar.sc-mge-query:before{content:\"\\f133\"}/*!@.fa-calendar-alt:before*/.fa-calendar-alt.sc-mge-query:before{content:\"\\f073\"}/*!@.fa-calendar-check:before*/.fa-calendar-check.sc-mge-query:before{content:\"\\f274\"}/*!@.fa-calendar-day:before*/.fa-calendar-day.sc-mge-query:before{content:\"\\f783\"}/*!@.fa-calendar-minus:before*/.fa-calendar-minus.sc-mge-query:before{content:\"\\f272\"}/*!@.fa-calendar-plus:before*/.fa-calendar-plus.sc-mge-query:before{content:\"\\f271\"}/*!@.fa-calendar-times:before*/.fa-calendar-times.sc-mge-query:before{content:\"\\f273\"}/*!@.fa-calendar-week:before*/.fa-calendar-week.sc-mge-query:before{content:\"\\f784\"}/*!@.fa-camera:before*/.fa-camera.sc-mge-query:before{content:\"\\f030\"}/*!@.fa-camera-retro:before*/.fa-camera-retro.sc-mge-query:before{content:\"\\f083\"}/*!@.fa-campground:before*/.fa-campground.sc-mge-query:before{content:\"\\f6bb\"}/*!@.fa-canadian-maple-leaf:before*/.fa-canadian-maple-leaf.sc-mge-query:before{content:\"\\f785\"}/*!@.fa-candy-cane:before*/.fa-candy-cane.sc-mge-query:before{content:\"\\f786\"}/*!@.fa-cannabis:before*/.fa-cannabis.sc-mge-query:before{content:\"\\f55f\"}/*!@.fa-capsules:before*/.fa-capsules.sc-mge-query:before{content:\"\\f46b\"}/*!@.fa-car:before*/.fa-car.sc-mge-query:before{content:\"\\f1b9\"}/*!@.fa-car-alt:before*/.fa-car-alt.sc-mge-query:before{content:\"\\f5de\"}/*!@.fa-car-battery:before*/.fa-car-battery.sc-mge-query:before{content:\"\\f5df\"}/*!@.fa-car-crash:before*/.fa-car-crash.sc-mge-query:before{content:\"\\f5e1\"}/*!@.fa-car-side:before*/.fa-car-side.sc-mge-query:before{content:\"\\f5e4\"}/*!@.fa-caravan:before*/.fa-caravan.sc-mge-query:before{content:\"\\f8ff\"}/*!@.fa-caret-down:before*/.fa-caret-down.sc-mge-query:before{content:\"\\f0d7\"}/*!@.fa-caret-left:before*/.fa-caret-left.sc-mge-query:before{content:\"\\f0d9\"}/*!@.fa-caret-right:before*/.fa-caret-right.sc-mge-query:before{content:\"\\f0da\"}/*!@.fa-caret-square-down:before*/.fa-caret-square-down.sc-mge-query:before{content:\"\\f150\"}/*!@.fa-caret-square-left:before*/.fa-caret-square-left.sc-mge-query:before{content:\"\\f191\"}/*!@.fa-caret-square-right:before*/.fa-caret-square-right.sc-mge-query:before{content:\"\\f152\"}/*!@.fa-caret-square-up:before*/.fa-caret-square-up.sc-mge-query:before{content:\"\\f151\"}/*!@.fa-caret-up:before*/.fa-caret-up.sc-mge-query:before{content:\"\\f0d8\"}/*!@.fa-carrot:before*/.fa-carrot.sc-mge-query:before{content:\"\\f787\"}/*!@.fa-cart-arrow-down:before*/.fa-cart-arrow-down.sc-mge-query:before{content:\"\\f218\"}/*!@.fa-cart-plus:before*/.fa-cart-plus.sc-mge-query:before{content:\"\\f217\"}/*!@.fa-cash-register:before*/.fa-cash-register.sc-mge-query:before{content:\"\\f788\"}/*!@.fa-cat:before*/.fa-cat.sc-mge-query:before{content:\"\\f6be\"}/*!@.fa-cc-amazon-pay:before*/.fa-cc-amazon-pay.sc-mge-query:before{content:\"\\f42d\"}/*!@.fa-cc-amex:before*/.fa-cc-amex.sc-mge-query:before{content:\"\\f1f3\"}/*!@.fa-cc-apple-pay:before*/.fa-cc-apple-pay.sc-mge-query:before{content:\"\\f416\"}/*!@.fa-cc-diners-club:before*/.fa-cc-diners-club.sc-mge-query:before{content:\"\\f24c\"}/*!@.fa-cc-discover:before*/.fa-cc-discover.sc-mge-query:before{content:\"\\f1f2\"}/*!@.fa-cc-jcb:before*/.fa-cc-jcb.sc-mge-query:before{content:\"\\f24b\"}/*!@.fa-cc-mastercard:before*/.fa-cc-mastercard.sc-mge-query:before{content:\"\\f1f1\"}/*!@.fa-cc-paypal:before*/.fa-cc-paypal.sc-mge-query:before{content:\"\\f1f4\"}/*!@.fa-cc-stripe:before*/.fa-cc-stripe.sc-mge-query:before{content:\"\\f1f5\"}/*!@.fa-cc-visa:before*/.fa-cc-visa.sc-mge-query:before{content:\"\\f1f0\"}/*!@.fa-centercode:before*/.fa-centercode.sc-mge-query:before{content:\"\\f380\"}/*!@.fa-centos:before*/.fa-centos.sc-mge-query:before{content:\"\\f789\"}/*!@.fa-certificate:before*/.fa-certificate.sc-mge-query:before{content:\"\\f0a3\"}/*!@.fa-chair:before*/.fa-chair.sc-mge-query:before{content:\"\\f6c0\"}/*!@.fa-chalkboard:before*/.fa-chalkboard.sc-mge-query:before{content:\"\\f51b\"}/*!@.fa-chalkboard-teacher:before*/.fa-chalkboard-teacher.sc-mge-query:before{content:\"\\f51c\"}/*!@.fa-charging-station:before*/.fa-charging-station.sc-mge-query:before{content:\"\\f5e7\"}/*!@.fa-chart-area:before*/.fa-chart-area.sc-mge-query:before{content:\"\\f1fe\"}/*!@.fa-chart-bar:before*/.fa-chart-bar.sc-mge-query:before{content:\"\\f080\"}/*!@.fa-chart-line:before*/.fa-chart-line.sc-mge-query:before{content:\"\\f201\"}/*!@.fa-chart-pie:before*/.fa-chart-pie.sc-mge-query:before{content:\"\\f200\"}/*!@.fa-check:before*/.fa-check.sc-mge-query:before{content:\"\\f00c\"}/*!@.fa-check-circle:before*/.fa-check-circle.sc-mge-query:before{content:\"\\f058\"}/*!@.fa-check-double:before*/.fa-check-double.sc-mge-query:before{content:\"\\f560\"}/*!@.fa-check-square:before*/.fa-check-square.sc-mge-query:before{content:\"\\f14a\"}/*!@.fa-cheese:before*/.fa-cheese.sc-mge-query:before{content:\"\\f7ef\"}/*!@.fa-chess:before*/.fa-chess.sc-mge-query:before{content:\"\\f439\"}/*!@.fa-chess-bishop:before*/.fa-chess-bishop.sc-mge-query:before{content:\"\\f43a\"}/*!@.fa-chess-board:before*/.fa-chess-board.sc-mge-query:before{content:\"\\f43c\"}/*!@.fa-chess-king:before*/.fa-chess-king.sc-mge-query:before{content:\"\\f43f\"}/*!@.fa-chess-knight:before*/.fa-chess-knight.sc-mge-query:before{content:\"\\f441\"}/*!@.fa-chess-pawn:before*/.fa-chess-pawn.sc-mge-query:before{content:\"\\f443\"}/*!@.fa-chess-queen:before*/.fa-chess-queen.sc-mge-query:before{content:\"\\f445\"}/*!@.fa-chess-rook:before*/.fa-chess-rook.sc-mge-query:before{content:\"\\f447\"}/*!@.fa-chevron-circle-down:before*/.fa-chevron-circle-down.sc-mge-query:before{content:\"\\f13a\"}/*!@.fa-chevron-circle-left:before*/.fa-chevron-circle-left.sc-mge-query:before{content:\"\\f137\"}/*!@.fa-chevron-circle-right:before*/.fa-chevron-circle-right.sc-mge-query:before{content:\"\\f138\"}/*!@.fa-chevron-circle-up:before*/.fa-chevron-circle-up.sc-mge-query:before{content:\"\\f139\"}/*!@.fa-chevron-down:before*/.fa-chevron-down.sc-mge-query:before{content:\"\\f078\"}/*!@.fa-chevron-left:before*/.fa-chevron-left.sc-mge-query:before{content:\"\\f053\"}/*!@.fa-chevron-right:before*/.fa-chevron-right.sc-mge-query:before{content:\"\\f054\"}/*!@.fa-chevron-up:before*/.fa-chevron-up.sc-mge-query:before{content:\"\\f077\"}/*!@.fa-child:before*/.fa-child.sc-mge-query:before{content:\"\\f1ae\"}/*!@.fa-chrome:before*/.fa-chrome.sc-mge-query:before{content:\"\\f268\"}/*!@.fa-chromecast:before*/.fa-chromecast.sc-mge-query:before{content:\"\\f838\"}/*!@.fa-church:before*/.fa-church.sc-mge-query:before{content:\"\\f51d\"}/*!@.fa-circle:before*/.fa-circle.sc-mge-query:before{content:\"\\f111\"}/*!@.fa-circle-notch:before*/.fa-circle-notch.sc-mge-query:before{content:\"\\f1ce\"}/*!@.fa-city:before*/.fa-city.sc-mge-query:before{content:\"\\f64f\"}/*!@.fa-clinic-medical:before*/.fa-clinic-medical.sc-mge-query:before{content:\"\\f7f2\"}/*!@.fa-clipboard:before*/.fa-clipboard.sc-mge-query:before{content:\"\\f328\"}/*!@.fa-clipboard-check:before*/.fa-clipboard-check.sc-mge-query:before{content:\"\\f46c\"}/*!@.fa-clipboard-list:before*/.fa-clipboard-list.sc-mge-query:before{content:\"\\f46d\"}/*!@.fa-clock:before*/.fa-clock.sc-mge-query:before{content:\"\\f017\"}/*!@.fa-clone:before*/.fa-clone.sc-mge-query:before{content:\"\\f24d\"}/*!@.fa-closed-captioning:before*/.fa-closed-captioning.sc-mge-query:before{content:\"\\f20a\"}/*!@.fa-cloud:before*/.fa-cloud.sc-mge-query:before{content:\"\\f0c2\"}/*!@.fa-cloud-download-alt:before*/.fa-cloud-download-alt.sc-mge-query:before{content:\"\\f381\"}/*!@.fa-cloud-meatball:before*/.fa-cloud-meatball.sc-mge-query:before{content:\"\\f73b\"}/*!@.fa-cloud-moon:before*/.fa-cloud-moon.sc-mge-query:before{content:\"\\f6c3\"}/*!@.fa-cloud-moon-rain:before*/.fa-cloud-moon-rain.sc-mge-query:before{content:\"\\f73c\"}/*!@.fa-cloud-rain:before*/.fa-cloud-rain.sc-mge-query:before{content:\"\\f73d\"}/*!@.fa-cloud-showers-heavy:before*/.fa-cloud-showers-heavy.sc-mge-query:before{content:\"\\f740\"}/*!@.fa-cloud-sun:before*/.fa-cloud-sun.sc-mge-query:before{content:\"\\f6c4\"}/*!@.fa-cloud-sun-rain:before*/.fa-cloud-sun-rain.sc-mge-query:before{content:\"\\f743\"}/*!@.fa-cloud-upload-alt:before*/.fa-cloud-upload-alt.sc-mge-query:before{content:\"\\f382\"}/*!@.fa-cloudflare:before*/.fa-cloudflare.sc-mge-query:before{content:\"\\e07d\"}/*!@.fa-cloudscale:before*/.fa-cloudscale.sc-mge-query:before{content:\"\\f383\"}/*!@.fa-cloudsmith:before*/.fa-cloudsmith.sc-mge-query:before{content:\"\\f384\"}/*!@.fa-cloudversify:before*/.fa-cloudversify.sc-mge-query:before{content:\"\\f385\"}/*!@.fa-cocktail:before*/.fa-cocktail.sc-mge-query:before{content:\"\\f561\"}/*!@.fa-code:before*/.fa-code.sc-mge-query:before{content:\"\\f121\"}/*!@.fa-code-branch:before*/.fa-code-branch.sc-mge-query:before{content:\"\\f126\"}/*!@.fa-codepen:before*/.fa-codepen.sc-mge-query:before{content:\"\\f1cb\"}/*!@.fa-codiepie:before*/.fa-codiepie.sc-mge-query:before{content:\"\\f284\"}/*!@.fa-coffee:before*/.fa-coffee.sc-mge-query:before{content:\"\\f0f4\"}/*!@.fa-cog:before*/.fa-cog.sc-mge-query:before{content:\"\\f013\"}/*!@.fa-cogs:before*/.fa-cogs.sc-mge-query:before{content:\"\\f085\"}/*!@.fa-coins:before*/.fa-coins.sc-mge-query:before{content:\"\\f51e\"}/*!@.fa-columns:before*/.fa-columns.sc-mge-query:before{content:\"\\f0db\"}/*!@.fa-comment:before*/.fa-comment.sc-mge-query:before{content:\"\\f075\"}/*!@.fa-comment-alt:before*/.fa-comment-alt.sc-mge-query:before{content:\"\\f27a\"}/*!@.fa-comment-dollar:before*/.fa-comment-dollar.sc-mge-query:before{content:\"\\f651\"}/*!@.fa-comment-dots:before*/.fa-comment-dots.sc-mge-query:before{content:\"\\f4ad\"}/*!@.fa-comment-medical:before*/.fa-comment-medical.sc-mge-query:before{content:\"\\f7f5\"}/*!@.fa-comment-slash:before*/.fa-comment-slash.sc-mge-query:before{content:\"\\f4b3\"}/*!@.fa-comments:before*/.fa-comments.sc-mge-query:before{content:\"\\f086\"}/*!@.fa-comments-dollar:before*/.fa-comments-dollar.sc-mge-query:before{content:\"\\f653\"}/*!@.fa-compact-disc:before*/.fa-compact-disc.sc-mge-query:before{content:\"\\f51f\"}/*!@.fa-compass:before*/.fa-compass.sc-mge-query:before{content:\"\\f14e\"}/*!@.fa-compress:before*/.fa-compress.sc-mge-query:before{content:\"\\f066\"}/*!@.fa-compress-alt:before*/.fa-compress-alt.sc-mge-query:before{content:\"\\f422\"}/*!@.fa-compress-arrows-alt:before*/.fa-compress-arrows-alt.sc-mge-query:before{content:\"\\f78c\"}/*!@.fa-concierge-bell:before*/.fa-concierge-bell.sc-mge-query:before{content:\"\\f562\"}/*!@.fa-confluence:before*/.fa-confluence.sc-mge-query:before{content:\"\\f78d\"}/*!@.fa-connectdevelop:before*/.fa-connectdevelop.sc-mge-query:before{content:\"\\f20e\"}/*!@.fa-contao:before*/.fa-contao.sc-mge-query:before{content:\"\\f26d\"}/*!@.fa-cookie:before*/.fa-cookie.sc-mge-query:before{content:\"\\f563\"}/*!@.fa-cookie-bite:before*/.fa-cookie-bite.sc-mge-query:before{content:\"\\f564\"}/*!@.fa-copy:before*/.fa-copy.sc-mge-query:before{content:\"\\f0c5\"}/*!@.fa-copyright:before*/.fa-copyright.sc-mge-query:before{content:\"\\f1f9\"}/*!@.fa-cotton-bureau:before*/.fa-cotton-bureau.sc-mge-query:before{content:\"\\f89e\"}/*!@.fa-couch:before*/.fa-couch.sc-mge-query:before{content:\"\\f4b8\"}/*!@.fa-cpanel:before*/.fa-cpanel.sc-mge-query:before{content:\"\\f388\"}/*!@.fa-creative-commons:before*/.fa-creative-commons.sc-mge-query:before{content:\"\\f25e\"}/*!@.fa-creative-commons-by:before*/.fa-creative-commons-by.sc-mge-query:before{content:\"\\f4e7\"}/*!@.fa-creative-commons-nc:before*/.fa-creative-commons-nc.sc-mge-query:before{content:\"\\f4e8\"}/*!@.fa-creative-commons-nc-eu:before*/.fa-creative-commons-nc-eu.sc-mge-query:before{content:\"\\f4e9\"}/*!@.fa-creative-commons-nc-jp:before*/.fa-creative-commons-nc-jp.sc-mge-query:before{content:\"\\f4ea\"}/*!@.fa-creative-commons-nd:before*/.fa-creative-commons-nd.sc-mge-query:before{content:\"\\f4eb\"}/*!@.fa-creative-commons-pd:before*/.fa-creative-commons-pd.sc-mge-query:before{content:\"\\f4ec\"}/*!@.fa-creative-commons-pd-alt:before*/.fa-creative-commons-pd-alt.sc-mge-query:before{content:\"\\f4ed\"}/*!@.fa-creative-commons-remix:before*/.fa-creative-commons-remix.sc-mge-query:before{content:\"\\f4ee\"}/*!@.fa-creative-commons-sa:before*/.fa-creative-commons-sa.sc-mge-query:before{content:\"\\f4ef\"}/*!@.fa-creative-commons-sampling:before*/.fa-creative-commons-sampling.sc-mge-query:before{content:\"\\f4f0\"}/*!@.fa-creative-commons-sampling-plus:before*/.fa-creative-commons-sampling-plus.sc-mge-query:before{content:\"\\f4f1\"}/*!@.fa-creative-commons-share:before*/.fa-creative-commons-share.sc-mge-query:before{content:\"\\f4f2\"}/*!@.fa-creative-commons-zero:before*/.fa-creative-commons-zero.sc-mge-query:before{content:\"\\f4f3\"}/*!@.fa-credit-card:before*/.fa-credit-card.sc-mge-query:before{content:\"\\f09d\"}/*!@.fa-critical-role:before*/.fa-critical-role.sc-mge-query:before{content:\"\\f6c9\"}/*!@.fa-crop:before*/.fa-crop.sc-mge-query:before{content:\"\\f125\"}/*!@.fa-crop-alt:before*/.fa-crop-alt.sc-mge-query:before{content:\"\\f565\"}/*!@.fa-cross:before*/.fa-cross.sc-mge-query:before{content:\"\\f654\"}/*!@.fa-crosshairs:before*/.fa-crosshairs.sc-mge-query:before{content:\"\\f05b\"}/*!@.fa-crow:before*/.fa-crow.sc-mge-query:before{content:\"\\f520\"}/*!@.fa-crown:before*/.fa-crown.sc-mge-query:before{content:\"\\f521\"}/*!@.fa-crutch:before*/.fa-crutch.sc-mge-query:before{content:\"\\f7f7\"}/*!@.fa-css3:before*/.fa-css3.sc-mge-query:before{content:\"\\f13c\"}/*!@.fa-css3-alt:before*/.fa-css3-alt.sc-mge-query:before{content:\"\\f38b\"}/*!@.fa-cube:before*/.fa-cube.sc-mge-query:before{content:\"\\f1b2\"}/*!@.fa-cubes:before*/.fa-cubes.sc-mge-query:before{content:\"\\f1b3\"}/*!@.fa-cut:before*/.fa-cut.sc-mge-query:before{content:\"\\f0c4\"}/*!@.fa-cuttlefish:before*/.fa-cuttlefish.sc-mge-query:before{content:\"\\f38c\"}/*!@.fa-d-and-d:before*/.fa-d-and-d.sc-mge-query:before{content:\"\\f38d\"}/*!@.fa-d-and-d-beyond:before*/.fa-d-and-d-beyond.sc-mge-query:before{content:\"\\f6ca\"}/*!@.fa-dailymotion:before*/.fa-dailymotion.sc-mge-query:before{content:\"\\e052\"}/*!@.fa-dashcube:before*/.fa-dashcube.sc-mge-query:before{content:\"\\f210\"}/*!@.fa-database:before*/.fa-database.sc-mge-query:before{content:\"\\f1c0\"}/*!@.fa-deaf:before*/.fa-deaf.sc-mge-query:before{content:\"\\f2a4\"}/*!@.fa-deezer:before*/.fa-deezer.sc-mge-query:before{content:\"\\e077\"}/*!@.fa-delicious:before*/.fa-delicious.sc-mge-query:before{content:\"\\f1a5\"}/*!@.fa-democrat:before*/.fa-democrat.sc-mge-query:before{content:\"\\f747\"}/*!@.fa-deploydog:before*/.fa-deploydog.sc-mge-query:before{content:\"\\f38e\"}/*!@.fa-deskpro:before*/.fa-deskpro.sc-mge-query:before{content:\"\\f38f\"}/*!@.fa-desktop:before*/.fa-desktop.sc-mge-query:before{content:\"\\f108\"}/*!@.fa-dev:before*/.fa-dev.sc-mge-query:before{content:\"\\f6cc\"}/*!@.fa-deviantart:before*/.fa-deviantart.sc-mge-query:before{content:\"\\f1bd\"}/*!@.fa-dharmachakra:before*/.fa-dharmachakra.sc-mge-query:before{content:\"\\f655\"}/*!@.fa-dhl:before*/.fa-dhl.sc-mge-query:before{content:\"\\f790\"}/*!@.fa-diagnoses:before*/.fa-diagnoses.sc-mge-query:before{content:\"\\f470\"}/*!@.fa-diaspora:before*/.fa-diaspora.sc-mge-query:before{content:\"\\f791\"}/*!@.fa-dice:before*/.fa-dice.sc-mge-query:before{content:\"\\f522\"}/*!@.fa-dice-d20:before*/.fa-dice-d20.sc-mge-query:before{content:\"\\f6cf\"}/*!@.fa-dice-d6:before*/.fa-dice-d6.sc-mge-query:before{content:\"\\f6d1\"}/*!@.fa-dice-five:before*/.fa-dice-five.sc-mge-query:before{content:\"\\f523\"}/*!@.fa-dice-four:before*/.fa-dice-four.sc-mge-query:before{content:\"\\f524\"}/*!@.fa-dice-one:before*/.fa-dice-one.sc-mge-query:before{content:\"\\f525\"}/*!@.fa-dice-six:before*/.fa-dice-six.sc-mge-query:before{content:\"\\f526\"}/*!@.fa-dice-three:before*/.fa-dice-three.sc-mge-query:before{content:\"\\f527\"}/*!@.fa-dice-two:before*/.fa-dice-two.sc-mge-query:before{content:\"\\f528\"}/*!@.fa-digg:before*/.fa-digg.sc-mge-query:before{content:\"\\f1a6\"}/*!@.fa-digital-ocean:before*/.fa-digital-ocean.sc-mge-query:before{content:\"\\f391\"}/*!@.fa-digital-tachograph:before*/.fa-digital-tachograph.sc-mge-query:before{content:\"\\f566\"}/*!@.fa-directions:before*/.fa-directions.sc-mge-query:before{content:\"\\f5eb\"}/*!@.fa-discord:before*/.fa-discord.sc-mge-query:before{content:\"\\f392\"}/*!@.fa-discourse:before*/.fa-discourse.sc-mge-query:before{content:\"\\f393\"}/*!@.fa-disease:before*/.fa-disease.sc-mge-query:before{content:\"\\f7fa\"}/*!@.fa-divide:before*/.fa-divide.sc-mge-query:before{content:\"\\f529\"}/*!@.fa-dizzy:before*/.fa-dizzy.sc-mge-query:before{content:\"\\f567\"}/*!@.fa-dna:before*/.fa-dna.sc-mge-query:before{content:\"\\f471\"}/*!@.fa-dochub:before*/.fa-dochub.sc-mge-query:before{content:\"\\f394\"}/*!@.fa-docker:before*/.fa-docker.sc-mge-query:before{content:\"\\f395\"}/*!@.fa-dog:before*/.fa-dog.sc-mge-query:before{content:\"\\f6d3\"}/*!@.fa-dollar-sign:before*/.fa-dollar-sign.sc-mge-query:before{content:\"\\f155\"}/*!@.fa-dolly:before*/.fa-dolly.sc-mge-query:before{content:\"\\f472\"}/*!@.fa-dolly-flatbed:before*/.fa-dolly-flatbed.sc-mge-query:before{content:\"\\f474\"}/*!@.fa-donate:before*/.fa-donate.sc-mge-query:before{content:\"\\f4b9\"}/*!@.fa-door-closed:before*/.fa-door-closed.sc-mge-query:before{content:\"\\f52a\"}/*!@.fa-door-open:before*/.fa-door-open.sc-mge-query:before{content:\"\\f52b\"}/*!@.fa-dot-circle:before*/.fa-dot-circle.sc-mge-query:before{content:\"\\f192\"}/*!@.fa-dove:before*/.fa-dove.sc-mge-query:before{content:\"\\f4ba\"}/*!@.fa-download:before*/.fa-download.sc-mge-query:before{content:\"\\f019\"}/*!@.fa-draft2digital:before*/.fa-draft2digital.sc-mge-query:before{content:\"\\f396\"}/*!@.fa-drafting-compass:before*/.fa-drafting-compass.sc-mge-query:before{content:\"\\f568\"}/*!@.fa-dragon:before*/.fa-dragon.sc-mge-query:before{content:\"\\f6d5\"}/*!@.fa-draw-polygon:before*/.fa-draw-polygon.sc-mge-query:before{content:\"\\f5ee\"}/*!@.fa-dribbble:before*/.fa-dribbble.sc-mge-query:before{content:\"\\f17d\"}/*!@.fa-dribbble-square:before*/.fa-dribbble-square.sc-mge-query:before{content:\"\\f397\"}/*!@.fa-dropbox:before*/.fa-dropbox.sc-mge-query:before{content:\"\\f16b\"}/*!@.fa-drum:before*/.fa-drum.sc-mge-query:before{content:\"\\f569\"}/*!@.fa-drum-steelpan:before*/.fa-drum-steelpan.sc-mge-query:before{content:\"\\f56a\"}/*!@.fa-drumstick-bite:before*/.fa-drumstick-bite.sc-mge-query:before{content:\"\\f6d7\"}/*!@.fa-drupal:before*/.fa-drupal.sc-mge-query:before{content:\"\\f1a9\"}/*!@.fa-dumbbell:before*/.fa-dumbbell.sc-mge-query:before{content:\"\\f44b\"}/*!@.fa-dumpster:before*/.fa-dumpster.sc-mge-query:before{content:\"\\f793\"}/*!@.fa-dumpster-fire:before*/.fa-dumpster-fire.sc-mge-query:before{content:\"\\f794\"}/*!@.fa-dungeon:before*/.fa-dungeon.sc-mge-query:before{content:\"\\f6d9\"}/*!@.fa-dyalog:before*/.fa-dyalog.sc-mge-query:before{content:\"\\f399\"}/*!@.fa-earlybirds:before*/.fa-earlybirds.sc-mge-query:before{content:\"\\f39a\"}/*!@.fa-ebay:before*/.fa-ebay.sc-mge-query:before{content:\"\\f4f4\"}/*!@.fa-edge:before*/.fa-edge.sc-mge-query:before{content:\"\\f282\"}/*!@.fa-edge-legacy:before*/.fa-edge-legacy.sc-mge-query:before{content:\"\\e078\"}/*!@.fa-edit:before*/.fa-edit.sc-mge-query:before{content:\"\\f044\"}/*!@.fa-egg:before*/.fa-egg.sc-mge-query:before{content:\"\\f7fb\"}/*!@.fa-eject:before*/.fa-eject.sc-mge-query:before{content:\"\\f052\"}/*!@.fa-elementor:before*/.fa-elementor.sc-mge-query:before{content:\"\\f430\"}/*!@.fa-ellipsis-h:before*/.fa-ellipsis-h.sc-mge-query:before{content:\"\\f141\"}/*!@.fa-ellipsis-v:before*/.fa-ellipsis-v.sc-mge-query:before{content:\"\\f142\"}/*!@.fa-ello:before*/.fa-ello.sc-mge-query:before{content:\"\\f5f1\"}/*!@.fa-ember:before*/.fa-ember.sc-mge-query:before{content:\"\\f423\"}/*!@.fa-empire:before*/.fa-empire.sc-mge-query:before{content:\"\\f1d1\"}/*!@.fa-envelope:before*/.fa-envelope.sc-mge-query:before{content:\"\\f0e0\"}/*!@.fa-envelope-open:before*/.fa-envelope-open.sc-mge-query:before{content:\"\\f2b6\"}/*!@.fa-envelope-open-text:before*/.fa-envelope-open-text.sc-mge-query:before{content:\"\\f658\"}/*!@.fa-envelope-square:before*/.fa-envelope-square.sc-mge-query:before{content:\"\\f199\"}/*!@.fa-envira:before*/.fa-envira.sc-mge-query:before{content:\"\\f299\"}/*!@.fa-equals:before*/.fa-equals.sc-mge-query:before{content:\"\\f52c\"}/*!@.fa-eraser:before*/.fa-eraser.sc-mge-query:before{content:\"\\f12d\"}/*!@.fa-erlang:before*/.fa-erlang.sc-mge-query:before{content:\"\\f39d\"}/*!@.fa-ethereum:before*/.fa-ethereum.sc-mge-query:before{content:\"\\f42e\"}/*!@.fa-ethernet:before*/.fa-ethernet.sc-mge-query:before{content:\"\\f796\"}/*!@.fa-etsy:before*/.fa-etsy.sc-mge-query:before{content:\"\\f2d7\"}/*!@.fa-euro-sign:before*/.fa-euro-sign.sc-mge-query:before{content:\"\\f153\"}/*!@.fa-evernote:before*/.fa-evernote.sc-mge-query:before{content:\"\\f839\"}/*!@.fa-exchange-alt:before*/.fa-exchange-alt.sc-mge-query:before{content:\"\\f362\"}/*!@.fa-exclamation:before*/.fa-exclamation.sc-mge-query:before{content:\"\\f12a\"}/*!@.fa-exclamation-circle:before*/.fa-exclamation-circle.sc-mge-query:before{content:\"\\f06a\"}/*!@.fa-exclamation-triangle:before*/.fa-exclamation-triangle.sc-mge-query:before{content:\"\\f071\"}/*!@.fa-expand:before*/.fa-expand.sc-mge-query:before{content:\"\\f065\"}/*!@.fa-expand-alt:before*/.fa-expand-alt.sc-mge-query:before{content:\"\\f424\"}/*!@.fa-expand-arrows-alt:before*/.fa-expand-arrows-alt.sc-mge-query:before{content:\"\\f31e\"}/*!@.fa-expeditedssl:before*/.fa-expeditedssl.sc-mge-query:before{content:\"\\f23e\"}/*!@.fa-external-link-alt:before*/.fa-external-link-alt.sc-mge-query:before{content:\"\\f35d\"}/*!@.fa-external-link-square-alt:before*/.fa-external-link-square-alt.sc-mge-query:before{content:\"\\f360\"}/*!@.fa-eye:before*/.fa-eye.sc-mge-query:before{content:\"\\f06e\"}/*!@.fa-eye-dropper:before*/.fa-eye-dropper.sc-mge-query:before{content:\"\\f1fb\"}/*!@.fa-eye-slash:before*/.fa-eye-slash.sc-mge-query:before{content:\"\\f070\"}/*!@.fa-facebook:before*/.fa-facebook.sc-mge-query:before{content:\"\\f09a\"}/*!@.fa-facebook-f:before*/.fa-facebook-f.sc-mge-query:before{content:\"\\f39e\"}/*!@.fa-facebook-messenger:before*/.fa-facebook-messenger.sc-mge-query:before{content:\"\\f39f\"}/*!@.fa-facebook-square:before*/.fa-facebook-square.sc-mge-query:before{content:\"\\f082\"}/*!@.fa-fan:before*/.fa-fan.sc-mge-query:before{content:\"\\f863\"}/*!@.fa-fantasy-flight-games:before*/.fa-fantasy-flight-games.sc-mge-query:before{content:\"\\f6dc\"}/*!@.fa-fast-backward:before*/.fa-fast-backward.sc-mge-query:before{content:\"\\f049\"}/*!@.fa-fast-forward:before*/.fa-fast-forward.sc-mge-query:before{content:\"\\f050\"}/*!@.fa-faucet:before*/.fa-faucet.sc-mge-query:before{content:\"\\e005\"}/*!@.fa-fax:before*/.fa-fax.sc-mge-query:before{content:\"\\f1ac\"}/*!@.fa-feather:before*/.fa-feather.sc-mge-query:before{content:\"\\f52d\"}/*!@.fa-feather-alt:before*/.fa-feather-alt.sc-mge-query:before{content:\"\\f56b\"}/*!@.fa-fedex:before*/.fa-fedex.sc-mge-query:before{content:\"\\f797\"}/*!@.fa-fedora:before*/.fa-fedora.sc-mge-query:before{content:\"\\f798\"}/*!@.fa-female:before*/.fa-female.sc-mge-query:before{content:\"\\f182\"}/*!@.fa-fighter-jet:before*/.fa-fighter-jet.sc-mge-query:before{content:\"\\f0fb\"}/*!@.fa-figma:before*/.fa-figma.sc-mge-query:before{content:\"\\f799\"}/*!@.fa-file:before*/.fa-file.sc-mge-query:before{content:\"\\f15b\"}/*!@.fa-file-alt:before*/.fa-file-alt.sc-mge-query:before{content:\"\\f15c\"}/*!@.fa-file-archive:before*/.fa-file-archive.sc-mge-query:before{content:\"\\f1c6\"}/*!@.fa-file-audio:before*/.fa-file-audio.sc-mge-query:before{content:\"\\f1c7\"}/*!@.fa-file-code:before*/.fa-file-code.sc-mge-query:before{content:\"\\f1c9\"}/*!@.fa-file-contract:before*/.fa-file-contract.sc-mge-query:before{content:\"\\f56c\"}/*!@.fa-file-csv:before*/.fa-file-csv.sc-mge-query:before{content:\"\\f6dd\"}/*!@.fa-file-download:before*/.fa-file-download.sc-mge-query:before{content:\"\\f56d\"}/*!@.fa-file-excel:before*/.fa-file-excel.sc-mge-query:before{content:\"\\f1c3\"}/*!@.fa-file-export:before*/.fa-file-export.sc-mge-query:before{content:\"\\f56e\"}/*!@.fa-file-image:before*/.fa-file-image.sc-mge-query:before{content:\"\\f1c5\"}/*!@.fa-file-import:before*/.fa-file-import.sc-mge-query:before{content:\"\\f56f\"}/*!@.fa-file-invoice:before*/.fa-file-invoice.sc-mge-query:before{content:\"\\f570\"}/*!@.fa-file-invoice-dollar:before*/.fa-file-invoice-dollar.sc-mge-query:before{content:\"\\f571\"}/*!@.fa-file-medical:before*/.fa-file-medical.sc-mge-query:before{content:\"\\f477\"}/*!@.fa-file-medical-alt:before*/.fa-file-medical-alt.sc-mge-query:before{content:\"\\f478\"}/*!@.fa-file-pdf:before*/.fa-file-pdf.sc-mge-query:before{content:\"\\f1c1\"}/*!@.fa-file-powerpoint:before*/.fa-file-powerpoint.sc-mge-query:before{content:\"\\f1c4\"}/*!@.fa-file-prescription:before*/.fa-file-prescription.sc-mge-query:before{content:\"\\f572\"}/*!@.fa-file-signature:before*/.fa-file-signature.sc-mge-query:before{content:\"\\f573\"}/*!@.fa-file-upload:before*/.fa-file-upload.sc-mge-query:before{content:\"\\f574\"}/*!@.fa-file-video:before*/.fa-file-video.sc-mge-query:before{content:\"\\f1c8\"}/*!@.fa-file-word:before*/.fa-file-word.sc-mge-query:before{content:\"\\f1c2\"}/*!@.fa-fill:before*/.fa-fill.sc-mge-query:before{content:\"\\f575\"}/*!@.fa-fill-drip:before*/.fa-fill-drip.sc-mge-query:before{content:\"\\f576\"}/*!@.fa-film:before*/.fa-film.sc-mge-query:before{content:\"\\f008\"}/*!@.fa-filter:before*/.fa-filter.sc-mge-query:before{content:\"\\f0b0\"}/*!@.fa-fingerprint:before*/.fa-fingerprint.sc-mge-query:before{content:\"\\f577\"}/*!@.fa-fire:before*/.fa-fire.sc-mge-query:before{content:\"\\f06d\"}/*!@.fa-fire-alt:before*/.fa-fire-alt.sc-mge-query:before{content:\"\\f7e4\"}/*!@.fa-fire-extinguisher:before*/.fa-fire-extinguisher.sc-mge-query:before{content:\"\\f134\"}/*!@.fa-firefox:before*/.fa-firefox.sc-mge-query:before{content:\"\\f269\"}/*!@.fa-firefox-browser:before*/.fa-firefox-browser.sc-mge-query:before{content:\"\\e007\"}/*!@.fa-first-aid:before*/.fa-first-aid.sc-mge-query:before{content:\"\\f479\"}/*!@.fa-first-order:before*/.fa-first-order.sc-mge-query:before{content:\"\\f2b0\"}/*!@.fa-first-order-alt:before*/.fa-first-order-alt.sc-mge-query:before{content:\"\\f50a\"}/*!@.fa-firstdraft:before*/.fa-firstdraft.sc-mge-query:before{content:\"\\f3a1\"}/*!@.fa-fish:before*/.fa-fish.sc-mge-query:before{content:\"\\f578\"}/*!@.fa-fist-raised:before*/.fa-fist-raised.sc-mge-query:before{content:\"\\f6de\"}/*!@.fa-flag:before*/.fa-flag.sc-mge-query:before{content:\"\\f024\"}/*!@.fa-flag-checkered:before*/.fa-flag-checkered.sc-mge-query:before{content:\"\\f11e\"}/*!@.fa-flag-usa:before*/.fa-flag-usa.sc-mge-query:before{content:\"\\f74d\"}/*!@.fa-flask:before*/.fa-flask.sc-mge-query:before{content:\"\\f0c3\"}/*!@.fa-flickr:before*/.fa-flickr.sc-mge-query:before{content:\"\\f16e\"}/*!@.fa-flipboard:before*/.fa-flipboard.sc-mge-query:before{content:\"\\f44d\"}/*!@.fa-flushed:before*/.fa-flushed.sc-mge-query:before{content:\"\\f579\"}/*!@.fa-fly:before*/.fa-fly.sc-mge-query:before{content:\"\\f417\"}/*!@.fa-folder:before*/.fa-folder.sc-mge-query:before{content:\"\\f07b\"}/*!@.fa-folder-minus:before*/.fa-folder-minus.sc-mge-query:before{content:\"\\f65d\"}/*!@.fa-folder-open:before*/.fa-folder-open.sc-mge-query:before{content:\"\\f07c\"}/*!@.fa-folder-plus:before*/.fa-folder-plus.sc-mge-query:before{content:\"\\f65e\"}/*!@.fa-font:before*/.fa-font.sc-mge-query:before{content:\"\\f031\"}/*!@.fa-font-awesome:before*/.fa-font-awesome.sc-mge-query:before{content:\"\\f2b4\"}/*!@.fa-font-awesome-alt:before*/.fa-font-awesome-alt.sc-mge-query:before{content:\"\\f35c\"}/*!@.fa-font-awesome-flag:before*/.fa-font-awesome-flag.sc-mge-query:before{content:\"\\f425\"}/*!@.fa-font-awesome-logo-full:before*/.fa-font-awesome-logo-full.sc-mge-query:before{content:\"\\f4e6\"}/*!@.fa-fonticons:before*/.fa-fonticons.sc-mge-query:before{content:\"\\f280\"}/*!@.fa-fonticons-fi:before*/.fa-fonticons-fi.sc-mge-query:before{content:\"\\f3a2\"}/*!@.fa-football-ball:before*/.fa-football-ball.sc-mge-query:before{content:\"\\f44e\"}/*!@.fa-fort-awesome:before*/.fa-fort-awesome.sc-mge-query:before{content:\"\\f286\"}/*!@.fa-fort-awesome-alt:before*/.fa-fort-awesome-alt.sc-mge-query:before{content:\"\\f3a3\"}/*!@.fa-forumbee:before*/.fa-forumbee.sc-mge-query:before{content:\"\\f211\"}/*!@.fa-forward:before*/.fa-forward.sc-mge-query:before{content:\"\\f04e\"}/*!@.fa-foursquare:before*/.fa-foursquare.sc-mge-query:before{content:\"\\f180\"}/*!@.fa-free-code-camp:before*/.fa-free-code-camp.sc-mge-query:before{content:\"\\f2c5\"}/*!@.fa-freebsd:before*/.fa-freebsd.sc-mge-query:before{content:\"\\f3a4\"}/*!@.fa-frog:before*/.fa-frog.sc-mge-query:before{content:\"\\f52e\"}/*!@.fa-frown:before*/.fa-frown.sc-mge-query:before{content:\"\\f119\"}/*!@.fa-frown-open:before*/.fa-frown-open.sc-mge-query:before{content:\"\\f57a\"}/*!@.fa-fulcrum:before*/.fa-fulcrum.sc-mge-query:before{content:\"\\f50b\"}/*!@.fa-funnel-dollar:before*/.fa-funnel-dollar.sc-mge-query:before{content:\"\\f662\"}/*!@.fa-futbol:before*/.fa-futbol.sc-mge-query:before{content:\"\\f1e3\"}/*!@.fa-galactic-republic:before*/.fa-galactic-republic.sc-mge-query:before{content:\"\\f50c\"}/*!@.fa-galactic-senate:before*/.fa-galactic-senate.sc-mge-query:before{content:\"\\f50d\"}/*!@.fa-gamepad:before*/.fa-gamepad.sc-mge-query:before{content:\"\\f11b\"}/*!@.fa-gas-pump:before*/.fa-gas-pump.sc-mge-query:before{content:\"\\f52f\"}/*!@.fa-gavel:before*/.fa-gavel.sc-mge-query:before{content:\"\\f0e3\"}/*!@.fa-gem:before*/.fa-gem.sc-mge-query:before{content:\"\\f3a5\"}/*!@.fa-genderless:before*/.fa-genderless.sc-mge-query:before{content:\"\\f22d\"}/*!@.fa-get-pocket:before*/.fa-get-pocket.sc-mge-query:before{content:\"\\f265\"}/*!@.fa-gg:before*/.fa-gg.sc-mge-query:before{content:\"\\f260\"}/*!@.fa-gg-circle:before*/.fa-gg-circle.sc-mge-query:before{content:\"\\f261\"}/*!@.fa-ghost:before*/.fa-ghost.sc-mge-query:before{content:\"\\f6e2\"}/*!@.fa-gift:before*/.fa-gift.sc-mge-query:before{content:\"\\f06b\"}/*!@.fa-gifts:before*/.fa-gifts.sc-mge-query:before{content:\"\\f79c\"}/*!@.fa-git:before*/.fa-git.sc-mge-query:before{content:\"\\f1d3\"}/*!@.fa-git-alt:before*/.fa-git-alt.sc-mge-query:before{content:\"\\f841\"}/*!@.fa-git-square:before*/.fa-git-square.sc-mge-query:before{content:\"\\f1d2\"}/*!@.fa-github:before*/.fa-github.sc-mge-query:before{content:\"\\f09b\"}/*!@.fa-github-alt:before*/.fa-github-alt.sc-mge-query:before{content:\"\\f113\"}/*!@.fa-github-square:before*/.fa-github-square.sc-mge-query:before{content:\"\\f092\"}/*!@.fa-gitkraken:before*/.fa-gitkraken.sc-mge-query:before{content:\"\\f3a6\"}/*!@.fa-gitlab:before*/.fa-gitlab.sc-mge-query:before{content:\"\\f296\"}/*!@.fa-gitter:before*/.fa-gitter.sc-mge-query:before{content:\"\\f426\"}/*!@.fa-glass-cheers:before*/.fa-glass-cheers.sc-mge-query:before{content:\"\\f79f\"}/*!@.fa-glass-martini:before*/.fa-glass-martini.sc-mge-query:before{content:\"\\f000\"}/*!@.fa-glass-martini-alt:before*/.fa-glass-martini-alt.sc-mge-query:before{content:\"\\f57b\"}/*!@.fa-glass-whiskey:before*/.fa-glass-whiskey.sc-mge-query:before{content:\"\\f7a0\"}/*!@.fa-glasses:before*/.fa-glasses.sc-mge-query:before{content:\"\\f530\"}/*!@.fa-glide:before*/.fa-glide.sc-mge-query:before{content:\"\\f2a5\"}/*!@.fa-glide-g:before*/.fa-glide-g.sc-mge-query:before{content:\"\\f2a6\"}/*!@.fa-globe:before*/.fa-globe.sc-mge-query:before{content:\"\\f0ac\"}/*!@.fa-globe-africa:before*/.fa-globe-africa.sc-mge-query:before{content:\"\\f57c\"}/*!@.fa-globe-americas:before*/.fa-globe-americas.sc-mge-query:before{content:\"\\f57d\"}/*!@.fa-globe-asia:before*/.fa-globe-asia.sc-mge-query:before{content:\"\\f57e\"}/*!@.fa-globe-europe:before*/.fa-globe-europe.sc-mge-query:before{content:\"\\f7a2\"}/*!@.fa-gofore:before*/.fa-gofore.sc-mge-query:before{content:\"\\f3a7\"}/*!@.fa-golf-ball:before*/.fa-golf-ball.sc-mge-query:before{content:\"\\f450\"}/*!@.fa-goodreads:before*/.fa-goodreads.sc-mge-query:before{content:\"\\f3a8\"}/*!@.fa-goodreads-g:before*/.fa-goodreads-g.sc-mge-query:before{content:\"\\f3a9\"}/*!@.fa-google:before*/.fa-google.sc-mge-query:before{content:\"\\f1a0\"}/*!@.fa-google-drive:before*/.fa-google-drive.sc-mge-query:before{content:\"\\f3aa\"}/*!@.fa-google-pay:before*/.fa-google-pay.sc-mge-query:before{content:\"\\e079\"}/*!@.fa-google-play:before*/.fa-google-play.sc-mge-query:before{content:\"\\f3ab\"}/*!@.fa-google-plus:before*/.fa-google-plus.sc-mge-query:before{content:\"\\f2b3\"}/*!@.fa-google-plus-g:before*/.fa-google-plus-g.sc-mge-query:before{content:\"\\f0d5\"}/*!@.fa-google-plus-square:before*/.fa-google-plus-square.sc-mge-query:before{content:\"\\f0d4\"}/*!@.fa-google-wallet:before*/.fa-google-wallet.sc-mge-query:before{content:\"\\f1ee\"}/*!@.fa-gopuram:before*/.fa-gopuram.sc-mge-query:before{content:\"\\f664\"}/*!@.fa-graduation-cap:before*/.fa-graduation-cap.sc-mge-query:before{content:\"\\f19d\"}/*!@.fa-gratipay:before*/.fa-gratipay.sc-mge-query:before{content:\"\\f184\"}/*!@.fa-grav:before*/.fa-grav.sc-mge-query:before{content:\"\\f2d6\"}/*!@.fa-greater-than:before*/.fa-greater-than.sc-mge-query:before{content:\"\\f531\"}/*!@.fa-greater-than-equal:before*/.fa-greater-than-equal.sc-mge-query:before{content:\"\\f532\"}/*!@.fa-grimace:before*/.fa-grimace.sc-mge-query:before{content:\"\\f57f\"}/*!@.fa-grin:before*/.fa-grin.sc-mge-query:before{content:\"\\f580\"}/*!@.fa-grin-alt:before*/.fa-grin-alt.sc-mge-query:before{content:\"\\f581\"}/*!@.fa-grin-beam:before*/.fa-grin-beam.sc-mge-query:before{content:\"\\f582\"}/*!@.fa-grin-beam-sweat:before*/.fa-grin-beam-sweat.sc-mge-query:before{content:\"\\f583\"}/*!@.fa-grin-hearts:before*/.fa-grin-hearts.sc-mge-query:before{content:\"\\f584\"}/*!@.fa-grin-squint:before*/.fa-grin-squint.sc-mge-query:before{content:\"\\f585\"}/*!@.fa-grin-squint-tears:before*/.fa-grin-squint-tears.sc-mge-query:before{content:\"\\f586\"}/*!@.fa-grin-stars:before*/.fa-grin-stars.sc-mge-query:before{content:\"\\f587\"}/*!@.fa-grin-tears:before*/.fa-grin-tears.sc-mge-query:before{content:\"\\f588\"}/*!@.fa-grin-tongue:before*/.fa-grin-tongue.sc-mge-query:before{content:\"\\f589\"}/*!@.fa-grin-tongue-squint:before*/.fa-grin-tongue-squint.sc-mge-query:before{content:\"\\f58a\"}/*!@.fa-grin-tongue-wink:before*/.fa-grin-tongue-wink.sc-mge-query:before{content:\"\\f58b\"}/*!@.fa-grin-wink:before*/.fa-grin-wink.sc-mge-query:before{content:\"\\f58c\"}/*!@.fa-grip-horizontal:before*/.fa-grip-horizontal.sc-mge-query:before{content:\"\\f58d\"}/*!@.fa-grip-lines:before*/.fa-grip-lines.sc-mge-query:before{content:\"\\f7a4\"}/*!@.fa-grip-lines-vertical:before*/.fa-grip-lines-vertical.sc-mge-query:before{content:\"\\f7a5\"}/*!@.fa-grip-vertical:before*/.fa-grip-vertical.sc-mge-query:before{content:\"\\f58e\"}/*!@.fa-gripfire:before*/.fa-gripfire.sc-mge-query:before{content:\"\\f3ac\"}/*!@.fa-grunt:before*/.fa-grunt.sc-mge-query:before{content:\"\\f3ad\"}/*!@.fa-guilded:before*/.fa-guilded.sc-mge-query:before{content:\"\\e07e\"}/*!@.fa-guitar:before*/.fa-guitar.sc-mge-query:before{content:\"\\f7a6\"}/*!@.fa-gulp:before*/.fa-gulp.sc-mge-query:before{content:\"\\f3ae\"}/*!@.fa-h-square:before*/.fa-h-square.sc-mge-query:before{content:\"\\f0fd\"}/*!@.fa-hacker-news:before*/.fa-hacker-news.sc-mge-query:before{content:\"\\f1d4\"}/*!@.fa-hacker-news-square:before*/.fa-hacker-news-square.sc-mge-query:before{content:\"\\f3af\"}/*!@.fa-hackerrank:before*/.fa-hackerrank.sc-mge-query:before{content:\"\\f5f7\"}/*!@.fa-hamburger:before*/.fa-hamburger.sc-mge-query:before{content:\"\\f805\"}/*!@.fa-hammer:before*/.fa-hammer.sc-mge-query:before{content:\"\\f6e3\"}/*!@.fa-hamsa:before*/.fa-hamsa.sc-mge-query:before{content:\"\\f665\"}/*!@.fa-hand-holding:before*/.fa-hand-holding.sc-mge-query:before{content:\"\\f4bd\"}/*!@.fa-hand-holding-heart:before*/.fa-hand-holding-heart.sc-mge-query:before{content:\"\\f4be\"}/*!@.fa-hand-holding-medical:before*/.fa-hand-holding-medical.sc-mge-query:before{content:\"\\e05c\"}/*!@.fa-hand-holding-usd:before*/.fa-hand-holding-usd.sc-mge-query:before{content:\"\\f4c0\"}/*!@.fa-hand-holding-water:before*/.fa-hand-holding-water.sc-mge-query:before{content:\"\\f4c1\"}/*!@.fa-hand-lizard:before*/.fa-hand-lizard.sc-mge-query:before{content:\"\\f258\"}/*!@.fa-hand-middle-finger:before*/.fa-hand-middle-finger.sc-mge-query:before{content:\"\\f806\"}/*!@.fa-hand-paper:before*/.fa-hand-paper.sc-mge-query:before{content:\"\\f256\"}/*!@.fa-hand-peace:before*/.fa-hand-peace.sc-mge-query:before{content:\"\\f25b\"}/*!@.fa-hand-point-down:before*/.fa-hand-point-down.sc-mge-query:before{content:\"\\f0a7\"}/*!@.fa-hand-point-left:before*/.fa-hand-point-left.sc-mge-query:before{content:\"\\f0a5\"}/*!@.fa-hand-point-right:before*/.fa-hand-point-right.sc-mge-query:before{content:\"\\f0a4\"}/*!@.fa-hand-point-up:before*/.fa-hand-point-up.sc-mge-query:before{content:\"\\f0a6\"}/*!@.fa-hand-pointer:before*/.fa-hand-pointer.sc-mge-query:before{content:\"\\f25a\"}/*!@.fa-hand-rock:before*/.fa-hand-rock.sc-mge-query:before{content:\"\\f255\"}/*!@.fa-hand-scissors:before*/.fa-hand-scissors.sc-mge-query:before{content:\"\\f257\"}/*!@.fa-hand-sparkles:before*/.fa-hand-sparkles.sc-mge-query:before{content:\"\\e05d\"}/*!@.fa-hand-spock:before*/.fa-hand-spock.sc-mge-query:before{content:\"\\f259\"}/*!@.fa-hands:before*/.fa-hands.sc-mge-query:before{content:\"\\f4c2\"}/*!@.fa-hands-helping:before*/.fa-hands-helping.sc-mge-query:before{content:\"\\f4c4\"}/*!@.fa-hands-wash:before*/.fa-hands-wash.sc-mge-query:before{content:\"\\e05e\"}/*!@.fa-handshake:before*/.fa-handshake.sc-mge-query:before{content:\"\\f2b5\"}/*!@.fa-handshake-alt-slash:before*/.fa-handshake-alt-slash.sc-mge-query:before{content:\"\\e05f\"}/*!@.fa-handshake-slash:before*/.fa-handshake-slash.sc-mge-query:before{content:\"\\e060\"}/*!@.fa-hanukiah:before*/.fa-hanukiah.sc-mge-query:before{content:\"\\f6e6\"}/*!@.fa-hard-hat:before*/.fa-hard-hat.sc-mge-query:before{content:\"\\f807\"}/*!@.fa-hashtag:before*/.fa-hashtag.sc-mge-query:before{content:\"\\f292\"}/*!@.fa-hat-cowboy:before*/.fa-hat-cowboy.sc-mge-query:before{content:\"\\f8c0\"}/*!@.fa-hat-cowboy-side:before*/.fa-hat-cowboy-side.sc-mge-query:before{content:\"\\f8c1\"}/*!@.fa-hat-wizard:before*/.fa-hat-wizard.sc-mge-query:before{content:\"\\f6e8\"}/*!@.fa-hdd:before*/.fa-hdd.sc-mge-query:before{content:\"\\f0a0\"}/*!@.fa-head-side-cough:before*/.fa-head-side-cough.sc-mge-query:before{content:\"\\e061\"}/*!@.fa-head-side-cough-slash:before*/.fa-head-side-cough-slash.sc-mge-query:before{content:\"\\e062\"}/*!@.fa-head-side-mask:before*/.fa-head-side-mask.sc-mge-query:before{content:\"\\e063\"}/*!@.fa-head-side-virus:before*/.fa-head-side-virus.sc-mge-query:before{content:\"\\e064\"}/*!@.fa-heading:before*/.fa-heading.sc-mge-query:before{content:\"\\f1dc\"}/*!@.fa-headphones:before*/.fa-headphones.sc-mge-query:before{content:\"\\f025\"}/*!@.fa-headphones-alt:before*/.fa-headphones-alt.sc-mge-query:before{content:\"\\f58f\"}/*!@.fa-headset:before*/.fa-headset.sc-mge-query:before{content:\"\\f590\"}/*!@.fa-heart:before*/.fa-heart.sc-mge-query:before{content:\"\\f004\"}/*!@.fa-heart-broken:before*/.fa-heart-broken.sc-mge-query:before{content:\"\\f7a9\"}/*!@.fa-heartbeat:before*/.fa-heartbeat.sc-mge-query:before{content:\"\\f21e\"}/*!@.fa-helicopter:before*/.fa-helicopter.sc-mge-query:before{content:\"\\f533\"}/*!@.fa-highlighter:before*/.fa-highlighter.sc-mge-query:before{content:\"\\f591\"}/*!@.fa-hiking:before*/.fa-hiking.sc-mge-query:before{content:\"\\f6ec\"}/*!@.fa-hippo:before*/.fa-hippo.sc-mge-query:before{content:\"\\f6ed\"}/*!@.fa-hips:before*/.fa-hips.sc-mge-query:before{content:\"\\f452\"}/*!@.fa-hire-a-helper:before*/.fa-hire-a-helper.sc-mge-query:before{content:\"\\f3b0\"}/*!@.fa-history:before*/.fa-history.sc-mge-query:before{content:\"\\f1da\"}/*!@.fa-hive:before*/.fa-hive.sc-mge-query:before{content:\"\\e07f\"}/*!@.fa-hockey-puck:before*/.fa-hockey-puck.sc-mge-query:before{content:\"\\f453\"}/*!@.fa-holly-berry:before*/.fa-holly-berry.sc-mge-query:before{content:\"\\f7aa\"}/*!@.fa-home:before*/.fa-home.sc-mge-query:before{content:\"\\f015\"}/*!@.fa-hooli:before*/.fa-hooli.sc-mge-query:before{content:\"\\f427\"}/*!@.fa-hornbill:before*/.fa-hornbill.sc-mge-query:before{content:\"\\f592\"}/*!@.fa-horse:before*/.fa-horse.sc-mge-query:before{content:\"\\f6f0\"}/*!@.fa-horse-head:before*/.fa-horse-head.sc-mge-query:before{content:\"\\f7ab\"}/*!@.fa-hospital:before*/.fa-hospital.sc-mge-query:before{content:\"\\f0f8\"}/*!@.fa-hospital-alt:before*/.fa-hospital-alt.sc-mge-query:before{content:\"\\f47d\"}/*!@.fa-hospital-symbol:before*/.fa-hospital-symbol.sc-mge-query:before{content:\"\\f47e\"}/*!@.fa-hospital-user:before*/.fa-hospital-user.sc-mge-query:before{content:\"\\f80d\"}/*!@.fa-hot-tub:before*/.fa-hot-tub.sc-mge-query:before{content:\"\\f593\"}/*!@.fa-hotdog:before*/.fa-hotdog.sc-mge-query:before{content:\"\\f80f\"}/*!@.fa-hotel:before*/.fa-hotel.sc-mge-query:before{content:\"\\f594\"}/*!@.fa-hotjar:before*/.fa-hotjar.sc-mge-query:before{content:\"\\f3b1\"}/*!@.fa-hourglass:before*/.fa-hourglass.sc-mge-query:before{content:\"\\f254\"}/*!@.fa-hourglass-end:before*/.fa-hourglass-end.sc-mge-query:before{content:\"\\f253\"}/*!@.fa-hourglass-half:before*/.fa-hourglass-half.sc-mge-query:before{content:\"\\f252\"}/*!@.fa-hourglass-start:before*/.fa-hourglass-start.sc-mge-query:before{content:\"\\f251\"}/*!@.fa-house-damage:before*/.fa-house-damage.sc-mge-query:before{content:\"\\f6f1\"}/*!@.fa-house-user:before*/.fa-house-user.sc-mge-query:before{content:\"\\e065\"}/*!@.fa-houzz:before*/.fa-houzz.sc-mge-query:before{content:\"\\f27c\"}/*!@.fa-hryvnia:before*/.fa-hryvnia.sc-mge-query:before{content:\"\\f6f2\"}/*!@.fa-html5:before*/.fa-html5.sc-mge-query:before{content:\"\\f13b\"}/*!@.fa-hubspot:before*/.fa-hubspot.sc-mge-query:before{content:\"\\f3b2\"}/*!@.fa-i-cursor:before*/.fa-i-cursor.sc-mge-query:before{content:\"\\f246\"}/*!@.fa-ice-cream:before*/.fa-ice-cream.sc-mge-query:before{content:\"\\f810\"}/*!@.fa-icicles:before*/.fa-icicles.sc-mge-query:before{content:\"\\f7ad\"}/*!@.fa-icons:before*/.fa-icons.sc-mge-query:before{content:\"\\f86d\"}/*!@.fa-id-badge:before*/.fa-id-badge.sc-mge-query:before{content:\"\\f2c1\"}/*!@.fa-id-card:before*/.fa-id-card.sc-mge-query:before{content:\"\\f2c2\"}/*!@.fa-id-card-alt:before*/.fa-id-card-alt.sc-mge-query:before{content:\"\\f47f\"}/*!@.fa-ideal:before*/.fa-ideal.sc-mge-query:before{content:\"\\e013\"}/*!@.fa-igloo:before*/.fa-igloo.sc-mge-query:before{content:\"\\f7ae\"}/*!@.fa-image:before*/.fa-image.sc-mge-query:before{content:\"\\f03e\"}/*!@.fa-images:before*/.fa-images.sc-mge-query:before{content:\"\\f302\"}/*!@.fa-imdb:before*/.fa-imdb.sc-mge-query:before{content:\"\\f2d8\"}/*!@.fa-inbox:before*/.fa-inbox.sc-mge-query:before{content:\"\\f01c\"}/*!@.fa-indent:before*/.fa-indent.sc-mge-query:before{content:\"\\f03c\"}/*!@.fa-industry:before*/.fa-industry.sc-mge-query:before{content:\"\\f275\"}/*!@.fa-infinity:before*/.fa-infinity.sc-mge-query:before{content:\"\\f534\"}/*!@.fa-info:before*/.fa-info.sc-mge-query:before{content:\"\\f129\"}/*!@.fa-info-circle:before*/.fa-info-circle.sc-mge-query:before{content:\"\\f05a\"}/*!@.fa-innosoft:before*/.fa-innosoft.sc-mge-query:before{content:\"\\e080\"}/*!@.fa-instagram:before*/.fa-instagram.sc-mge-query:before{content:\"\\f16d\"}/*!@.fa-instagram-square:before*/.fa-instagram-square.sc-mge-query:before{content:\"\\e055\"}/*!@.fa-instalod:before*/.fa-instalod.sc-mge-query:before{content:\"\\e081\"}/*!@.fa-intercom:before*/.fa-intercom.sc-mge-query:before{content:\"\\f7af\"}/*!@.fa-internet-explorer:before*/.fa-internet-explorer.sc-mge-query:before{content:\"\\f26b\"}/*!@.fa-invision:before*/.fa-invision.sc-mge-query:before{content:\"\\f7b0\"}/*!@.fa-ioxhost:before*/.fa-ioxhost.sc-mge-query:before{content:\"\\f208\"}/*!@.fa-italic:before*/.fa-italic.sc-mge-query:before{content:\"\\f033\"}/*!@.fa-itch-io:before*/.fa-itch-io.sc-mge-query:before{content:\"\\f83a\"}/*!@.fa-itunes:before*/.fa-itunes.sc-mge-query:before{content:\"\\f3b4\"}/*!@.fa-itunes-note:before*/.fa-itunes-note.sc-mge-query:before{content:\"\\f3b5\"}/*!@.fa-java:before*/.fa-java.sc-mge-query:before{content:\"\\f4e4\"}/*!@.fa-jedi:before*/.fa-jedi.sc-mge-query:before{content:\"\\f669\"}/*!@.fa-jedi-order:before*/.fa-jedi-order.sc-mge-query:before{content:\"\\f50e\"}/*!@.fa-jenkins:before*/.fa-jenkins.sc-mge-query:before{content:\"\\f3b6\"}/*!@.fa-jira:before*/.fa-jira.sc-mge-query:before{content:\"\\f7b1\"}/*!@.fa-joget:before*/.fa-joget.sc-mge-query:before{content:\"\\f3b7\"}/*!@.fa-joint:before*/.fa-joint.sc-mge-query:before{content:\"\\f595\"}/*!@.fa-joomla:before*/.fa-joomla.sc-mge-query:before{content:\"\\f1aa\"}/*!@.fa-journal-whills:before*/.fa-journal-whills.sc-mge-query:before{content:\"\\f66a\"}/*!@.fa-js:before*/.fa-js.sc-mge-query:before{content:\"\\f3b8\"}/*!@.fa-js-square:before*/.fa-js-square.sc-mge-query:before{content:\"\\f3b9\"}/*!@.fa-jsfiddle:before*/.fa-jsfiddle.sc-mge-query:before{content:\"\\f1cc\"}/*!@.fa-kaaba:before*/.fa-kaaba.sc-mge-query:before{content:\"\\f66b\"}/*!@.fa-kaggle:before*/.fa-kaggle.sc-mge-query:before{content:\"\\f5fa\"}/*!@.fa-key:before*/.fa-key.sc-mge-query:before{content:\"\\f084\"}/*!@.fa-keybase:before*/.fa-keybase.sc-mge-query:before{content:\"\\f4f5\"}/*!@.fa-keyboard:before*/.fa-keyboard.sc-mge-query:before{content:\"\\f11c\"}/*!@.fa-keycdn:before*/.fa-keycdn.sc-mge-query:before{content:\"\\f3ba\"}/*!@.fa-khanda:before*/.fa-khanda.sc-mge-query:before{content:\"\\f66d\"}/*!@.fa-kickstarter:before*/.fa-kickstarter.sc-mge-query:before{content:\"\\f3bb\"}/*!@.fa-kickstarter-k:before*/.fa-kickstarter-k.sc-mge-query:before{content:\"\\f3bc\"}/*!@.fa-kiss:before*/.fa-kiss.sc-mge-query:before{content:\"\\f596\"}/*!@.fa-kiss-beam:before*/.fa-kiss-beam.sc-mge-query:before{content:\"\\f597\"}/*!@.fa-kiss-wink-heart:before*/.fa-kiss-wink-heart.sc-mge-query:before{content:\"\\f598\"}/*!@.fa-kiwi-bird:before*/.fa-kiwi-bird.sc-mge-query:before{content:\"\\f535\"}/*!@.fa-korvue:before*/.fa-korvue.sc-mge-query:before{content:\"\\f42f\"}/*!@.fa-landmark:before*/.fa-landmark.sc-mge-query:before{content:\"\\f66f\"}/*!@.fa-language:before*/.fa-language.sc-mge-query:before{content:\"\\f1ab\"}/*!@.fa-laptop:before*/.fa-laptop.sc-mge-query:before{content:\"\\f109\"}/*!@.fa-laptop-code:before*/.fa-laptop-code.sc-mge-query:before{content:\"\\f5fc\"}/*!@.fa-laptop-house:before*/.fa-laptop-house.sc-mge-query:before{content:\"\\e066\"}/*!@.fa-laptop-medical:before*/.fa-laptop-medical.sc-mge-query:before{content:\"\\f812\"}/*!@.fa-laravel:before*/.fa-laravel.sc-mge-query:before{content:\"\\f3bd\"}/*!@.fa-lastfm:before*/.fa-lastfm.sc-mge-query:before{content:\"\\f202\"}/*!@.fa-lastfm-square:before*/.fa-lastfm-square.sc-mge-query:before{content:\"\\f203\"}/*!@.fa-laugh:before*/.fa-laugh.sc-mge-query:before{content:\"\\f599\"}/*!@.fa-laugh-beam:before*/.fa-laugh-beam.sc-mge-query:before{content:\"\\f59a\"}/*!@.fa-laugh-squint:before*/.fa-laugh-squint.sc-mge-query:before{content:\"\\f59b\"}/*!@.fa-laugh-wink:before*/.fa-laugh-wink.sc-mge-query:before{content:\"\\f59c\"}/*!@.fa-layer-group:before*/.fa-layer-group.sc-mge-query:before{content:\"\\f5fd\"}/*!@.fa-leaf:before*/.fa-leaf.sc-mge-query:before{content:\"\\f06c\"}/*!@.fa-leanpub:before*/.fa-leanpub.sc-mge-query:before{content:\"\\f212\"}/*!@.fa-lemon:before*/.fa-lemon.sc-mge-query:before{content:\"\\f094\"}/*!@.fa-less:before*/.fa-less.sc-mge-query:before{content:\"\\f41d\"}/*!@.fa-less-than:before*/.fa-less-than.sc-mge-query:before{content:\"\\f536\"}/*!@.fa-less-than-equal:before*/.fa-less-than-equal.sc-mge-query:before{content:\"\\f537\"}/*!@.fa-level-down-alt:before*/.fa-level-down-alt.sc-mge-query:before{content:\"\\f3be\"}/*!@.fa-level-up-alt:before*/.fa-level-up-alt.sc-mge-query:before{content:\"\\f3bf\"}/*!@.fa-life-ring:before*/.fa-life-ring.sc-mge-query:before{content:\"\\f1cd\"}/*!@.fa-lightbulb:before*/.fa-lightbulb.sc-mge-query:before{content:\"\\f0eb\"}/*!@.fa-line:before*/.fa-line.sc-mge-query:before{content:\"\\f3c0\"}/*!@.fa-link:before*/.fa-link.sc-mge-query:before{content:\"\\f0c1\"}/*!@.fa-linkedin:before*/.fa-linkedin.sc-mge-query:before{content:\"\\f08c\"}/*!@.fa-linkedin-in:before*/.fa-linkedin-in.sc-mge-query:before{content:\"\\f0e1\"}/*!@.fa-linode:before*/.fa-linode.sc-mge-query:before{content:\"\\f2b8\"}/*!@.fa-linux:before*/.fa-linux.sc-mge-query:before{content:\"\\f17c\"}/*!@.fa-lira-sign:before*/.fa-lira-sign.sc-mge-query:before{content:\"\\f195\"}/*!@.fa-list:before*/.fa-list.sc-mge-query:before{content:\"\\f03a\"}/*!@.fa-list-alt:before*/.fa-list-alt.sc-mge-query:before{content:\"\\f022\"}/*!@.fa-list-ol:before*/.fa-list-ol.sc-mge-query:before{content:\"\\f0cb\"}/*!@.fa-list-ul:before*/.fa-list-ul.sc-mge-query:before{content:\"\\f0ca\"}/*!@.fa-location-arrow:before*/.fa-location-arrow.sc-mge-query:before{content:\"\\f124\"}/*!@.fa-lock:before*/.fa-lock.sc-mge-query:before{content:\"\\f023\"}/*!@.fa-lock-open:before*/.fa-lock-open.sc-mge-query:before{content:\"\\f3c1\"}/*!@.fa-long-arrow-alt-down:before*/.fa-long-arrow-alt-down.sc-mge-query:before{content:\"\\f309\"}/*!@.fa-long-arrow-alt-left:before*/.fa-long-arrow-alt-left.sc-mge-query:before{content:\"\\f30a\"}/*!@.fa-long-arrow-alt-right:before*/.fa-long-arrow-alt-right.sc-mge-query:before{content:\"\\f30b\"}/*!@.fa-long-arrow-alt-up:before*/.fa-long-arrow-alt-up.sc-mge-query:before{content:\"\\f30c\"}/*!@.fa-low-vision:before*/.fa-low-vision.sc-mge-query:before{content:\"\\f2a8\"}/*!@.fa-luggage-cart:before*/.fa-luggage-cart.sc-mge-query:before{content:\"\\f59d\"}/*!@.fa-lungs:before*/.fa-lungs.sc-mge-query:before{content:\"\\f604\"}/*!@.fa-lungs-virus:before*/.fa-lungs-virus.sc-mge-query:before{content:\"\\e067\"}/*!@.fa-lyft:before*/.fa-lyft.sc-mge-query:before{content:\"\\f3c3\"}/*!@.fa-magento:before*/.fa-magento.sc-mge-query:before{content:\"\\f3c4\"}/*!@.fa-magic:before*/.fa-magic.sc-mge-query:before{content:\"\\f0d0\"}/*!@.fa-magnet:before*/.fa-magnet.sc-mge-query:before{content:\"\\f076\"}/*!@.fa-mail-bulk:before*/.fa-mail-bulk.sc-mge-query:before{content:\"\\f674\"}/*!@.fa-mailchimp:before*/.fa-mailchimp.sc-mge-query:before{content:\"\\f59e\"}/*!@.fa-male:before*/.fa-male.sc-mge-query:before{content:\"\\f183\"}/*!@.fa-mandalorian:before*/.fa-mandalorian.sc-mge-query:before{content:\"\\f50f\"}/*!@.fa-map:before*/.fa-map.sc-mge-query:before{content:\"\\f279\"}/*!@.fa-map-marked:before*/.fa-map-marked.sc-mge-query:before{content:\"\\f59f\"}/*!@.fa-map-marked-alt:before*/.fa-map-marked-alt.sc-mge-query:before{content:\"\\f5a0\"}/*!@.fa-map-marker:before*/.fa-map-marker.sc-mge-query:before{content:\"\\f041\"}/*!@.fa-map-marker-alt:before*/.fa-map-marker-alt.sc-mge-query:before{content:\"\\f3c5\"}/*!@.fa-map-pin:before*/.fa-map-pin.sc-mge-query:before{content:\"\\f276\"}/*!@.fa-map-signs:before*/.fa-map-signs.sc-mge-query:before{content:\"\\f277\"}/*!@.fa-markdown:before*/.fa-markdown.sc-mge-query:before{content:\"\\f60f\"}/*!@.fa-marker:before*/.fa-marker.sc-mge-query:before{content:\"\\f5a1\"}/*!@.fa-mars:before*/.fa-mars.sc-mge-query:before{content:\"\\f222\"}/*!@.fa-mars-double:before*/.fa-mars-double.sc-mge-query:before{content:\"\\f227\"}/*!@.fa-mars-stroke:before*/.fa-mars-stroke.sc-mge-query:before{content:\"\\f229\"}/*!@.fa-mars-stroke-h:before*/.fa-mars-stroke-h.sc-mge-query:before{content:\"\\f22b\"}/*!@.fa-mars-stroke-v:before*/.fa-mars-stroke-v.sc-mge-query:before{content:\"\\f22a\"}/*!@.fa-mask:before*/.fa-mask.sc-mge-query:before{content:\"\\f6fa\"}/*!@.fa-mastodon:before*/.fa-mastodon.sc-mge-query:before{content:\"\\f4f6\"}/*!@.fa-maxcdn:before*/.fa-maxcdn.sc-mge-query:before{content:\"\\f136\"}/*!@.fa-mdb:before*/.fa-mdb.sc-mge-query:before{content:\"\\f8ca\"}/*!@.fa-medal:before*/.fa-medal.sc-mge-query:before{content:\"\\f5a2\"}/*!@.fa-medapps:before*/.fa-medapps.sc-mge-query:before{content:\"\\f3c6\"}/*!@.fa-medium:before*/.fa-medium.sc-mge-query:before{content:\"\\f23a\"}/*!@.fa-medium-m:before*/.fa-medium-m.sc-mge-query:before{content:\"\\f3c7\"}/*!@.fa-medkit:before*/.fa-medkit.sc-mge-query:before{content:\"\\f0fa\"}/*!@.fa-medrt:before*/.fa-medrt.sc-mge-query:before{content:\"\\f3c8\"}/*!@.fa-meetup:before*/.fa-meetup.sc-mge-query:before{content:\"\\f2e0\"}/*!@.fa-megaport:before*/.fa-megaport.sc-mge-query:before{content:\"\\f5a3\"}/*!@.fa-meh:before*/.fa-meh.sc-mge-query:before{content:\"\\f11a\"}/*!@.fa-meh-blank:before*/.fa-meh-blank.sc-mge-query:before{content:\"\\f5a4\"}/*!@.fa-meh-rolling-eyes:before*/.fa-meh-rolling-eyes.sc-mge-query:before{content:\"\\f5a5\"}/*!@.fa-memory:before*/.fa-memory.sc-mge-query:before{content:\"\\f538\"}/*!@.fa-mendeley:before*/.fa-mendeley.sc-mge-query:before{content:\"\\f7b3\"}/*!@.fa-menorah:before*/.fa-menorah.sc-mge-query:before{content:\"\\f676\"}/*!@.fa-mercury:before*/.fa-mercury.sc-mge-query:before{content:\"\\f223\"}/*!@.fa-meteor:before*/.fa-meteor.sc-mge-query:before{content:\"\\f753\"}/*!@.fa-microblog:before*/.fa-microblog.sc-mge-query:before{content:\"\\e01a\"}/*!@.fa-microchip:before*/.fa-microchip.sc-mge-query:before{content:\"\\f2db\"}/*!@.fa-microphone:before*/.fa-microphone.sc-mge-query:before{content:\"\\f130\"}/*!@.fa-microphone-alt:before*/.fa-microphone-alt.sc-mge-query:before{content:\"\\f3c9\"}/*!@.fa-microphone-alt-slash:before*/.fa-microphone-alt-slash.sc-mge-query:before{content:\"\\f539\"}/*!@.fa-microphone-slash:before*/.fa-microphone-slash.sc-mge-query:before{content:\"\\f131\"}/*!@.fa-microscope:before*/.fa-microscope.sc-mge-query:before{content:\"\\f610\"}/*!@.fa-microsoft:before*/.fa-microsoft.sc-mge-query:before{content:\"\\f3ca\"}/*!@.fa-minus:before*/.fa-minus.sc-mge-query:before{content:\"\\f068\"}/*!@.fa-minus-circle:before*/.fa-minus-circle.sc-mge-query:before{content:\"\\f056\"}/*!@.fa-minus-square:before*/.fa-minus-square.sc-mge-query:before{content:\"\\f146\"}/*!@.fa-mitten:before*/.fa-mitten.sc-mge-query:before{content:\"\\f7b5\"}/*!@.fa-mix:before*/.fa-mix.sc-mge-query:before{content:\"\\f3cb\"}/*!@.fa-mixcloud:before*/.fa-mixcloud.sc-mge-query:before{content:\"\\f289\"}/*!@.fa-mixer:before*/.fa-mixer.sc-mge-query:before{content:\"\\e056\"}/*!@.fa-mizuni:before*/.fa-mizuni.sc-mge-query:before{content:\"\\f3cc\"}/*!@.fa-mobile:before*/.fa-mobile.sc-mge-query:before{content:\"\\f10b\"}/*!@.fa-mobile-alt:before*/.fa-mobile-alt.sc-mge-query:before{content:\"\\f3cd\"}/*!@.fa-modx:before*/.fa-modx.sc-mge-query:before{content:\"\\f285\"}/*!@.fa-monero:before*/.fa-monero.sc-mge-query:before{content:\"\\f3d0\"}/*!@.fa-money-bill:before*/.fa-money-bill.sc-mge-query:before{content:\"\\f0d6\"}/*!@.fa-money-bill-alt:before*/.fa-money-bill-alt.sc-mge-query:before{content:\"\\f3d1\"}/*!@.fa-money-bill-wave:before*/.fa-money-bill-wave.sc-mge-query:before{content:\"\\f53a\"}/*!@.fa-money-bill-wave-alt:before*/.fa-money-bill-wave-alt.sc-mge-query:before{content:\"\\f53b\"}/*!@.fa-money-check:before*/.fa-money-check.sc-mge-query:before{content:\"\\f53c\"}/*!@.fa-money-check-alt:before*/.fa-money-check-alt.sc-mge-query:before{content:\"\\f53d\"}/*!@.fa-monument:before*/.fa-monument.sc-mge-query:before{content:\"\\f5a6\"}/*!@.fa-moon:before*/.fa-moon.sc-mge-query:before{content:\"\\f186\"}/*!@.fa-mortar-pestle:before*/.fa-mortar-pestle.sc-mge-query:before{content:\"\\f5a7\"}/*!@.fa-mosque:before*/.fa-mosque.sc-mge-query:before{content:\"\\f678\"}/*!@.fa-motorcycle:before*/.fa-motorcycle.sc-mge-query:before{content:\"\\f21c\"}/*!@.fa-mountain:before*/.fa-mountain.sc-mge-query:before{content:\"\\f6fc\"}/*!@.fa-mouse:before*/.fa-mouse.sc-mge-query:before{content:\"\\f8cc\"}/*!@.fa-mouse-pointer:before*/.fa-mouse-pointer.sc-mge-query:before{content:\"\\f245\"}/*!@.fa-mug-hot:before*/.fa-mug-hot.sc-mge-query:before{content:\"\\f7b6\"}/*!@.fa-music:before*/.fa-music.sc-mge-query:before{content:\"\\f001\"}/*!@.fa-napster:before*/.fa-napster.sc-mge-query:before{content:\"\\f3d2\"}/*!@.fa-neos:before*/.fa-neos.sc-mge-query:before{content:\"\\f612\"}/*!@.fa-network-wired:before*/.fa-network-wired.sc-mge-query:before{content:\"\\f6ff\"}/*!@.fa-neuter:before*/.fa-neuter.sc-mge-query:before{content:\"\\f22c\"}/*!@.fa-newspaper:before*/.fa-newspaper.sc-mge-query:before{content:\"\\f1ea\"}/*!@.fa-nimblr:before*/.fa-nimblr.sc-mge-query:before{content:\"\\f5a8\"}/*!@.fa-node:before*/.fa-node.sc-mge-query:before{content:\"\\f419\"}/*!@.fa-node-js:before*/.fa-node-js.sc-mge-query:before{content:\"\\f3d3\"}/*!@.fa-not-equal:before*/.fa-not-equal.sc-mge-query:before{content:\"\\f53e\"}/*!@.fa-notes-medical:before*/.fa-notes-medical.sc-mge-query:before{content:\"\\f481\"}/*!@.fa-npm:before*/.fa-npm.sc-mge-query:before{content:\"\\f3d4\"}/*!@.fa-ns8:before*/.fa-ns8.sc-mge-query:before{content:\"\\f3d5\"}/*!@.fa-nutritionix:before*/.fa-nutritionix.sc-mge-query:before{content:\"\\f3d6\"}/*!@.fa-object-group:before*/.fa-object-group.sc-mge-query:before{content:\"\\f247\"}/*!@.fa-object-ungroup:before*/.fa-object-ungroup.sc-mge-query:before{content:\"\\f248\"}/*!@.fa-octopus-deploy:before*/.fa-octopus-deploy.sc-mge-query:before{content:\"\\e082\"}/*!@.fa-odnoklassniki:before*/.fa-odnoklassniki.sc-mge-query:before{content:\"\\f263\"}/*!@.fa-odnoklassniki-square:before*/.fa-odnoklassniki-square.sc-mge-query:before{content:\"\\f264\"}/*!@.fa-oil-can:before*/.fa-oil-can.sc-mge-query:before{content:\"\\f613\"}/*!@.fa-old-republic:before*/.fa-old-republic.sc-mge-query:before{content:\"\\f510\"}/*!@.fa-om:before*/.fa-om.sc-mge-query:before{content:\"\\f679\"}/*!@.fa-opencart:before*/.fa-opencart.sc-mge-query:before{content:\"\\f23d\"}/*!@.fa-openid:before*/.fa-openid.sc-mge-query:before{content:\"\\f19b\"}/*!@.fa-opera:before*/.fa-opera.sc-mge-query:before{content:\"\\f26a\"}/*!@.fa-optin-monster:before*/.fa-optin-monster.sc-mge-query:before{content:\"\\f23c\"}/*!@.fa-orcid:before*/.fa-orcid.sc-mge-query:before{content:\"\\f8d2\"}/*!@.fa-osi:before*/.fa-osi.sc-mge-query:before{content:\"\\f41a\"}/*!@.fa-otter:before*/.fa-otter.sc-mge-query:before{content:\"\\f700\"}/*!@.fa-outdent:before*/.fa-outdent.sc-mge-query:before{content:\"\\f03b\"}/*!@.fa-page4:before*/.fa-page4.sc-mge-query:before{content:\"\\f3d7\"}/*!@.fa-pagelines:before*/.fa-pagelines.sc-mge-query:before{content:\"\\f18c\"}/*!@.fa-pager:before*/.fa-pager.sc-mge-query:before{content:\"\\f815\"}/*!@.fa-paint-brush:before*/.fa-paint-brush.sc-mge-query:before{content:\"\\f1fc\"}/*!@.fa-paint-roller:before*/.fa-paint-roller.sc-mge-query:before{content:\"\\f5aa\"}/*!@.fa-palette:before*/.fa-palette.sc-mge-query:before{content:\"\\f53f\"}/*!@.fa-palfed:before*/.fa-palfed.sc-mge-query:before{content:\"\\f3d8\"}/*!@.fa-pallet:before*/.fa-pallet.sc-mge-query:before{content:\"\\f482\"}/*!@.fa-paper-plane:before*/.fa-paper-plane.sc-mge-query:before{content:\"\\f1d8\"}/*!@.fa-paperclip:before*/.fa-paperclip.sc-mge-query:before{content:\"\\f0c6\"}/*!@.fa-parachute-box:before*/.fa-parachute-box.sc-mge-query:before{content:\"\\f4cd\"}/*!@.fa-paragraph:before*/.fa-paragraph.sc-mge-query:before{content:\"\\f1dd\"}/*!@.fa-parking:before*/.fa-parking.sc-mge-query:before{content:\"\\f540\"}/*!@.fa-passport:before*/.fa-passport.sc-mge-query:before{content:\"\\f5ab\"}/*!@.fa-pastafarianism:before*/.fa-pastafarianism.sc-mge-query:before{content:\"\\f67b\"}/*!@.fa-paste:before*/.fa-paste.sc-mge-query:before{content:\"\\f0ea\"}/*!@.fa-patreon:before*/.fa-patreon.sc-mge-query:before{content:\"\\f3d9\"}/*!@.fa-pause:before*/.fa-pause.sc-mge-query:before{content:\"\\f04c\"}/*!@.fa-pause-circle:before*/.fa-pause-circle.sc-mge-query:before{content:\"\\f28b\"}/*!@.fa-paw:before*/.fa-paw.sc-mge-query:before{content:\"\\f1b0\"}/*!@.fa-paypal:before*/.fa-paypal.sc-mge-query:before{content:\"\\f1ed\"}/*!@.fa-peace:before*/.fa-peace.sc-mge-query:before{content:\"\\f67c\"}/*!@.fa-pen:before*/.fa-pen.sc-mge-query:before{content:\"\\f304\"}/*!@.fa-pen-alt:before*/.fa-pen-alt.sc-mge-query:before{content:\"\\f305\"}/*!@.fa-pen-fancy:before*/.fa-pen-fancy.sc-mge-query:before{content:\"\\f5ac\"}/*!@.fa-pen-nib:before*/.fa-pen-nib.sc-mge-query:before{content:\"\\f5ad\"}/*!@.fa-pen-square:before*/.fa-pen-square.sc-mge-query:before{content:\"\\f14b\"}/*!@.fa-pencil-alt:before*/.fa-pencil-alt.sc-mge-query:before{content:\"\\f303\"}/*!@.fa-pencil-ruler:before*/.fa-pencil-ruler.sc-mge-query:before{content:\"\\f5ae\"}/*!@.fa-penny-arcade:before*/.fa-penny-arcade.sc-mge-query:before{content:\"\\f704\"}/*!@.fa-people-arrows:before*/.fa-people-arrows.sc-mge-query:before{content:\"\\e068\"}/*!@.fa-people-carry:before*/.fa-people-carry.sc-mge-query:before{content:\"\\f4ce\"}/*!@.fa-pepper-hot:before*/.fa-pepper-hot.sc-mge-query:before{content:\"\\f816\"}/*!@.fa-perbyte:before*/.fa-perbyte.sc-mge-query:before{content:\"\\e083\"}/*!@.fa-percent:before*/.fa-percent.sc-mge-query:before{content:\"\\f295\"}/*!@.fa-percentage:before*/.fa-percentage.sc-mge-query:before{content:\"\\f541\"}/*!@.fa-periscope:before*/.fa-periscope.sc-mge-query:before{content:\"\\f3da\"}/*!@.fa-person-booth:before*/.fa-person-booth.sc-mge-query:before{content:\"\\f756\"}/*!@.fa-phabricator:before*/.fa-phabricator.sc-mge-query:before{content:\"\\f3db\"}/*!@.fa-phoenix-framework:before*/.fa-phoenix-framework.sc-mge-query:before{content:\"\\f3dc\"}/*!@.fa-phoenix-squadron:before*/.fa-phoenix-squadron.sc-mge-query:before{content:\"\\f511\"}/*!@.fa-phone:before*/.fa-phone.sc-mge-query:before{content:\"\\f095\"}/*!@.fa-phone-alt:before*/.fa-phone-alt.sc-mge-query:before{content:\"\\f879\"}/*!@.fa-phone-slash:before*/.fa-phone-slash.sc-mge-query:before{content:\"\\f3dd\"}/*!@.fa-phone-square:before*/.fa-phone-square.sc-mge-query:before{content:\"\\f098\"}/*!@.fa-phone-square-alt:before*/.fa-phone-square-alt.sc-mge-query:before{content:\"\\f87b\"}/*!@.fa-phone-volume:before*/.fa-phone-volume.sc-mge-query:before{content:\"\\f2a0\"}/*!@.fa-photo-video:before*/.fa-photo-video.sc-mge-query:before{content:\"\\f87c\"}/*!@.fa-php:before*/.fa-php.sc-mge-query:before{content:\"\\f457\"}/*!@.fa-pied-piper:before*/.fa-pied-piper.sc-mge-query:before{content:\"\\f2ae\"}/*!@.fa-pied-piper-alt:before*/.fa-pied-piper-alt.sc-mge-query:before{content:\"\\f1a8\"}/*!@.fa-pied-piper-hat:before*/.fa-pied-piper-hat.sc-mge-query:before{content:\"\\f4e5\"}/*!@.fa-pied-piper-pp:before*/.fa-pied-piper-pp.sc-mge-query:before{content:\"\\f1a7\"}/*!@.fa-pied-piper-square:before*/.fa-pied-piper-square.sc-mge-query:before{content:\"\\e01e\"}/*!@.fa-piggy-bank:before*/.fa-piggy-bank.sc-mge-query:before{content:\"\\f4d3\"}/*!@.fa-pills:before*/.fa-pills.sc-mge-query:before{content:\"\\f484\"}/*!@.fa-pinterest:before*/.fa-pinterest.sc-mge-query:before{content:\"\\f0d2\"}/*!@.fa-pinterest-p:before*/.fa-pinterest-p.sc-mge-query:before{content:\"\\f231\"}/*!@.fa-pinterest-square:before*/.fa-pinterest-square.sc-mge-query:before{content:\"\\f0d3\"}/*!@.fa-pizza-slice:before*/.fa-pizza-slice.sc-mge-query:before{content:\"\\f818\"}/*!@.fa-place-of-worship:before*/.fa-place-of-worship.sc-mge-query:before{content:\"\\f67f\"}/*!@.fa-plane:before*/.fa-plane.sc-mge-query:before{content:\"\\f072\"}/*!@.fa-plane-arrival:before*/.fa-plane-arrival.sc-mge-query:before{content:\"\\f5af\"}/*!@.fa-plane-departure:before*/.fa-plane-departure.sc-mge-query:before{content:\"\\f5b0\"}/*!@.fa-plane-slash:before*/.fa-plane-slash.sc-mge-query:before{content:\"\\e069\"}/*!@.fa-play:before*/.fa-play.sc-mge-query:before{content:\"\\f04b\"}/*!@.fa-play-circle:before*/.fa-play-circle.sc-mge-query:before{content:\"\\f144\"}/*!@.fa-playstation:before*/.fa-playstation.sc-mge-query:before{content:\"\\f3df\"}/*!@.fa-plug:before*/.fa-plug.sc-mge-query:before{content:\"\\f1e6\"}/*!@.fa-plus:before*/.fa-plus.sc-mge-query:before{content:\"\\f067\"}/*!@.fa-plus-circle:before*/.fa-plus-circle.sc-mge-query:before{content:\"\\f055\"}/*!@.fa-plus-square:before*/.fa-plus-square.sc-mge-query:before{content:\"\\f0fe\"}/*!@.fa-podcast:before*/.fa-podcast.sc-mge-query:before{content:\"\\f2ce\"}/*!@.fa-poll:before*/.fa-poll.sc-mge-query:before{content:\"\\f681\"}/*!@.fa-poll-h:before*/.fa-poll-h.sc-mge-query:before{content:\"\\f682\"}/*!@.fa-poo:before*/.fa-poo.sc-mge-query:before{content:\"\\f2fe\"}/*!@.fa-poo-storm:before*/.fa-poo-storm.sc-mge-query:before{content:\"\\f75a\"}/*!@.fa-poop:before*/.fa-poop.sc-mge-query:before{content:\"\\f619\"}/*!@.fa-portrait:before*/.fa-portrait.sc-mge-query:before{content:\"\\f3e0\"}/*!@.fa-pound-sign:before*/.fa-pound-sign.sc-mge-query:before{content:\"\\f154\"}/*!@.fa-power-off:before*/.fa-power-off.sc-mge-query:before{content:\"\\f011\"}/*!@.fa-pray:before*/.fa-pray.sc-mge-query:before{content:\"\\f683\"}/*!@.fa-praying-hands:before*/.fa-praying-hands.sc-mge-query:before{content:\"\\f684\"}/*!@.fa-prescription:before*/.fa-prescription.sc-mge-query:before{content:\"\\f5b1\"}/*!@.fa-prescription-bottle:before*/.fa-prescription-bottle.sc-mge-query:before{content:\"\\f485\"}/*!@.fa-prescription-bottle-alt:before*/.fa-prescription-bottle-alt.sc-mge-query:before{content:\"\\f486\"}/*!@.fa-print:before*/.fa-print.sc-mge-query:before{content:\"\\f02f\"}/*!@.fa-procedures:before*/.fa-procedures.sc-mge-query:before{content:\"\\f487\"}/*!@.fa-product-hunt:before*/.fa-product-hunt.sc-mge-query:before{content:\"\\f288\"}/*!@.fa-project-diagram:before*/.fa-project-diagram.sc-mge-query:before{content:\"\\f542\"}/*!@.fa-pump-medical:before*/.fa-pump-medical.sc-mge-query:before{content:\"\\e06a\"}/*!@.fa-pump-soap:before*/.fa-pump-soap.sc-mge-query:before{content:\"\\e06b\"}/*!@.fa-pushed:before*/.fa-pushed.sc-mge-query:before{content:\"\\f3e1\"}/*!@.fa-puzzle-piece:before*/.fa-puzzle-piece.sc-mge-query:before{content:\"\\f12e\"}/*!@.fa-python:before*/.fa-python.sc-mge-query:before{content:\"\\f3e2\"}/*!@.fa-qq:before*/.fa-qq.sc-mge-query:before{content:\"\\f1d6\"}/*!@.fa-qrcode:before*/.fa-qrcode.sc-mge-query:before{content:\"\\f029\"}/*!@.fa-question:before*/.fa-question.sc-mge-query:before{content:\"\\f128\"}/*!@.fa-question-circle:before*/.fa-question-circle.sc-mge-query:before{content:\"\\f059\"}/*!@.fa-quidditch:before*/.fa-quidditch.sc-mge-query:before{content:\"\\f458\"}/*!@.fa-quinscape:before*/.fa-quinscape.sc-mge-query:before{content:\"\\f459\"}/*!@.fa-quora:before*/.fa-quora.sc-mge-query:before{content:\"\\f2c4\"}/*!@.fa-quote-left:before*/.fa-quote-left.sc-mge-query:before{content:\"\\f10d\"}/*!@.fa-quote-right:before*/.fa-quote-right.sc-mge-query:before{content:\"\\f10e\"}/*!@.fa-quran:before*/.fa-quran.sc-mge-query:before{content:\"\\f687\"}/*!@.fa-r-project:before*/.fa-r-project.sc-mge-query:before{content:\"\\f4f7\"}/*!@.fa-radiation:before*/.fa-radiation.sc-mge-query:before{content:\"\\f7b9\"}/*!@.fa-radiation-alt:before*/.fa-radiation-alt.sc-mge-query:before{content:\"\\f7ba\"}/*!@.fa-rainbow:before*/.fa-rainbow.sc-mge-query:before{content:\"\\f75b\"}/*!@.fa-random:before*/.fa-random.sc-mge-query:before{content:\"\\f074\"}/*!@.fa-raspberry-pi:before*/.fa-raspberry-pi.sc-mge-query:before{content:\"\\f7bb\"}/*!@.fa-ravelry:before*/.fa-ravelry.sc-mge-query:before{content:\"\\f2d9\"}/*!@.fa-react:before*/.fa-react.sc-mge-query:before{content:\"\\f41b\"}/*!@.fa-reacteurope:before*/.fa-reacteurope.sc-mge-query:before{content:\"\\f75d\"}/*!@.fa-readme:before*/.fa-readme.sc-mge-query:before{content:\"\\f4d5\"}/*!@.fa-rebel:before*/.fa-rebel.sc-mge-query:before{content:\"\\f1d0\"}/*!@.fa-receipt:before*/.fa-receipt.sc-mge-query:before{content:\"\\f543\"}/*!@.fa-record-vinyl:before*/.fa-record-vinyl.sc-mge-query:before{content:\"\\f8d9\"}/*!@.fa-recycle:before*/.fa-recycle.sc-mge-query:before{content:\"\\f1b8\"}/*!@.fa-red-river:before*/.fa-red-river.sc-mge-query:before{content:\"\\f3e3\"}/*!@.fa-reddit:before*/.fa-reddit.sc-mge-query:before{content:\"\\f1a1\"}/*!@.fa-reddit-alien:before*/.fa-reddit-alien.sc-mge-query:before{content:\"\\f281\"}/*!@.fa-reddit-square:before*/.fa-reddit-square.sc-mge-query:before{content:\"\\f1a2\"}/*!@.fa-redhat:before*/.fa-redhat.sc-mge-query:before{content:\"\\f7bc\"}/*!@.fa-redo:before*/.fa-redo.sc-mge-query:before{content:\"\\f01e\"}/*!@.fa-redo-alt:before*/.fa-redo-alt.sc-mge-query:before{content:\"\\f2f9\"}/*!@.fa-registered:before*/.fa-registered.sc-mge-query:before{content:\"\\f25d\"}/*!@.fa-remove-format:before*/.fa-remove-format.sc-mge-query:before{content:\"\\f87d\"}/*!@.fa-renren:before*/.fa-renren.sc-mge-query:before{content:\"\\f18b\"}/*!@.fa-reply:before*/.fa-reply.sc-mge-query:before{content:\"\\f3e5\"}/*!@.fa-reply-all:before*/.fa-reply-all.sc-mge-query:before{content:\"\\f122\"}/*!@.fa-replyd:before*/.fa-replyd.sc-mge-query:before{content:\"\\f3e6\"}/*!@.fa-republican:before*/.fa-republican.sc-mge-query:before{content:\"\\f75e\"}/*!@.fa-researchgate:before*/.fa-researchgate.sc-mge-query:before{content:\"\\f4f8\"}/*!@.fa-resolving:before*/.fa-resolving.sc-mge-query:before{content:\"\\f3e7\"}/*!@.fa-restroom:before*/.fa-restroom.sc-mge-query:before{content:\"\\f7bd\"}/*!@.fa-retweet:before*/.fa-retweet.sc-mge-query:before{content:\"\\f079\"}/*!@.fa-rev:before*/.fa-rev.sc-mge-query:before{content:\"\\f5b2\"}/*!@.fa-ribbon:before*/.fa-ribbon.sc-mge-query:before{content:\"\\f4d6\"}/*!@.fa-ring:before*/.fa-ring.sc-mge-query:before{content:\"\\f70b\"}/*!@.fa-road:before*/.fa-road.sc-mge-query:before{content:\"\\f018\"}/*!@.fa-robot:before*/.fa-robot.sc-mge-query:before{content:\"\\f544\"}/*!@.fa-rocket:before*/.fa-rocket.sc-mge-query:before{content:\"\\f135\"}/*!@.fa-rocketchat:before*/.fa-rocketchat.sc-mge-query:before{content:\"\\f3e8\"}/*!@.fa-rockrms:before*/.fa-rockrms.sc-mge-query:before{content:\"\\f3e9\"}/*!@.fa-route:before*/.fa-route.sc-mge-query:before{content:\"\\f4d7\"}/*!@.fa-rss:before*/.fa-rss.sc-mge-query:before{content:\"\\f09e\"}/*!@.fa-rss-square:before*/.fa-rss-square.sc-mge-query:before{content:\"\\f143\"}/*!@.fa-ruble-sign:before*/.fa-ruble-sign.sc-mge-query:before{content:\"\\f158\"}/*!@.fa-ruler:before*/.fa-ruler.sc-mge-query:before{content:\"\\f545\"}/*!@.fa-ruler-combined:before*/.fa-ruler-combined.sc-mge-query:before{content:\"\\f546\"}/*!@.fa-ruler-horizontal:before*/.fa-ruler-horizontal.sc-mge-query:before{content:\"\\f547\"}/*!@.fa-ruler-vertical:before*/.fa-ruler-vertical.sc-mge-query:before{content:\"\\f548\"}/*!@.fa-running:before*/.fa-running.sc-mge-query:before{content:\"\\f70c\"}/*!@.fa-rupee-sign:before*/.fa-rupee-sign.sc-mge-query:before{content:\"\\f156\"}/*!@.fa-rust:before*/.fa-rust.sc-mge-query:before{content:\"\\e07a\"}/*!@.fa-sad-cry:before*/.fa-sad-cry.sc-mge-query:before{content:\"\\f5b3\"}/*!@.fa-sad-tear:before*/.fa-sad-tear.sc-mge-query:before{content:\"\\f5b4\"}/*!@.fa-safari:before*/.fa-safari.sc-mge-query:before{content:\"\\f267\"}/*!@.fa-salesforce:before*/.fa-salesforce.sc-mge-query:before{content:\"\\f83b\"}/*!@.fa-sass:before*/.fa-sass.sc-mge-query:before{content:\"\\f41e\"}/*!@.fa-satellite:before*/.fa-satellite.sc-mge-query:before{content:\"\\f7bf\"}/*!@.fa-satellite-dish:before*/.fa-satellite-dish.sc-mge-query:before{content:\"\\f7c0\"}/*!@.fa-save:before*/.fa-save.sc-mge-query:before{content:\"\\f0c7\"}/*!@.fa-schlix:before*/.fa-schlix.sc-mge-query:before{content:\"\\f3ea\"}/*!@.fa-school:before*/.fa-school.sc-mge-query:before{content:\"\\f549\"}/*!@.fa-screwdriver:before*/.fa-screwdriver.sc-mge-query:before{content:\"\\f54a\"}/*!@.fa-scribd:before*/.fa-scribd.sc-mge-query:before{content:\"\\f28a\"}/*!@.fa-scroll:before*/.fa-scroll.sc-mge-query:before{content:\"\\f70e\"}/*!@.fa-sd-card:before*/.fa-sd-card.sc-mge-query:before{content:\"\\f7c2\"}/*!@.fa-search:before*/.fa-search.sc-mge-query:before{content:\"\\f002\"}/*!@.fa-search-dollar:before*/.fa-search-dollar.sc-mge-query:before{content:\"\\f688\"}/*!@.fa-search-location:before*/.fa-search-location.sc-mge-query:before{content:\"\\f689\"}/*!@.fa-search-minus:before*/.fa-search-minus.sc-mge-query:before{content:\"\\f010\"}/*!@.fa-search-plus:before*/.fa-search-plus.sc-mge-query:before{content:\"\\f00e\"}/*!@.fa-searchengin:before*/.fa-searchengin.sc-mge-query:before{content:\"\\f3eb\"}/*!@.fa-seedling:before*/.fa-seedling.sc-mge-query:before{content:\"\\f4d8\"}/*!@.fa-sellcast:before*/.fa-sellcast.sc-mge-query:before{content:\"\\f2da\"}/*!@.fa-sellsy:before*/.fa-sellsy.sc-mge-query:before{content:\"\\f213\"}/*!@.fa-server:before*/.fa-server.sc-mge-query:before{content:\"\\f233\"}/*!@.fa-servicestack:before*/.fa-servicestack.sc-mge-query:before{content:\"\\f3ec\"}/*!@.fa-shapes:before*/.fa-shapes.sc-mge-query:before{content:\"\\f61f\"}/*!@.fa-share:before*/.fa-share.sc-mge-query:before{content:\"\\f064\"}/*!@.fa-share-alt:before*/.fa-share-alt.sc-mge-query:before{content:\"\\f1e0\"}/*!@.fa-share-alt-square:before*/.fa-share-alt-square.sc-mge-query:before{content:\"\\f1e1\"}/*!@.fa-share-square:before*/.fa-share-square.sc-mge-query:before{content:\"\\f14d\"}/*!@.fa-shekel-sign:before*/.fa-shekel-sign.sc-mge-query:before{content:\"\\f20b\"}/*!@.fa-shield-alt:before*/.fa-shield-alt.sc-mge-query:before{content:\"\\f3ed\"}/*!@.fa-shield-virus:before*/.fa-shield-virus.sc-mge-query:before{content:\"\\e06c\"}/*!@.fa-ship:before*/.fa-ship.sc-mge-query:before{content:\"\\f21a\"}/*!@.fa-shipping-fast:before*/.fa-shipping-fast.sc-mge-query:before{content:\"\\f48b\"}/*!@.fa-shirtsinbulk:before*/.fa-shirtsinbulk.sc-mge-query:before{content:\"\\f214\"}/*!@.fa-shoe-prints:before*/.fa-shoe-prints.sc-mge-query:before{content:\"\\f54b\"}/*!@.fa-shopify:before*/.fa-shopify.sc-mge-query:before{content:\"\\e057\"}/*!@.fa-shopping-bag:before*/.fa-shopping-bag.sc-mge-query:before{content:\"\\f290\"}/*!@.fa-shopping-basket:before*/.fa-shopping-basket.sc-mge-query:before{content:\"\\f291\"}/*!@.fa-shopping-cart:before*/.fa-shopping-cart.sc-mge-query:before{content:\"\\f07a\"}/*!@.fa-shopware:before*/.fa-shopware.sc-mge-query:before{content:\"\\f5b5\"}/*!@.fa-shower:before*/.fa-shower.sc-mge-query:before{content:\"\\f2cc\"}/*!@.fa-shuttle-van:before*/.fa-shuttle-van.sc-mge-query:before{content:\"\\f5b6\"}/*!@.fa-sign:before*/.fa-sign.sc-mge-query:before{content:\"\\f4d9\"}/*!@.fa-sign-in-alt:before*/.fa-sign-in-alt.sc-mge-query:before{content:\"\\f2f6\"}/*!@.fa-sign-language:before*/.fa-sign-language.sc-mge-query:before{content:\"\\f2a7\"}/*!@.fa-sign-out-alt:before*/.fa-sign-out-alt.sc-mge-query:before{content:\"\\f2f5\"}/*!@.fa-signal:before*/.fa-signal.sc-mge-query:before{content:\"\\f012\"}/*!@.fa-signature:before*/.fa-signature.sc-mge-query:before{content:\"\\f5b7\"}/*!@.fa-sim-card:before*/.fa-sim-card.sc-mge-query:before{content:\"\\f7c4\"}/*!@.fa-simplybuilt:before*/.fa-simplybuilt.sc-mge-query:before{content:\"\\f215\"}/*!@.fa-sink:before*/.fa-sink.sc-mge-query:before{content:\"\\e06d\"}/*!@.fa-sistrix:before*/.fa-sistrix.sc-mge-query:before{content:\"\\f3ee\"}/*!@.fa-sitemap:before*/.fa-sitemap.sc-mge-query:before{content:\"\\f0e8\"}/*!@.fa-sith:before*/.fa-sith.sc-mge-query:before{content:\"\\f512\"}/*!@.fa-skating:before*/.fa-skating.sc-mge-query:before{content:\"\\f7c5\"}/*!@.fa-sketch:before*/.fa-sketch.sc-mge-query:before{content:\"\\f7c6\"}/*!@.fa-skiing:before*/.fa-skiing.sc-mge-query:before{content:\"\\f7c9\"}/*!@.fa-skiing-nordic:before*/.fa-skiing-nordic.sc-mge-query:before{content:\"\\f7ca\"}/*!@.fa-skull:before*/.fa-skull.sc-mge-query:before{content:\"\\f54c\"}/*!@.fa-skull-crossbones:before*/.fa-skull-crossbones.sc-mge-query:before{content:\"\\f714\"}/*!@.fa-skyatlas:before*/.fa-skyatlas.sc-mge-query:before{content:\"\\f216\"}/*!@.fa-skype:before*/.fa-skype.sc-mge-query:before{content:\"\\f17e\"}/*!@.fa-slack:before*/.fa-slack.sc-mge-query:before{content:\"\\f198\"}/*!@.fa-slack-hash:before*/.fa-slack-hash.sc-mge-query:before{content:\"\\f3ef\"}/*!@.fa-slash:before*/.fa-slash.sc-mge-query:before{content:\"\\f715\"}/*!@.fa-sleigh:before*/.fa-sleigh.sc-mge-query:before{content:\"\\f7cc\"}/*!@.fa-sliders-h:before*/.fa-sliders-h.sc-mge-query:before{content:\"\\f1de\"}/*!@.fa-slideshare:before*/.fa-slideshare.sc-mge-query:before{content:\"\\f1e7\"}/*!@.fa-smile:before*/.fa-smile.sc-mge-query:before{content:\"\\f118\"}/*!@.fa-smile-beam:before*/.fa-smile-beam.sc-mge-query:before{content:\"\\f5b8\"}/*!@.fa-smile-wink:before*/.fa-smile-wink.sc-mge-query:before{content:\"\\f4da\"}/*!@.fa-smog:before*/.fa-smog.sc-mge-query:before{content:\"\\f75f\"}/*!@.fa-smoking:before*/.fa-smoking.sc-mge-query:before{content:\"\\f48d\"}/*!@.fa-smoking-ban:before*/.fa-smoking-ban.sc-mge-query:before{content:\"\\f54d\"}/*!@.fa-sms:before*/.fa-sms.sc-mge-query:before{content:\"\\f7cd\"}/*!@.fa-snapchat:before*/.fa-snapchat.sc-mge-query:before{content:\"\\f2ab\"}/*!@.fa-snapchat-ghost:before*/.fa-snapchat-ghost.sc-mge-query:before{content:\"\\f2ac\"}/*!@.fa-snapchat-square:before*/.fa-snapchat-square.sc-mge-query:before{content:\"\\f2ad\"}/*!@.fa-snowboarding:before*/.fa-snowboarding.sc-mge-query:before{content:\"\\f7ce\"}/*!@.fa-snowflake:before*/.fa-snowflake.sc-mge-query:before{content:\"\\f2dc\"}/*!@.fa-snowman:before*/.fa-snowman.sc-mge-query:before{content:\"\\f7d0\"}/*!@.fa-snowplow:before*/.fa-snowplow.sc-mge-query:before{content:\"\\f7d2\"}/*!@.fa-soap:before*/.fa-soap.sc-mge-query:before{content:\"\\e06e\"}/*!@.fa-socks:before*/.fa-socks.sc-mge-query:before{content:\"\\f696\"}/*!@.fa-solar-panel:before*/.fa-solar-panel.sc-mge-query:before{content:\"\\f5ba\"}/*!@.fa-sort:before*/.fa-sort.sc-mge-query:before{content:\"\\f0dc\"}/*!@.fa-sort-alpha-down:before*/.fa-sort-alpha-down.sc-mge-query:before{content:\"\\f15d\"}/*!@.fa-sort-alpha-down-alt:before*/.fa-sort-alpha-down-alt.sc-mge-query:before{content:\"\\f881\"}/*!@.fa-sort-alpha-up:before*/.fa-sort-alpha-up.sc-mge-query:before{content:\"\\f15e\"}/*!@.fa-sort-alpha-up-alt:before*/.fa-sort-alpha-up-alt.sc-mge-query:before{content:\"\\f882\"}/*!@.fa-sort-amount-down:before*/.fa-sort-amount-down.sc-mge-query:before{content:\"\\f160\"}/*!@.fa-sort-amount-down-alt:before*/.fa-sort-amount-down-alt.sc-mge-query:before{content:\"\\f884\"}/*!@.fa-sort-amount-up:before*/.fa-sort-amount-up.sc-mge-query:before{content:\"\\f161\"}/*!@.fa-sort-amount-up-alt:before*/.fa-sort-amount-up-alt.sc-mge-query:before{content:\"\\f885\"}/*!@.fa-sort-down:before*/.fa-sort-down.sc-mge-query:before{content:\"\\f0dd\"}/*!@.fa-sort-numeric-down:before*/.fa-sort-numeric-down.sc-mge-query:before{content:\"\\f162\"}/*!@.fa-sort-numeric-down-alt:before*/.fa-sort-numeric-down-alt.sc-mge-query:before{content:\"\\f886\"}/*!@.fa-sort-numeric-up:before*/.fa-sort-numeric-up.sc-mge-query:before{content:\"\\f163\"}/*!@.fa-sort-numeric-up-alt:before*/.fa-sort-numeric-up-alt.sc-mge-query:before{content:\"\\f887\"}/*!@.fa-sort-up:before*/.fa-sort-up.sc-mge-query:before{content:\"\\f0de\"}/*!@.fa-soundcloud:before*/.fa-soundcloud.sc-mge-query:before{content:\"\\f1be\"}/*!@.fa-sourcetree:before*/.fa-sourcetree.sc-mge-query:before{content:\"\\f7d3\"}/*!@.fa-spa:before*/.fa-spa.sc-mge-query:before{content:\"\\f5bb\"}/*!@.fa-space-shuttle:before*/.fa-space-shuttle.sc-mge-query:before{content:\"\\f197\"}/*!@.fa-speakap:before*/.fa-speakap.sc-mge-query:before{content:\"\\f3f3\"}/*!@.fa-speaker-deck:before*/.fa-speaker-deck.sc-mge-query:before{content:\"\\f83c\"}/*!@.fa-spell-check:before*/.fa-spell-check.sc-mge-query:before{content:\"\\f891\"}/*!@.fa-spider:before*/.fa-spider.sc-mge-query:before{content:\"\\f717\"}/*!@.fa-spinner:before*/.fa-spinner.sc-mge-query:before{content:\"\\f110\"}/*!@.fa-splotch:before*/.fa-splotch.sc-mge-query:before{content:\"\\f5bc\"}/*!@.fa-spotify:before*/.fa-spotify.sc-mge-query:before{content:\"\\f1bc\"}/*!@.fa-spray-can:before*/.fa-spray-can.sc-mge-query:before{content:\"\\f5bd\"}/*!@.fa-square:before*/.fa-square.sc-mge-query:before{content:\"\\f0c8\"}/*!@.fa-square-full:before*/.fa-square-full.sc-mge-query:before{content:\"\\f45c\"}/*!@.fa-square-root-alt:before*/.fa-square-root-alt.sc-mge-query:before{content:\"\\f698\"}/*!@.fa-squarespace:before*/.fa-squarespace.sc-mge-query:before{content:\"\\f5be\"}/*!@.fa-stack-exchange:before*/.fa-stack-exchange.sc-mge-query:before{content:\"\\f18d\"}/*!@.fa-stack-overflow:before*/.fa-stack-overflow.sc-mge-query:before{content:\"\\f16c\"}/*!@.fa-stackpath:before*/.fa-stackpath.sc-mge-query:before{content:\"\\f842\"}/*!@.fa-stamp:before*/.fa-stamp.sc-mge-query:before{content:\"\\f5bf\"}/*!@.fa-star:before*/.fa-star.sc-mge-query:before{content:\"\\f005\"}/*!@.fa-star-and-crescent:before*/.fa-star-and-crescent.sc-mge-query:before{content:\"\\f699\"}/*!@.fa-star-half:before*/.fa-star-half.sc-mge-query:before{content:\"\\f089\"}/*!@.fa-star-half-alt:before*/.fa-star-half-alt.sc-mge-query:before{content:\"\\f5c0\"}/*!@.fa-star-of-david:before*/.fa-star-of-david.sc-mge-query:before{content:\"\\f69a\"}/*!@.fa-star-of-life:before*/.fa-star-of-life.sc-mge-query:before{content:\"\\f621\"}/*!@.fa-staylinked:before*/.fa-staylinked.sc-mge-query:before{content:\"\\f3f5\"}/*!@.fa-steam:before*/.fa-steam.sc-mge-query:before{content:\"\\f1b6\"}/*!@.fa-steam-square:before*/.fa-steam-square.sc-mge-query:before{content:\"\\f1b7\"}/*!@.fa-steam-symbol:before*/.fa-steam-symbol.sc-mge-query:before{content:\"\\f3f6\"}/*!@.fa-step-backward:before*/.fa-step-backward.sc-mge-query:before{content:\"\\f048\"}/*!@.fa-step-forward:before*/.fa-step-forward.sc-mge-query:before{content:\"\\f051\"}/*!@.fa-stethoscope:before*/.fa-stethoscope.sc-mge-query:before{content:\"\\f0f1\"}/*!@.fa-sticker-mule:before*/.fa-sticker-mule.sc-mge-query:before{content:\"\\f3f7\"}/*!@.fa-sticky-note:before*/.fa-sticky-note.sc-mge-query:before{content:\"\\f249\"}/*!@.fa-stop:before*/.fa-stop.sc-mge-query:before{content:\"\\f04d\"}/*!@.fa-stop-circle:before*/.fa-stop-circle.sc-mge-query:before{content:\"\\f28d\"}/*!@.fa-stopwatch:before*/.fa-stopwatch.sc-mge-query:before{content:\"\\f2f2\"}/*!@.fa-stopwatch-20:before*/.fa-stopwatch-20.sc-mge-query:before{content:\"\\e06f\"}/*!@.fa-store:before*/.fa-store.sc-mge-query:before{content:\"\\f54e\"}/*!@.fa-store-alt:before*/.fa-store-alt.sc-mge-query:before{content:\"\\f54f\"}/*!@.fa-store-alt-slash:before*/.fa-store-alt-slash.sc-mge-query:before{content:\"\\e070\"}/*!@.fa-store-slash:before*/.fa-store-slash.sc-mge-query:before{content:\"\\e071\"}/*!@.fa-strava:before*/.fa-strava.sc-mge-query:before{content:\"\\f428\"}/*!@.fa-stream:before*/.fa-stream.sc-mge-query:before{content:\"\\f550\"}/*!@.fa-street-view:before*/.fa-street-view.sc-mge-query:before{content:\"\\f21d\"}/*!@.fa-strikethrough:before*/.fa-strikethrough.sc-mge-query:before{content:\"\\f0cc\"}/*!@.fa-stripe:before*/.fa-stripe.sc-mge-query:before{content:\"\\f429\"}/*!@.fa-stripe-s:before*/.fa-stripe-s.sc-mge-query:before{content:\"\\f42a\"}/*!@.fa-stroopwafel:before*/.fa-stroopwafel.sc-mge-query:before{content:\"\\f551\"}/*!@.fa-studiovinari:before*/.fa-studiovinari.sc-mge-query:before{content:\"\\f3f8\"}/*!@.fa-stumbleupon:before*/.fa-stumbleupon.sc-mge-query:before{content:\"\\f1a4\"}/*!@.fa-stumbleupon-circle:before*/.fa-stumbleupon-circle.sc-mge-query:before{content:\"\\f1a3\"}/*!@.fa-subscript:before*/.fa-subscript.sc-mge-query:before{content:\"\\f12c\"}/*!@.fa-subway:before*/.fa-subway.sc-mge-query:before{content:\"\\f239\"}/*!@.fa-suitcase:before*/.fa-suitcase.sc-mge-query:before{content:\"\\f0f2\"}/*!@.fa-suitcase-rolling:before*/.fa-suitcase-rolling.sc-mge-query:before{content:\"\\f5c1\"}/*!@.fa-sun:before*/.fa-sun.sc-mge-query:before{content:\"\\f185\"}/*!@.fa-superpowers:before*/.fa-superpowers.sc-mge-query:before{content:\"\\f2dd\"}/*!@.fa-superscript:before*/.fa-superscript.sc-mge-query:before{content:\"\\f12b\"}/*!@.fa-supple:before*/.fa-supple.sc-mge-query:before{content:\"\\f3f9\"}/*!@.fa-surprise:before*/.fa-surprise.sc-mge-query:before{content:\"\\f5c2\"}/*!@.fa-suse:before*/.fa-suse.sc-mge-query:before{content:\"\\f7d6\"}/*!@.fa-swatchbook:before*/.fa-swatchbook.sc-mge-query:before{content:\"\\f5c3\"}/*!@.fa-swift:before*/.fa-swift.sc-mge-query:before{content:\"\\f8e1\"}/*!@.fa-swimmer:before*/.fa-swimmer.sc-mge-query:before{content:\"\\f5c4\"}/*!@.fa-swimming-pool:before*/.fa-swimming-pool.sc-mge-query:before{content:\"\\f5c5\"}/*!@.fa-symfony:before*/.fa-symfony.sc-mge-query:before{content:\"\\f83d\"}/*!@.fa-synagogue:before*/.fa-synagogue.sc-mge-query:before{content:\"\\f69b\"}/*!@.fa-sync:before*/.fa-sync.sc-mge-query:before{content:\"\\f021\"}/*!@.fa-sync-alt:before*/.fa-sync-alt.sc-mge-query:before{content:\"\\f2f1\"}/*!@.fa-syringe:before*/.fa-syringe.sc-mge-query:before{content:\"\\f48e\"}/*!@.fa-table:before*/.fa-table.sc-mge-query:before{content:\"\\f0ce\"}/*!@.fa-table-tennis:before*/.fa-table-tennis.sc-mge-query:before{content:\"\\f45d\"}/*!@.fa-tablet:before*/.fa-tablet.sc-mge-query:before{content:\"\\f10a\"}/*!@.fa-tablet-alt:before*/.fa-tablet-alt.sc-mge-query:before{content:\"\\f3fa\"}/*!@.fa-tablets:before*/.fa-tablets.sc-mge-query:before{content:\"\\f490\"}/*!@.fa-tachometer-alt:before*/.fa-tachometer-alt.sc-mge-query:before{content:\"\\f3fd\"}/*!@.fa-tag:before*/.fa-tag.sc-mge-query:before{content:\"\\f02b\"}/*!@.fa-tags:before*/.fa-tags.sc-mge-query:before{content:\"\\f02c\"}/*!@.fa-tape:before*/.fa-tape.sc-mge-query:before{content:\"\\f4db\"}/*!@.fa-tasks:before*/.fa-tasks.sc-mge-query:before{content:\"\\f0ae\"}/*!@.fa-taxi:before*/.fa-taxi.sc-mge-query:before{content:\"\\f1ba\"}/*!@.fa-teamspeak:before*/.fa-teamspeak.sc-mge-query:before{content:\"\\f4f9\"}/*!@.fa-teeth:before*/.fa-teeth.sc-mge-query:before{content:\"\\f62e\"}/*!@.fa-teeth-open:before*/.fa-teeth-open.sc-mge-query:before{content:\"\\f62f\"}/*!@.fa-telegram:before*/.fa-telegram.sc-mge-query:before{content:\"\\f2c6\"}/*!@.fa-telegram-plane:before*/.fa-telegram-plane.sc-mge-query:before{content:\"\\f3fe\"}/*!@.fa-temperature-high:before*/.fa-temperature-high.sc-mge-query:before{content:\"\\f769\"}/*!@.fa-temperature-low:before*/.fa-temperature-low.sc-mge-query:before{content:\"\\f76b\"}/*!@.fa-tencent-weibo:before*/.fa-tencent-weibo.sc-mge-query:before{content:\"\\f1d5\"}/*!@.fa-tenge:before*/.fa-tenge.sc-mge-query:before{content:\"\\f7d7\"}/*!@.fa-terminal:before*/.fa-terminal.sc-mge-query:before{content:\"\\f120\"}/*!@.fa-text-height:before*/.fa-text-height.sc-mge-query:before{content:\"\\f034\"}/*!@.fa-text-width:before*/.fa-text-width.sc-mge-query:before{content:\"\\f035\"}/*!@.fa-th:before*/.fa-th.sc-mge-query:before{content:\"\\f00a\"}/*!@.fa-th-large:before*/.fa-th-large.sc-mge-query:before{content:\"\\f009\"}/*!@.fa-th-list:before*/.fa-th-list.sc-mge-query:before{content:\"\\f00b\"}/*!@.fa-the-red-yeti:before*/.fa-the-red-yeti.sc-mge-query:before{content:\"\\f69d\"}/*!@.fa-theater-masks:before*/.fa-theater-masks.sc-mge-query:before{content:\"\\f630\"}/*!@.fa-themeco:before*/.fa-themeco.sc-mge-query:before{content:\"\\f5c6\"}/*!@.fa-themeisle:before*/.fa-themeisle.sc-mge-query:before{content:\"\\f2b2\"}/*!@.fa-thermometer:before*/.fa-thermometer.sc-mge-query:before{content:\"\\f491\"}/*!@.fa-thermometer-empty:before*/.fa-thermometer-empty.sc-mge-query:before{content:\"\\f2cb\"}/*!@.fa-thermometer-full:before*/.fa-thermometer-full.sc-mge-query:before{content:\"\\f2c7\"}/*!@.fa-thermometer-half:before*/.fa-thermometer-half.sc-mge-query:before{content:\"\\f2c9\"}/*!@.fa-thermometer-quarter:before*/.fa-thermometer-quarter.sc-mge-query:before{content:\"\\f2ca\"}/*!@.fa-thermometer-three-quarters:before*/.fa-thermometer-three-quarters.sc-mge-query:before{content:\"\\f2c8\"}/*!@.fa-think-peaks:before*/.fa-think-peaks.sc-mge-query:before{content:\"\\f731\"}/*!@.fa-thumbs-down:before*/.fa-thumbs-down.sc-mge-query:before{content:\"\\f165\"}/*!@.fa-thumbs-up:before*/.fa-thumbs-up.sc-mge-query:before{content:\"\\f164\"}/*!@.fa-thumbtack:before*/.fa-thumbtack.sc-mge-query:before{content:\"\\f08d\"}/*!@.fa-ticket-alt:before*/.fa-ticket-alt.sc-mge-query:before{content:\"\\f3ff\"}/*!@.fa-tiktok:before*/.fa-tiktok.sc-mge-query:before{content:\"\\e07b\"}/*!@.fa-times:before*/.fa-times.sc-mge-query:before{content:\"\\f00d\"}/*!@.fa-times-circle:before*/.fa-times-circle.sc-mge-query:before{content:\"\\f057\"}/*!@.fa-tint:before*/.fa-tint.sc-mge-query:before{content:\"\\f043\"}/*!@.fa-tint-slash:before*/.fa-tint-slash.sc-mge-query:before{content:\"\\f5c7\"}/*!@.fa-tired:before*/.fa-tired.sc-mge-query:before{content:\"\\f5c8\"}/*!@.fa-toggle-off:before*/.fa-toggle-off.sc-mge-query:before{content:\"\\f204\"}/*!@.fa-toggle-on:before*/.fa-toggle-on.sc-mge-query:before{content:\"\\f205\"}/*!@.fa-toilet:before*/.fa-toilet.sc-mge-query:before{content:\"\\f7d8\"}/*!@.fa-toilet-paper:before*/.fa-toilet-paper.sc-mge-query:before{content:\"\\f71e\"}/*!@.fa-toilet-paper-slash:before*/.fa-toilet-paper-slash.sc-mge-query:before{content:\"\\e072\"}/*!@.fa-toolbox:before*/.fa-toolbox.sc-mge-query:before{content:\"\\f552\"}/*!@.fa-tools:before*/.fa-tools.sc-mge-query:before{content:\"\\f7d9\"}/*!@.fa-tooth:before*/.fa-tooth.sc-mge-query:before{content:\"\\f5c9\"}/*!@.fa-torah:before*/.fa-torah.sc-mge-query:before{content:\"\\f6a0\"}/*!@.fa-torii-gate:before*/.fa-torii-gate.sc-mge-query:before{content:\"\\f6a1\"}/*!@.fa-tractor:before*/.fa-tractor.sc-mge-query:before{content:\"\\f722\"}/*!@.fa-trade-federation:before*/.fa-trade-federation.sc-mge-query:before{content:\"\\f513\"}/*!@.fa-trademark:before*/.fa-trademark.sc-mge-query:before{content:\"\\f25c\"}/*!@.fa-traffic-light:before*/.fa-traffic-light.sc-mge-query:before{content:\"\\f637\"}/*!@.fa-trailer:before*/.fa-trailer.sc-mge-query:before{content:\"\\e041\"}/*!@.fa-train:before*/.fa-train.sc-mge-query:before{content:\"\\f238\"}/*!@.fa-tram:before*/.fa-tram.sc-mge-query:before{content:\"\\f7da\"}/*!@.fa-transgender:before*/.fa-transgender.sc-mge-query:before{content:\"\\f224\"}/*!@.fa-transgender-alt:before*/.fa-transgender-alt.sc-mge-query:before{content:\"\\f225\"}/*!@.fa-trash:before*/.fa-trash.sc-mge-query:before{content:\"\\f1f8\"}/*!@.fa-trash-alt:before*/.fa-trash-alt.sc-mge-query:before{content:\"\\f2ed\"}/*!@.fa-trash-restore:before*/.fa-trash-restore.sc-mge-query:before{content:\"\\f829\"}/*!@.fa-trash-restore-alt:before*/.fa-trash-restore-alt.sc-mge-query:before{content:\"\\f82a\"}/*!@.fa-tree:before*/.fa-tree.sc-mge-query:before{content:\"\\f1bb\"}/*!@.fa-trello:before*/.fa-trello.sc-mge-query:before{content:\"\\f181\"}/*!@.fa-tripadvisor:before*/.fa-tripadvisor.sc-mge-query:before{content:\"\\f262\"}/*!@.fa-trophy:before*/.fa-trophy.sc-mge-query:before{content:\"\\f091\"}/*!@.fa-truck:before*/.fa-truck.sc-mge-query:before{content:\"\\f0d1\"}/*!@.fa-truck-loading:before*/.fa-truck-loading.sc-mge-query:before{content:\"\\f4de\"}/*!@.fa-truck-monster:before*/.fa-truck-monster.sc-mge-query:before{content:\"\\f63b\"}/*!@.fa-truck-moving:before*/.fa-truck-moving.sc-mge-query:before{content:\"\\f4df\"}/*!@.fa-truck-pickup:before*/.fa-truck-pickup.sc-mge-query:before{content:\"\\f63c\"}/*!@.fa-tshirt:before*/.fa-tshirt.sc-mge-query:before{content:\"\\f553\"}/*!@.fa-tty:before*/.fa-tty.sc-mge-query:before{content:\"\\f1e4\"}/*!@.fa-tumblr:before*/.fa-tumblr.sc-mge-query:before{content:\"\\f173\"}/*!@.fa-tumblr-square:before*/.fa-tumblr-square.sc-mge-query:before{content:\"\\f174\"}/*!@.fa-tv:before*/.fa-tv.sc-mge-query:before{content:\"\\f26c\"}/*!@.fa-twitch:before*/.fa-twitch.sc-mge-query:before{content:\"\\f1e8\"}/*!@.fa-twitter:before*/.fa-twitter.sc-mge-query:before{content:\"\\f099\"}/*!@.fa-twitter-square:before*/.fa-twitter-square.sc-mge-query:before{content:\"\\f081\"}/*!@.fa-typo3:before*/.fa-typo3.sc-mge-query:before{content:\"\\f42b\"}/*!@.fa-uber:before*/.fa-uber.sc-mge-query:before{content:\"\\f402\"}/*!@.fa-ubuntu:before*/.fa-ubuntu.sc-mge-query:before{content:\"\\f7df\"}/*!@.fa-uikit:before*/.fa-uikit.sc-mge-query:before{content:\"\\f403\"}/*!@.fa-umbraco:before*/.fa-umbraco.sc-mge-query:before{content:\"\\f8e8\"}/*!@.fa-umbrella:before*/.fa-umbrella.sc-mge-query:before{content:\"\\f0e9\"}/*!@.fa-umbrella-beach:before*/.fa-umbrella-beach.sc-mge-query:before{content:\"\\f5ca\"}/*!@.fa-uncharted:before*/.fa-uncharted.sc-mge-query:before{content:\"\\e084\"}/*!@.fa-underline:before*/.fa-underline.sc-mge-query:before{content:\"\\f0cd\"}/*!@.fa-undo:before*/.fa-undo.sc-mge-query:before{content:\"\\f0e2\"}/*!@.fa-undo-alt:before*/.fa-undo-alt.sc-mge-query:before{content:\"\\f2ea\"}/*!@.fa-uniregistry:before*/.fa-uniregistry.sc-mge-query:before{content:\"\\f404\"}/*!@.fa-unity:before*/.fa-unity.sc-mge-query:before{content:\"\\e049\"}/*!@.fa-universal-access:before*/.fa-universal-access.sc-mge-query:before{content:\"\\f29a\"}/*!@.fa-university:before*/.fa-university.sc-mge-query:before{content:\"\\f19c\"}/*!@.fa-unlink:before*/.fa-unlink.sc-mge-query:before{content:\"\\f127\"}/*!@.fa-unlock:before*/.fa-unlock.sc-mge-query:before{content:\"\\f09c\"}/*!@.fa-unlock-alt:before*/.fa-unlock-alt.sc-mge-query:before{content:\"\\f13e\"}/*!@.fa-unsplash:before*/.fa-unsplash.sc-mge-query:before{content:\"\\e07c\"}/*!@.fa-untappd:before*/.fa-untappd.sc-mge-query:before{content:\"\\f405\"}/*!@.fa-upload:before*/.fa-upload.sc-mge-query:before{content:\"\\f093\"}/*!@.fa-ups:before*/.fa-ups.sc-mge-query:before{content:\"\\f7e0\"}/*!@.fa-usb:before*/.fa-usb.sc-mge-query:before{content:\"\\f287\"}/*!@.fa-user:before*/.fa-user.sc-mge-query:before{content:\"\\f007\"}/*!@.fa-user-alt:before*/.fa-user-alt.sc-mge-query:before{content:\"\\f406\"}/*!@.fa-user-alt-slash:before*/.fa-user-alt-slash.sc-mge-query:before{content:\"\\f4fa\"}/*!@.fa-user-astronaut:before*/.fa-user-astronaut.sc-mge-query:before{content:\"\\f4fb\"}/*!@.fa-user-check:before*/.fa-user-check.sc-mge-query:before{content:\"\\f4fc\"}/*!@.fa-user-circle:before*/.fa-user-circle.sc-mge-query:before{content:\"\\f2bd\"}/*!@.fa-user-clock:before*/.fa-user-clock.sc-mge-query:before{content:\"\\f4fd\"}/*!@.fa-user-cog:before*/.fa-user-cog.sc-mge-query:before{content:\"\\f4fe\"}/*!@.fa-user-edit:before*/.fa-user-edit.sc-mge-query:before{content:\"\\f4ff\"}/*!@.fa-user-friends:before*/.fa-user-friends.sc-mge-query:before{content:\"\\f500\"}/*!@.fa-user-graduate:before*/.fa-user-graduate.sc-mge-query:before{content:\"\\f501\"}/*!@.fa-user-injured:before*/.fa-user-injured.sc-mge-query:before{content:\"\\f728\"}/*!@.fa-user-lock:before*/.fa-user-lock.sc-mge-query:before{content:\"\\f502\"}/*!@.fa-user-md:before*/.fa-user-md.sc-mge-query:before{content:\"\\f0f0\"}/*!@.fa-user-minus:before*/.fa-user-minus.sc-mge-query:before{content:\"\\f503\"}/*!@.fa-user-ninja:before*/.fa-user-ninja.sc-mge-query:before{content:\"\\f504\"}/*!@.fa-user-nurse:before*/.fa-user-nurse.sc-mge-query:before{content:\"\\f82f\"}/*!@.fa-user-plus:before*/.fa-user-plus.sc-mge-query:before{content:\"\\f234\"}/*!@.fa-user-secret:before*/.fa-user-secret.sc-mge-query:before{content:\"\\f21b\"}/*!@.fa-user-shield:before*/.fa-user-shield.sc-mge-query:before{content:\"\\f505\"}/*!@.fa-user-slash:before*/.fa-user-slash.sc-mge-query:before{content:\"\\f506\"}/*!@.fa-user-tag:before*/.fa-user-tag.sc-mge-query:before{content:\"\\f507\"}/*!@.fa-user-tie:before*/.fa-user-tie.sc-mge-query:before{content:\"\\f508\"}/*!@.fa-user-times:before*/.fa-user-times.sc-mge-query:before{content:\"\\f235\"}/*!@.fa-users:before*/.fa-users.sc-mge-query:before{content:\"\\f0c0\"}/*!@.fa-users-cog:before*/.fa-users-cog.sc-mge-query:before{content:\"\\f509\"}/*!@.fa-users-slash:before*/.fa-users-slash.sc-mge-query:before{content:\"\\e073\"}/*!@.fa-usps:before*/.fa-usps.sc-mge-query:before{content:\"\\f7e1\"}/*!@.fa-ussunnah:before*/.fa-ussunnah.sc-mge-query:before{content:\"\\f407\"}/*!@.fa-utensil-spoon:before*/.fa-utensil-spoon.sc-mge-query:before{content:\"\\f2e5\"}/*!@.fa-utensils:before*/.fa-utensils.sc-mge-query:before{content:\"\\f2e7\"}/*!@.fa-vaadin:before*/.fa-vaadin.sc-mge-query:before{content:\"\\f408\"}/*!@.fa-vector-square:before*/.fa-vector-square.sc-mge-query:before{content:\"\\f5cb\"}/*!@.fa-venus:before*/.fa-venus.sc-mge-query:before{content:\"\\f221\"}/*!@.fa-venus-double:before*/.fa-venus-double.sc-mge-query:before{content:\"\\f226\"}/*!@.fa-venus-mars:before*/.fa-venus-mars.sc-mge-query:before{content:\"\\f228\"}/*!@.fa-vest:before*/.fa-vest.sc-mge-query:before{content:\"\\e085\"}/*!@.fa-vest-patches:before*/.fa-vest-patches.sc-mge-query:before{content:\"\\e086\"}/*!@.fa-viacoin:before*/.fa-viacoin.sc-mge-query:before{content:\"\\f237\"}/*!@.fa-viadeo:before*/.fa-viadeo.sc-mge-query:before{content:\"\\f2a9\"}/*!@.fa-viadeo-square:before*/.fa-viadeo-square.sc-mge-query:before{content:\"\\f2aa\"}/*!@.fa-vial:before*/.fa-vial.sc-mge-query:before{content:\"\\f492\"}/*!@.fa-vials:before*/.fa-vials.sc-mge-query:before{content:\"\\f493\"}/*!@.fa-viber:before*/.fa-viber.sc-mge-query:before{content:\"\\f409\"}/*!@.fa-video:before*/.fa-video.sc-mge-query:before{content:\"\\f03d\"}/*!@.fa-video-slash:before*/.fa-video-slash.sc-mge-query:before{content:\"\\f4e2\"}/*!@.fa-vihara:before*/.fa-vihara.sc-mge-query:before{content:\"\\f6a7\"}/*!@.fa-vimeo:before*/.fa-vimeo.sc-mge-query:before{content:\"\\f40a\"}/*!@.fa-vimeo-square:before*/.fa-vimeo-square.sc-mge-query:before{content:\"\\f194\"}/*!@.fa-vimeo-v:before*/.fa-vimeo-v.sc-mge-query:before{content:\"\\f27d\"}/*!@.fa-vine:before*/.fa-vine.sc-mge-query:before{content:\"\\f1ca\"}/*!@.fa-virus:before*/.fa-virus.sc-mge-query:before{content:\"\\e074\"}/*!@.fa-virus-slash:before*/.fa-virus-slash.sc-mge-query:before{content:\"\\e075\"}/*!@.fa-viruses:before*/.fa-viruses.sc-mge-query:before{content:\"\\e076\"}/*!@.fa-vk:before*/.fa-vk.sc-mge-query:before{content:\"\\f189\"}/*!@.fa-vnv:before*/.fa-vnv.sc-mge-query:before{content:\"\\f40b\"}/*!@.fa-voicemail:before*/.fa-voicemail.sc-mge-query:before{content:\"\\f897\"}/*!@.fa-volleyball-ball:before*/.fa-volleyball-ball.sc-mge-query:before{content:\"\\f45f\"}/*!@.fa-volume-down:before*/.fa-volume-down.sc-mge-query:before{content:\"\\f027\"}/*!@.fa-volume-mute:before*/.fa-volume-mute.sc-mge-query:before{content:\"\\f6a9\"}/*!@.fa-volume-off:before*/.fa-volume-off.sc-mge-query:before{content:\"\\f026\"}/*!@.fa-volume-up:before*/.fa-volume-up.sc-mge-query:before{content:\"\\f028\"}/*!@.fa-vote-yea:before*/.fa-vote-yea.sc-mge-query:before{content:\"\\f772\"}/*!@.fa-vr-cardboard:before*/.fa-vr-cardboard.sc-mge-query:before{content:\"\\f729\"}/*!@.fa-vuejs:before*/.fa-vuejs.sc-mge-query:before{content:\"\\f41f\"}/*!@.fa-walking:before*/.fa-walking.sc-mge-query:before{content:\"\\f554\"}/*!@.fa-wallet:before*/.fa-wallet.sc-mge-query:before{content:\"\\f555\"}/*!@.fa-warehouse:before*/.fa-warehouse.sc-mge-query:before{content:\"\\f494\"}/*!@.fa-watchman-monitoring:before*/.fa-watchman-monitoring.sc-mge-query:before{content:\"\\e087\"}/*!@.fa-water:before*/.fa-water.sc-mge-query:before{content:\"\\f773\"}/*!@.fa-wave-square:before*/.fa-wave-square.sc-mge-query:before{content:\"\\f83e\"}/*!@.fa-waze:before*/.fa-waze.sc-mge-query:before{content:\"\\f83f\"}/*!@.fa-weebly:before*/.fa-weebly.sc-mge-query:before{content:\"\\f5cc\"}/*!@.fa-weibo:before*/.fa-weibo.sc-mge-query:before{content:\"\\f18a\"}/*!@.fa-weight:before*/.fa-weight.sc-mge-query:before{content:\"\\f496\"}/*!@.fa-weight-hanging:before*/.fa-weight-hanging.sc-mge-query:before{content:\"\\f5cd\"}/*!@.fa-weixin:before*/.fa-weixin.sc-mge-query:before{content:\"\\f1d7\"}/*!@.fa-whatsapp:before*/.fa-whatsapp.sc-mge-query:before{content:\"\\f232\"}/*!@.fa-whatsapp-square:before*/.fa-whatsapp-square.sc-mge-query:before{content:\"\\f40c\"}/*!@.fa-wheelchair:before*/.fa-wheelchair.sc-mge-query:before{content:\"\\f193\"}/*!@.fa-whmcs:before*/.fa-whmcs.sc-mge-query:before{content:\"\\f40d\"}/*!@.fa-wifi:before*/.fa-wifi.sc-mge-query:before{content:\"\\f1eb\"}/*!@.fa-wikipedia-w:before*/.fa-wikipedia-w.sc-mge-query:before{content:\"\\f266\"}/*!@.fa-wind:before*/.fa-wind.sc-mge-query:before{content:\"\\f72e\"}/*!@.fa-window-close:before*/.fa-window-close.sc-mge-query:before{content:\"\\f410\"}/*!@.fa-window-maximize:before*/.fa-window-maximize.sc-mge-query:before{content:\"\\f2d0\"}/*!@.fa-window-minimize:before*/.fa-window-minimize.sc-mge-query:before{content:\"\\f2d1\"}/*!@.fa-window-restore:before*/.fa-window-restore.sc-mge-query:before{content:\"\\f2d2\"}/*!@.fa-windows:before*/.fa-windows.sc-mge-query:before{content:\"\\f17a\"}/*!@.fa-wine-bottle:before*/.fa-wine-bottle.sc-mge-query:before{content:\"\\f72f\"}/*!@.fa-wine-glass:before*/.fa-wine-glass.sc-mge-query:before{content:\"\\f4e3\"}/*!@.fa-wine-glass-alt:before*/.fa-wine-glass-alt.sc-mge-query:before{content:\"\\f5ce\"}/*!@.fa-wix:before*/.fa-wix.sc-mge-query:before{content:\"\\f5cf\"}/*!@.fa-wizards-of-the-coast:before*/.fa-wizards-of-the-coast.sc-mge-query:before{content:\"\\f730\"}/*!@.fa-wodu:before*/.fa-wodu.sc-mge-query:before{content:\"\\e088\"}/*!@.fa-wolf-pack-battalion:before*/.fa-wolf-pack-battalion.sc-mge-query:before{content:\"\\f514\"}/*!@.fa-won-sign:before*/.fa-won-sign.sc-mge-query:before{content:\"\\f159\"}/*!@.fa-wordpress:before*/.fa-wordpress.sc-mge-query:before{content:\"\\f19a\"}/*!@.fa-wordpress-simple:before*/.fa-wordpress-simple.sc-mge-query:before{content:\"\\f411\"}/*!@.fa-wpbeginner:before*/.fa-wpbeginner.sc-mge-query:before{content:\"\\f297\"}/*!@.fa-wpexplorer:before*/.fa-wpexplorer.sc-mge-query:before{content:\"\\f2de\"}/*!@.fa-wpforms:before*/.fa-wpforms.sc-mge-query:before{content:\"\\f298\"}/*!@.fa-wpressr:before*/.fa-wpressr.sc-mge-query:before{content:\"\\f3e4\"}/*!@.fa-wrench:before*/.fa-wrench.sc-mge-query:before{content:\"\\f0ad\"}/*!@.fa-x-ray:before*/.fa-x-ray.sc-mge-query:before{content:\"\\f497\"}/*!@.fa-xbox:before*/.fa-xbox.sc-mge-query:before{content:\"\\f412\"}/*!@.fa-xing:before*/.fa-xing.sc-mge-query:before{content:\"\\f168\"}/*!@.fa-xing-square:before*/.fa-xing-square.sc-mge-query:before{content:\"\\f169\"}/*!@.fa-y-combinator:before*/.fa-y-combinator.sc-mge-query:before{content:\"\\f23b\"}/*!@.fa-yahoo:before*/.fa-yahoo.sc-mge-query:before{content:\"\\f19e\"}/*!@.fa-yammer:before*/.fa-yammer.sc-mge-query:before{content:\"\\f840\"}/*!@.fa-yandex:before*/.fa-yandex.sc-mge-query:before{content:\"\\f413\"}/*!@.fa-yandex-international:before*/.fa-yandex-international.sc-mge-query:before{content:\"\\f414\"}/*!@.fa-yarn:before*/.fa-yarn.sc-mge-query:before{content:\"\\f7e3\"}/*!@.fa-yelp:before*/.fa-yelp.sc-mge-query:before{content:\"\\f1e9\"}/*!@.fa-yen-sign:before*/.fa-yen-sign.sc-mge-query:before{content:\"\\f157\"}/*!@.fa-yin-yang:before*/.fa-yin-yang.sc-mge-query:before{content:\"\\f6ad\"}/*!@.fa-yoast:before*/.fa-yoast.sc-mge-query:before{content:\"\\f2b1\"}/*!@.fa-youtube:before*/.fa-youtube.sc-mge-query:before{content:\"\\f167\"}/*!@.fa-youtube-square:before*/.fa-youtube-square.sc-mge-query:before{content:\"\\f431\"}/*!@.fa-zhihu:before*/.fa-zhihu.sc-mge-query:before{content:\"\\f63f\"}/*!@.sr-only*/.sr-only.sc-mge-query{border:0;clip:rect(0, 0, 0, 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}/*!@.sr-only-focusable:active, .sr-only-focusable:focus*/.sr-only-focusable.sc-mge-query:active,.sr-only-focusable.sc-mge-query:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}@font-face{font-family:'Font Awesome 5 Brands';font-style:normal;font-weight:400;font-display:block;src:url(\"../webfonts/fa-brands-400.eot\");src:url(\"../webfonts/fa-brands-400.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-brands-400.woff2\") format(\"woff2\"), url(\"../webfonts/fa-brands-400.woff\") format(\"woff\"), url(\"../webfonts/fa-brands-400.ttf\") format(\"truetype\"), url(\"../webfonts/fa-brands-400.svg#fontawesome\") format(\"svg\")}/*!@.fab*/.fab.sc-mge-query{font-family:'Font Awesome 5 Brands';font-weight:400}@font-face{font-family:'Font Awesome 5 Free';font-style:normal;font-weight:400;font-display:block;src:url(\"../webfonts/fa-regular-400.eot\");src:url(\"../webfonts/fa-regular-400.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-regular-400.woff2\") format(\"woff2\"), url(\"../webfonts/fa-regular-400.woff\") format(\"woff\"), url(\"../webfonts/fa-regular-400.ttf\") format(\"truetype\"), url(\"../webfonts/fa-regular-400.svg#fontawesome\") format(\"svg\")}/*!@.far*/.far.sc-mge-query{font-family:'Font Awesome 5 Free';font-weight:400}@font-face{font-family:'Font Awesome 5 Free';font-style:normal;font-weight:900;font-display:block;src:url(\"../webfonts/fa-solid-900.eot\");src:url(\"../webfonts/fa-solid-900.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-solid-900.woff2\") format(\"woff2\"), url(\"../webfonts/fa-solid-900.woff\") format(\"woff\"), url(\"../webfonts/fa-solid-900.ttf\") format(\"truetype\"), url(\"../webfonts/fa-solid-900.svg#fontawesome\") format(\"svg\")}/*!@.fa,\n.fas*/.fa.sc-mge-query,.fas.sc-mge-query{font-family:'Font Awesome 5 Free';font-weight:900}";

// import { readdir } from 'fs/promises';
// import { readdir } from 'fs/promises';
class MgeQuery {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.width = 400;
    this.height = 400;
    // @Prop() data: any;
    this.data = [];
    this.loadData = () => {
      let value = this.element.shadowRoot.querySelector("#selectQuery").value;
      const selectedData = this.data.filter(d => d.label == value)[0].data;
      selectAll('mge-dashboard').remove();
      this.element.shadowRoot.querySelector('#lblMensagem').innerHTML = "Co-authorship Network of I3S Laboratory from 2007 to 2020 containing " +
        selectedData.info.qtNodos + ' nodes and ' + selectedData.info.qtArestas + ' edges';
      state._data = selectedData;
      select('#viewArea').append("mge-dashboard")
        // .attr("data", "databaseUFRGS2004")
        .attr("type-div", "mge-nodelink")
        .attr("id-template", "filter-content-iris")
        .attr("title", "Michel Riveill's 23  connections  papers")
        .attr("x", 0)
        .attr("y", 0);
    };
  }
  async setData(_) {
    this.data = _;
  }
  async getData() {
    //listing all files using forEach
    // fs.readdir(this.datadir, (err, files) => {
    //     let data = [];
    //     //handling error
    //     if (err) {
    //         return console.log('Unable to scan directory: ' + err);
    //     }
    //     //listing all files using forEach
    //     files.forEach(function (file) {
    //         // Do whatever you want to do with the file
    //         let file_bis = file.split('.');
    //         if (file_bis[1] != 'json') return;
    //         let rawdata = fs.readFileSync(this.datadir + file);
    //         try {
    //             this.data.push({
    //                 'label': file_bis[0], 
    //                 'data': JSON.parse(rawdata.toString())
    //             })
    //         } catch(e) {
    //             console.log(file, e); // error in the above string (in this case, yes)!
    //         }
    //       })
    // })
  }
  // buildChart(idDiv, svg){ 
  //   // console.log(this._chart);
  //   // this._chart().data(this.chartData);
  // }
  componentDidRender() {
    // this.getData();
    let selectQuery = select(this.element.shadowRoot.querySelector("#selectQuery"))
      .attr("width", this.width)
      .attr("height", this.height);
    selectQuery.selectAll('option')
      .data(this.data)
      .enter()
      .append('option')
      .attr('value', d => d.label)
      .text(d => d.label);
    selectAll("input[id*='type']")
      .on('change', function () {
      const _this = this;
      selectAll(this.element.shadowRoot.querySelector("input[id*='type']"))
        .property('checked', function () { return this == _this ? true : false; });
    });
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { id: "toolBar" }, hAsync("form", { id: "query" }, hAsync("label", { id: "titulo" }, "MGExplorer"), hAsync("label", null, "Choose a dataset:"), hAsync("select", { id: "selectQuery" }), hAsync("i", { class: "fas fa-arrow-circle-right ", onClick: this.loadData }), "or load your own", hAsync("span", null, hAsync("i", { class: "fas fa-upload" })))), hAsync("label", { id: "lblMensagem" })));
  }
  get element() { return getElement(this); }
  static get style() { return mgeQueryCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "mge-query",
    "$members$": {
      "width": [2],
      "height": [2],
      "data": [16],
      "setData": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const mgeViewCss = "/*!@:host*/.sc-mge-view-h{display:block}/*!@**/*.sc-mge-view{box-sizing:border-box}/*!@.dot*/.dot.sc-mge-view{height:12px;width:12px;background-color:#bbb;border-radius:50%;display:inline-block}/*!@.container*/.container.sc-mge-view{border:1px solid #3399FF;border-top-left-radius:4px;border-top-right-radius:4px;width:400px;height:400px}/*!@.top*/.top.sc-mge-view{padding:2px;background:#B0C4DE;display:flex;justify-content:flex-end;align-items:center;cursor:move}/*!@.content*/.content.sc-mge-view{background-color:#E0FFFF}/*!@.dropdown-menu*//*!@.topnav a*/.topnav.sc-mge-view a.sc-mge-view{float:left;color:#f2f2f2;text-align:center;padding:14px 16px;text-decoration:none;font-size:17px}/*!@.topnav a:hover*/.topnav.sc-mge-view a.sc-mge-view:hover{background-color:#ddd;color:black}/*!@.topnav a.active*/.topnav.sc-mge-view a.active.sc-mge-view{background-color:#4caf50;color:white}/*!@.top span.title*/.top.sc-mge-view span.title.sc-mge-view{flex:1;margin-left:8px;fill:black;font-family:sans-serif;font-size:11px;font-weight:bold}/*!@.filter-item*/.filter-item.sc-mge-view{margin-top:5px}/*!@.filter-panel*/.filter-panel.sc-mge-view{height:15%}/*!@.resizable-helper*/.resizable-helper.sc-mge-view{position:absolute;z-index:90;border:1px dotted blue}/*!@.view-view*/.view-view.sc-mge-view{position:absolute;border:1px solid #3399FF;background-color:#e7f7ff}/*!@.view-bar*/.view-bar.sc-mge-view{position:absolute;top:0;width:100%;background-color:LightSteelBlue;cursor:move}/*!@.view-bar rect*/.view-bar.sc-mge-view rect.sc-mge-view{fill:rgba(255,153,102,0.6);cursor:pointer}/*!@.view-bar-titulo*/.view-bar-titulo.sc-mge-view{fill:black;font-family:sans-serif;font-size:11px;font-weight:bold}/*!@.view-bar-history*/.view-bar-history.sc-mge-view{fill:white;font-family:sans-serif;font-size:10px;font-weight:bold}/*!@.view-bar rect:hover*/.view-bar.sc-mge-view rect.sc-mge-view:hover{stroke:black;stroke-width:0.5}/*!@.view-panel*/.view-panel.sc-mge-view{position:absolute;z-index:90;background-color:rgba(255,153,102,0.6);border:1px solid rgb(255,120,102)}/*!@.view-chart*/.view-chart.sc-mge-view{position:absolute;width:100%}/*!@.DS-popup div*/.DS-popup.sc-mge-view div.sc-mge-view{padding:3px 5px 3px 5px}/*!@.DS-popup div:hover*/.DS-popup.sc-mge-view div.sc-mge-view:hover{background-color:#FFF}/*!@.fa,\n.fas,\n.far,\n.fal,\n.fad,\n.fab*/.fa.sc-mge-view,.fas.sc-mge-view,.far.sc-mge-view,.fal.sc-mge-view,.fad.sc-mge-view,.fab.sc-mge-view{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-block;font-style:normal;font-variant:normal;text-rendering:auto;line-height:1}/*!@.fa-lg*/.fa-lg.sc-mge-view{font-size:1.33333em;line-height:0.75em;vertical-align:-.0667em}/*!@.fa-xs*/.fa-xs.sc-mge-view{font-size:.75em}/*!@.fa-sm*/.fa-sm.sc-mge-view{font-size:.875em}/*!@.fa-1x*/.fa-1x.sc-mge-view{font-size:1em}/*!@.fa-2x*/.fa-2x.sc-mge-view{font-size:2em}/*!@.fa-3x*/.fa-3x.sc-mge-view{font-size:3em}/*!@.fa-4x*/.fa-4x.sc-mge-view{font-size:4em}/*!@.fa-5x*/.fa-5x.sc-mge-view{font-size:5em}/*!@.fa-6x*/.fa-6x.sc-mge-view{font-size:6em}/*!@.fa-7x*/.fa-7x.sc-mge-view{font-size:7em}/*!@.fa-8x*/.fa-8x.sc-mge-view{font-size:8em}/*!@.fa-9x*/.fa-9x.sc-mge-view{font-size:9em}/*!@.fa-10x*/.fa-10x.sc-mge-view{font-size:10em}/*!@.fa-fw*/.fa-fw.sc-mge-view{text-align:center;width:1.25em}/*!@.fa-ul*/.fa-ul.sc-mge-view{list-style-type:none;margin-left:2.5em;padding-left:0}/*!@.fa-ul > li*/.fa-ul.sc-mge-view>li.sc-mge-view{position:relative}/*!@.fa-li*/.fa-li.sc-mge-view{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}/*!@.fa-border*/.fa-border.sc-mge-view{border:solid 0.08em #eee;border-radius:.1em;padding:.2em .25em .15em}/*!@.fa-pull-left*/.fa-pull-left.sc-mge-view{float:left}/*!@.fa-pull-right*/.fa-pull-right.sc-mge-view{float:right}/*!@.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left*/.fa.fa-pull-left.sc-mge-view,.fas.fa-pull-left.sc-mge-view,.far.fa-pull-left.sc-mge-view,.fal.fa-pull-left.sc-mge-view,.fab.fa-pull-left.sc-mge-view{margin-right:.3em}/*!@.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right*/.fa.fa-pull-right.sc-mge-view,.fas.fa-pull-right.sc-mge-view,.far.fa-pull-right.sc-mge-view,.fal.fa-pull-right.sc-mge-view,.fab.fa-pull-right.sc-mge-view{margin-left:.3em}/*!@.fa-spin*/.fa-spin.sc-mge-view{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}/*!@.fa-pulse*/.fa-pulse.sc-mge-view{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}/*!@.fa-rotate-90*/.fa-rotate-90.sc-mge-view{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";-webkit-transform:rotate(90deg);transform:rotate(90deg)}/*!@.fa-rotate-180*/.fa-rotate-180.sc-mge-view{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";-webkit-transform:rotate(180deg);transform:rotate(180deg)}/*!@.fa-rotate-270*/.fa-rotate-270.sc-mge-view{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";-webkit-transform:rotate(270deg);transform:rotate(270deg)}/*!@.fa-flip-horizontal*/.fa-flip-horizontal.sc-mge-view{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";-webkit-transform:scale(-1, 1);transform:scale(-1, 1)}/*!@.fa-flip-vertical*/.fa-flip-vertical.sc-mge-view{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";-webkit-transform:scale(1, -1);transform:scale(1, -1)}/*!@.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical*/.fa-flip-both.sc-mge-view,.fa-flip-horizontal.fa-flip-vertical.sc-mge-view{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";-webkit-transform:scale(-1, -1);transform:scale(-1, -1)}/*!@:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both*/.sc-mge-view:root .fa-rotate-90.sc-mge-view,.sc-mge-view:root .fa-rotate-180.sc-mge-view,.sc-mge-view:root .fa-rotate-270.sc-mge-view,.sc-mge-view:root .fa-flip-horizontal.sc-mge-view,.sc-mge-view:root .fa-flip-vertical.sc-mge-view,.sc-mge-view:root .fa-flip-both.sc-mge-view{-webkit-filter:none;filter:none}/*!@.fa-stack*/.fa-stack.sc-mge-view{display:inline-block;height:2em;line-height:2em;position:relative;vertical-align:middle;width:2.5em}/*!@.fa-stack-1x,\n.fa-stack-2x*/.fa-stack-1x.sc-mge-view,.fa-stack-2x.sc-mge-view{left:0;position:absolute;text-align:center;width:100%}/*!@.fa-stack-1x*/.fa-stack-1x.sc-mge-view{line-height:inherit}/*!@.fa-stack-2x*/.fa-stack-2x.sc-mge-view{font-size:2em}/*!@.fa-inverse*/.fa-inverse.sc-mge-view{color:#fff}/*!@.fa-500px:before*/.fa-500px.sc-mge-view:before{content:\"\\f26e\"}/*!@.fa-accessible-icon:before*/.fa-accessible-icon.sc-mge-view:before{content:\"\\f368\"}/*!@.fa-accusoft:before*/.fa-accusoft.sc-mge-view:before{content:\"\\f369\"}/*!@.fa-acquisitions-incorporated:before*/.fa-acquisitions-incorporated.sc-mge-view:before{content:\"\\f6af\"}/*!@.fa-ad:before*/.fa-ad.sc-mge-view:before{content:\"\\f641\"}/*!@.fa-address-book:before*/.fa-address-book.sc-mge-view:before{content:\"\\f2b9\"}/*!@.fa-address-card:before*/.fa-address-card.sc-mge-view:before{content:\"\\f2bb\"}/*!@.fa-adjust:before*/.fa-adjust.sc-mge-view:before{content:\"\\f042\"}/*!@.fa-adn:before*/.fa-adn.sc-mge-view:before{content:\"\\f170\"}/*!@.fa-adversal:before*/.fa-adversal.sc-mge-view:before{content:\"\\f36a\"}/*!@.fa-affiliatetheme:before*/.fa-affiliatetheme.sc-mge-view:before{content:\"\\f36b\"}/*!@.fa-air-freshener:before*/.fa-air-freshener.sc-mge-view:before{content:\"\\f5d0\"}/*!@.fa-airbnb:before*/.fa-airbnb.sc-mge-view:before{content:\"\\f834\"}/*!@.fa-algolia:before*/.fa-algolia.sc-mge-view:before{content:\"\\f36c\"}/*!@.fa-align-center:before*/.fa-align-center.sc-mge-view:before{content:\"\\f037\"}/*!@.fa-align-justify:before*/.fa-align-justify.sc-mge-view:before{content:\"\\f039\"}/*!@.fa-align-left:before*/.fa-align-left.sc-mge-view:before{content:\"\\f036\"}/*!@.fa-align-right:before*/.fa-align-right.sc-mge-view:before{content:\"\\f038\"}/*!@.fa-alipay:before*/.fa-alipay.sc-mge-view:before{content:\"\\f642\"}/*!@.fa-allergies:before*/.fa-allergies.sc-mge-view:before{content:\"\\f461\"}/*!@.fa-amazon:before*/.fa-amazon.sc-mge-view:before{content:\"\\f270\"}/*!@.fa-amazon-pay:before*/.fa-amazon-pay.sc-mge-view:before{content:\"\\f42c\"}/*!@.fa-ambulance:before*/.fa-ambulance.sc-mge-view:before{content:\"\\f0f9\"}/*!@.fa-american-sign-language-interpreting:before*/.fa-american-sign-language-interpreting.sc-mge-view:before{content:\"\\f2a3\"}/*!@.fa-amilia:before*/.fa-amilia.sc-mge-view:before{content:\"\\f36d\"}/*!@.fa-anchor:before*/.fa-anchor.sc-mge-view:before{content:\"\\f13d\"}/*!@.fa-android:before*/.fa-android.sc-mge-view:before{content:\"\\f17b\"}/*!@.fa-angellist:before*/.fa-angellist.sc-mge-view:before{content:\"\\f209\"}/*!@.fa-angle-double-down:before*/.fa-angle-double-down.sc-mge-view:before{content:\"\\f103\"}/*!@.fa-angle-double-left:before*/.fa-angle-double-left.sc-mge-view:before{content:\"\\f100\"}/*!@.fa-angle-double-right:before*/.fa-angle-double-right.sc-mge-view:before{content:\"\\f101\"}/*!@.fa-angle-double-up:before*/.fa-angle-double-up.sc-mge-view:before{content:\"\\f102\"}/*!@.fa-angle-down:before*/.fa-angle-down.sc-mge-view:before{content:\"\\f107\"}/*!@.fa-angle-left:before*/.fa-angle-left.sc-mge-view:before{content:\"\\f104\"}/*!@.fa-angle-right:before*/.fa-angle-right.sc-mge-view:before{content:\"\\f105\"}/*!@.fa-angle-up:before*/.fa-angle-up.sc-mge-view:before{content:\"\\f106\"}/*!@.fa-angry:before*/.fa-angry.sc-mge-view:before{content:\"\\f556\"}/*!@.fa-angrycreative:before*/.fa-angrycreative.sc-mge-view:before{content:\"\\f36e\"}/*!@.fa-angular:before*/.fa-angular.sc-mge-view:before{content:\"\\f420\"}/*!@.fa-ankh:before*/.fa-ankh.sc-mge-view:before{content:\"\\f644\"}/*!@.fa-app-store:before*/.fa-app-store.sc-mge-view:before{content:\"\\f36f\"}/*!@.fa-app-store-ios:before*/.fa-app-store-ios.sc-mge-view:before{content:\"\\f370\"}/*!@.fa-apper:before*/.fa-apper.sc-mge-view:before{content:\"\\f371\"}/*!@.fa-apple:before*/.fa-apple.sc-mge-view:before{content:\"\\f179\"}/*!@.fa-apple-alt:before*/.fa-apple-alt.sc-mge-view:before{content:\"\\f5d1\"}/*!@.fa-apple-pay:before*/.fa-apple-pay.sc-mge-view:before{content:\"\\f415\"}/*!@.fa-archive:before*/.fa-archive.sc-mge-view:before{content:\"\\f187\"}/*!@.fa-archway:before*/.fa-archway.sc-mge-view:before{content:\"\\f557\"}/*!@.fa-arrow-alt-circle-down:before*/.fa-arrow-alt-circle-down.sc-mge-view:before{content:\"\\f358\"}/*!@.fa-arrow-alt-circle-left:before*/.fa-arrow-alt-circle-left.sc-mge-view:before{content:\"\\f359\"}/*!@.fa-arrow-alt-circle-right:before*/.fa-arrow-alt-circle-right.sc-mge-view:before{content:\"\\f35a\"}/*!@.fa-arrow-alt-circle-up:before*/.fa-arrow-alt-circle-up.sc-mge-view:before{content:\"\\f35b\"}/*!@.fa-arrow-circle-down:before*/.fa-arrow-circle-down.sc-mge-view:before{content:\"\\f0ab\"}/*!@.fa-arrow-circle-left:before*/.fa-arrow-circle-left.sc-mge-view:before{content:\"\\f0a8\"}/*!@.fa-arrow-circle-right:before*/.fa-arrow-circle-right.sc-mge-view:before{content:\"\\f0a9\"}/*!@.fa-arrow-circle-up:before*/.fa-arrow-circle-up.sc-mge-view:before{content:\"\\f0aa\"}/*!@.fa-arrow-down:before*/.fa-arrow-down.sc-mge-view:before{content:\"\\f063\"}/*!@.fa-arrow-left:before*/.fa-arrow-left.sc-mge-view:before{content:\"\\f060\"}/*!@.fa-arrow-right:before*/.fa-arrow-right.sc-mge-view:before{content:\"\\f061\"}/*!@.fa-arrow-up:before*/.fa-arrow-up.sc-mge-view:before{content:\"\\f062\"}/*!@.fa-arrows-alt:before*/.fa-arrows-alt.sc-mge-view:before{content:\"\\f0b2\"}/*!@.fa-arrows-alt-h:before*/.fa-arrows-alt-h.sc-mge-view:before{content:\"\\f337\"}/*!@.fa-arrows-alt-v:before*/.fa-arrows-alt-v.sc-mge-view:before{content:\"\\f338\"}/*!@.fa-artstation:before*/.fa-artstation.sc-mge-view:before{content:\"\\f77a\"}/*!@.fa-assistive-listening-systems:before*/.fa-assistive-listening-systems.sc-mge-view:before{content:\"\\f2a2\"}/*!@.fa-asterisk:before*/.fa-asterisk.sc-mge-view:before{content:\"\\f069\"}/*!@.fa-asymmetrik:before*/.fa-asymmetrik.sc-mge-view:before{content:\"\\f372\"}/*!@.fa-at:before*/.fa-at.sc-mge-view:before{content:\"\\f1fa\"}/*!@.fa-atlas:before*/.fa-atlas.sc-mge-view:before{content:\"\\f558\"}/*!@.fa-atlassian:before*/.fa-atlassian.sc-mge-view:before{content:\"\\f77b\"}/*!@.fa-atom:before*/.fa-atom.sc-mge-view:before{content:\"\\f5d2\"}/*!@.fa-audible:before*/.fa-audible.sc-mge-view:before{content:\"\\f373\"}/*!@.fa-audio-description:before*/.fa-audio-description.sc-mge-view:before{content:\"\\f29e\"}/*!@.fa-autoprefixer:before*/.fa-autoprefixer.sc-mge-view:before{content:\"\\f41c\"}/*!@.fa-avianex:before*/.fa-avianex.sc-mge-view:before{content:\"\\f374\"}/*!@.fa-aviato:before*/.fa-aviato.sc-mge-view:before{content:\"\\f421\"}/*!@.fa-award:before*/.fa-award.sc-mge-view:before{content:\"\\f559\"}/*!@.fa-aws:before*/.fa-aws.sc-mge-view:before{content:\"\\f375\"}/*!@.fa-baby:before*/.fa-baby.sc-mge-view:before{content:\"\\f77c\"}/*!@.fa-baby-carriage:before*/.fa-baby-carriage.sc-mge-view:before{content:\"\\f77d\"}/*!@.fa-backspace:before*/.fa-backspace.sc-mge-view:before{content:\"\\f55a\"}/*!@.fa-backward:before*/.fa-backward.sc-mge-view:before{content:\"\\f04a\"}/*!@.fa-bacon:before*/.fa-bacon.sc-mge-view:before{content:\"\\f7e5\"}/*!@.fa-bacteria:before*/.fa-bacteria.sc-mge-view:before{content:\"\\e059\"}/*!@.fa-bacterium:before*/.fa-bacterium.sc-mge-view:before{content:\"\\e05a\"}/*!@.fa-bahai:before*/.fa-bahai.sc-mge-view:before{content:\"\\f666\"}/*!@.fa-balance-scale:before*/.fa-balance-scale.sc-mge-view:before{content:\"\\f24e\"}/*!@.fa-balance-scale-left:before*/.fa-balance-scale-left.sc-mge-view:before{content:\"\\f515\"}/*!@.fa-balance-scale-right:before*/.fa-balance-scale-right.sc-mge-view:before{content:\"\\f516\"}/*!@.fa-ban:before*/.fa-ban.sc-mge-view:before{content:\"\\f05e\"}/*!@.fa-band-aid:before*/.fa-band-aid.sc-mge-view:before{content:\"\\f462\"}/*!@.fa-bandcamp:before*/.fa-bandcamp.sc-mge-view:before{content:\"\\f2d5\"}/*!@.fa-barcode:before*/.fa-barcode.sc-mge-view:before{content:\"\\f02a\"}/*!@.fa-bars:before*/.fa-bars.sc-mge-view:before{content:\"\\f0c9\"}/*!@.fa-baseball-ball:before*/.fa-baseball-ball.sc-mge-view:before{content:\"\\f433\"}/*!@.fa-basketball-ball:before*/.fa-basketball-ball.sc-mge-view:before{content:\"\\f434\"}/*!@.fa-bath:before*/.fa-bath.sc-mge-view:before{content:\"\\f2cd\"}/*!@.fa-battery-empty:before*/.fa-battery-empty.sc-mge-view:before{content:\"\\f244\"}/*!@.fa-battery-full:before*/.fa-battery-full.sc-mge-view:before{content:\"\\f240\"}/*!@.fa-battery-half:before*/.fa-battery-half.sc-mge-view:before{content:\"\\f242\"}/*!@.fa-battery-quarter:before*/.fa-battery-quarter.sc-mge-view:before{content:\"\\f243\"}/*!@.fa-battery-three-quarters:before*/.fa-battery-three-quarters.sc-mge-view:before{content:\"\\f241\"}/*!@.fa-battle-net:before*/.fa-battle-net.sc-mge-view:before{content:\"\\f835\"}/*!@.fa-bed:before*/.fa-bed.sc-mge-view:before{content:\"\\f236\"}/*!@.fa-beer:before*/.fa-beer.sc-mge-view:before{content:\"\\f0fc\"}/*!@.fa-behance:before*/.fa-behance.sc-mge-view:before{content:\"\\f1b4\"}/*!@.fa-behance-square:before*/.fa-behance-square.sc-mge-view:before{content:\"\\f1b5\"}/*!@.fa-bell:before*/.fa-bell.sc-mge-view:before{content:\"\\f0f3\"}/*!@.fa-bell-slash:before*/.fa-bell-slash.sc-mge-view:before{content:\"\\f1f6\"}/*!@.fa-bezier-curve:before*/.fa-bezier-curve.sc-mge-view:before{content:\"\\f55b\"}/*!@.fa-bible:before*/.fa-bible.sc-mge-view:before{content:\"\\f647\"}/*!@.fa-bicycle:before*/.fa-bicycle.sc-mge-view:before{content:\"\\f206\"}/*!@.fa-biking:before*/.fa-biking.sc-mge-view:before{content:\"\\f84a\"}/*!@.fa-bimobject:before*/.fa-bimobject.sc-mge-view:before{content:\"\\f378\"}/*!@.fa-binoculars:before*/.fa-binoculars.sc-mge-view:before{content:\"\\f1e5\"}/*!@.fa-biohazard:before*/.fa-biohazard.sc-mge-view:before{content:\"\\f780\"}/*!@.fa-birthday-cake:before*/.fa-birthday-cake.sc-mge-view:before{content:\"\\f1fd\"}/*!@.fa-bitbucket:before*/.fa-bitbucket.sc-mge-view:before{content:\"\\f171\"}/*!@.fa-bitcoin:before*/.fa-bitcoin.sc-mge-view:before{content:\"\\f379\"}/*!@.fa-bity:before*/.fa-bity.sc-mge-view:before{content:\"\\f37a\"}/*!@.fa-black-tie:before*/.fa-black-tie.sc-mge-view:before{content:\"\\f27e\"}/*!@.fa-blackberry:before*/.fa-blackberry.sc-mge-view:before{content:\"\\f37b\"}/*!@.fa-blender:before*/.fa-blender.sc-mge-view:before{content:\"\\f517\"}/*!@.fa-blender-phone:before*/.fa-blender-phone.sc-mge-view:before{content:\"\\f6b6\"}/*!@.fa-blind:before*/.fa-blind.sc-mge-view:before{content:\"\\f29d\"}/*!@.fa-blog:before*/.fa-blog.sc-mge-view:before{content:\"\\f781\"}/*!@.fa-blogger:before*/.fa-blogger.sc-mge-view:before{content:\"\\f37c\"}/*!@.fa-blogger-b:before*/.fa-blogger-b.sc-mge-view:before{content:\"\\f37d\"}/*!@.fa-bluetooth:before*/.fa-bluetooth.sc-mge-view:before{content:\"\\f293\"}/*!@.fa-bluetooth-b:before*/.fa-bluetooth-b.sc-mge-view:before{content:\"\\f294\"}/*!@.fa-bold:before*/.fa-bold.sc-mge-view:before{content:\"\\f032\"}/*!@.fa-bolt:before*/.fa-bolt.sc-mge-view:before{content:\"\\f0e7\"}/*!@.fa-bomb:before*/.fa-bomb.sc-mge-view:before{content:\"\\f1e2\"}/*!@.fa-bone:before*/.fa-bone.sc-mge-view:before{content:\"\\f5d7\"}/*!@.fa-bong:before*/.fa-bong.sc-mge-view:before{content:\"\\f55c\"}/*!@.fa-book:before*/.fa-book.sc-mge-view:before{content:\"\\f02d\"}/*!@.fa-book-dead:before*/.fa-book-dead.sc-mge-view:before{content:\"\\f6b7\"}/*!@.fa-book-medical:before*/.fa-book-medical.sc-mge-view:before{content:\"\\f7e6\"}/*!@.fa-book-open:before*/.fa-book-open.sc-mge-view:before{content:\"\\f518\"}/*!@.fa-book-reader:before*/.fa-book-reader.sc-mge-view:before{content:\"\\f5da\"}/*!@.fa-bookmark:before*/.fa-bookmark.sc-mge-view:before{content:\"\\f02e\"}/*!@.fa-bootstrap:before*/.fa-bootstrap.sc-mge-view:before{content:\"\\f836\"}/*!@.fa-border-all:before*/.fa-border-all.sc-mge-view:before{content:\"\\f84c\"}/*!@.fa-border-none:before*/.fa-border-none.sc-mge-view:before{content:\"\\f850\"}/*!@.fa-border-style:before*/.fa-border-style.sc-mge-view:before{content:\"\\f853\"}/*!@.fa-bowling-ball:before*/.fa-bowling-ball.sc-mge-view:before{content:\"\\f436\"}/*!@.fa-box:before*/.fa-box.sc-mge-view:before{content:\"\\f466\"}/*!@.fa-box-open:before*/.fa-box-open.sc-mge-view:before{content:\"\\f49e\"}/*!@.fa-box-tissue:before*/.fa-box-tissue.sc-mge-view:before{content:\"\\e05b\"}/*!@.fa-boxes:before*/.fa-boxes.sc-mge-view:before{content:\"\\f468\"}/*!@.fa-braille:before*/.fa-braille.sc-mge-view:before{content:\"\\f2a1\"}/*!@.fa-brain:before*/.fa-brain.sc-mge-view:before{content:\"\\f5dc\"}/*!@.fa-bread-slice:before*/.fa-bread-slice.sc-mge-view:before{content:\"\\f7ec\"}/*!@.fa-briefcase:before*/.fa-briefcase.sc-mge-view:before{content:\"\\f0b1\"}/*!@.fa-briefcase-medical:before*/.fa-briefcase-medical.sc-mge-view:before{content:\"\\f469\"}/*!@.fa-broadcast-tower:before*/.fa-broadcast-tower.sc-mge-view:before{content:\"\\f519\"}/*!@.fa-broom:before*/.fa-broom.sc-mge-view:before{content:\"\\f51a\"}/*!@.fa-brush:before*/.fa-brush.sc-mge-view:before{content:\"\\f55d\"}/*!@.fa-btc:before*/.fa-btc.sc-mge-view:before{content:\"\\f15a\"}/*!@.fa-buffer:before*/.fa-buffer.sc-mge-view:before{content:\"\\f837\"}/*!@.fa-bug:before*/.fa-bug.sc-mge-view:before{content:\"\\f188\"}/*!@.fa-building:before*/.fa-building.sc-mge-view:before{content:\"\\f1ad\"}/*!@.fa-bullhorn:before*/.fa-bullhorn.sc-mge-view:before{content:\"\\f0a1\"}/*!@.fa-bullseye:before*/.fa-bullseye.sc-mge-view:before{content:\"\\f140\"}/*!@.fa-burn:before*/.fa-burn.sc-mge-view:before{content:\"\\f46a\"}/*!@.fa-buromobelexperte:before*/.fa-buromobelexperte.sc-mge-view:before{content:\"\\f37f\"}/*!@.fa-bus:before*/.fa-bus.sc-mge-view:before{content:\"\\f207\"}/*!@.fa-bus-alt:before*/.fa-bus-alt.sc-mge-view:before{content:\"\\f55e\"}/*!@.fa-business-time:before*/.fa-business-time.sc-mge-view:before{content:\"\\f64a\"}/*!@.fa-buy-n-large:before*/.fa-buy-n-large.sc-mge-view:before{content:\"\\f8a6\"}/*!@.fa-buysellads:before*/.fa-buysellads.sc-mge-view:before{content:\"\\f20d\"}/*!@.fa-calculator:before*/.fa-calculator.sc-mge-view:before{content:\"\\f1ec\"}/*!@.fa-calendar:before*/.fa-calendar.sc-mge-view:before{content:\"\\f133\"}/*!@.fa-calendar-alt:before*/.fa-calendar-alt.sc-mge-view:before{content:\"\\f073\"}/*!@.fa-calendar-check:before*/.fa-calendar-check.sc-mge-view:before{content:\"\\f274\"}/*!@.fa-calendar-day:before*/.fa-calendar-day.sc-mge-view:before{content:\"\\f783\"}/*!@.fa-calendar-minus:before*/.fa-calendar-minus.sc-mge-view:before{content:\"\\f272\"}/*!@.fa-calendar-plus:before*/.fa-calendar-plus.sc-mge-view:before{content:\"\\f271\"}/*!@.fa-calendar-times:before*/.fa-calendar-times.sc-mge-view:before{content:\"\\f273\"}/*!@.fa-calendar-week:before*/.fa-calendar-week.sc-mge-view:before{content:\"\\f784\"}/*!@.fa-camera:before*/.fa-camera.sc-mge-view:before{content:\"\\f030\"}/*!@.fa-camera-retro:before*/.fa-camera-retro.sc-mge-view:before{content:\"\\f083\"}/*!@.fa-campground:before*/.fa-campground.sc-mge-view:before{content:\"\\f6bb\"}/*!@.fa-canadian-maple-leaf:before*/.fa-canadian-maple-leaf.sc-mge-view:before{content:\"\\f785\"}/*!@.fa-candy-cane:before*/.fa-candy-cane.sc-mge-view:before{content:\"\\f786\"}/*!@.fa-cannabis:before*/.fa-cannabis.sc-mge-view:before{content:\"\\f55f\"}/*!@.fa-capsules:before*/.fa-capsules.sc-mge-view:before{content:\"\\f46b\"}/*!@.fa-car:before*/.fa-car.sc-mge-view:before{content:\"\\f1b9\"}/*!@.fa-car-alt:before*/.fa-car-alt.sc-mge-view:before{content:\"\\f5de\"}/*!@.fa-car-battery:before*/.fa-car-battery.sc-mge-view:before{content:\"\\f5df\"}/*!@.fa-car-crash:before*/.fa-car-crash.sc-mge-view:before{content:\"\\f5e1\"}/*!@.fa-car-side:before*/.fa-car-side.sc-mge-view:before{content:\"\\f5e4\"}/*!@.fa-caravan:before*/.fa-caravan.sc-mge-view:before{content:\"\\f8ff\"}/*!@.fa-caret-down:before*/.fa-caret-down.sc-mge-view:before{content:\"\\f0d7\"}/*!@.fa-caret-left:before*/.fa-caret-left.sc-mge-view:before{content:\"\\f0d9\"}/*!@.fa-caret-right:before*/.fa-caret-right.sc-mge-view:before{content:\"\\f0da\"}/*!@.fa-caret-square-down:before*/.fa-caret-square-down.sc-mge-view:before{content:\"\\f150\"}/*!@.fa-caret-square-left:before*/.fa-caret-square-left.sc-mge-view:before{content:\"\\f191\"}/*!@.fa-caret-square-right:before*/.fa-caret-square-right.sc-mge-view:before{content:\"\\f152\"}/*!@.fa-caret-square-up:before*/.fa-caret-square-up.sc-mge-view:before{content:\"\\f151\"}/*!@.fa-caret-up:before*/.fa-caret-up.sc-mge-view:before{content:\"\\f0d8\"}/*!@.fa-carrot:before*/.fa-carrot.sc-mge-view:before{content:\"\\f787\"}/*!@.fa-cart-arrow-down:before*/.fa-cart-arrow-down.sc-mge-view:before{content:\"\\f218\"}/*!@.fa-cart-plus:before*/.fa-cart-plus.sc-mge-view:before{content:\"\\f217\"}/*!@.fa-cash-register:before*/.fa-cash-register.sc-mge-view:before{content:\"\\f788\"}/*!@.fa-cat:before*/.fa-cat.sc-mge-view:before{content:\"\\f6be\"}/*!@.fa-cc-amazon-pay:before*/.fa-cc-amazon-pay.sc-mge-view:before{content:\"\\f42d\"}/*!@.fa-cc-amex:before*/.fa-cc-amex.sc-mge-view:before{content:\"\\f1f3\"}/*!@.fa-cc-apple-pay:before*/.fa-cc-apple-pay.sc-mge-view:before{content:\"\\f416\"}/*!@.fa-cc-diners-club:before*/.fa-cc-diners-club.sc-mge-view:before{content:\"\\f24c\"}/*!@.fa-cc-discover:before*/.fa-cc-discover.sc-mge-view:before{content:\"\\f1f2\"}/*!@.fa-cc-jcb:before*/.fa-cc-jcb.sc-mge-view:before{content:\"\\f24b\"}/*!@.fa-cc-mastercard:before*/.fa-cc-mastercard.sc-mge-view:before{content:\"\\f1f1\"}/*!@.fa-cc-paypal:before*/.fa-cc-paypal.sc-mge-view:before{content:\"\\f1f4\"}/*!@.fa-cc-stripe:before*/.fa-cc-stripe.sc-mge-view:before{content:\"\\f1f5\"}/*!@.fa-cc-visa:before*/.fa-cc-visa.sc-mge-view:before{content:\"\\f1f0\"}/*!@.fa-centercode:before*/.fa-centercode.sc-mge-view:before{content:\"\\f380\"}/*!@.fa-centos:before*/.fa-centos.sc-mge-view:before{content:\"\\f789\"}/*!@.fa-certificate:before*/.fa-certificate.sc-mge-view:before{content:\"\\f0a3\"}/*!@.fa-chair:before*/.fa-chair.sc-mge-view:before{content:\"\\f6c0\"}/*!@.fa-chalkboard:before*/.fa-chalkboard.sc-mge-view:before{content:\"\\f51b\"}/*!@.fa-chalkboard-teacher:before*/.fa-chalkboard-teacher.sc-mge-view:before{content:\"\\f51c\"}/*!@.fa-charging-station:before*/.fa-charging-station.sc-mge-view:before{content:\"\\f5e7\"}/*!@.fa-chart-area:before*/.fa-chart-area.sc-mge-view:before{content:\"\\f1fe\"}/*!@.fa-chart-bar:before*/.fa-chart-bar.sc-mge-view:before{content:\"\\f080\"}/*!@.fa-chart-line:before*/.fa-chart-line.sc-mge-view:before{content:\"\\f201\"}/*!@.fa-chart-pie:before*/.fa-chart-pie.sc-mge-view:before{content:\"\\f200\"}/*!@.fa-check:before*/.fa-check.sc-mge-view:before{content:\"\\f00c\"}/*!@.fa-check-circle:before*/.fa-check-circle.sc-mge-view:before{content:\"\\f058\"}/*!@.fa-check-double:before*/.fa-check-double.sc-mge-view:before{content:\"\\f560\"}/*!@.fa-check-square:before*/.fa-check-square.sc-mge-view:before{content:\"\\f14a\"}/*!@.fa-cheese:before*/.fa-cheese.sc-mge-view:before{content:\"\\f7ef\"}/*!@.fa-chess:before*/.fa-chess.sc-mge-view:before{content:\"\\f439\"}/*!@.fa-chess-bishop:before*/.fa-chess-bishop.sc-mge-view:before{content:\"\\f43a\"}/*!@.fa-chess-board:before*/.fa-chess-board.sc-mge-view:before{content:\"\\f43c\"}/*!@.fa-chess-king:before*/.fa-chess-king.sc-mge-view:before{content:\"\\f43f\"}/*!@.fa-chess-knight:before*/.fa-chess-knight.sc-mge-view:before{content:\"\\f441\"}/*!@.fa-chess-pawn:before*/.fa-chess-pawn.sc-mge-view:before{content:\"\\f443\"}/*!@.fa-chess-queen:before*/.fa-chess-queen.sc-mge-view:before{content:\"\\f445\"}/*!@.fa-chess-rook:before*/.fa-chess-rook.sc-mge-view:before{content:\"\\f447\"}/*!@.fa-chevron-circle-down:before*/.fa-chevron-circle-down.sc-mge-view:before{content:\"\\f13a\"}/*!@.fa-chevron-circle-left:before*/.fa-chevron-circle-left.sc-mge-view:before{content:\"\\f137\"}/*!@.fa-chevron-circle-right:before*/.fa-chevron-circle-right.sc-mge-view:before{content:\"\\f138\"}/*!@.fa-chevron-circle-up:before*/.fa-chevron-circle-up.sc-mge-view:before{content:\"\\f139\"}/*!@.fa-chevron-down:before*/.fa-chevron-down.sc-mge-view:before{content:\"\\f078\"}/*!@.fa-chevron-left:before*/.fa-chevron-left.sc-mge-view:before{content:\"\\f053\"}/*!@.fa-chevron-right:before*/.fa-chevron-right.sc-mge-view:before{content:\"\\f054\"}/*!@.fa-chevron-up:before*/.fa-chevron-up.sc-mge-view:before{content:\"\\f077\"}/*!@.fa-child:before*/.fa-child.sc-mge-view:before{content:\"\\f1ae\"}/*!@.fa-chrome:before*/.fa-chrome.sc-mge-view:before{content:\"\\f268\"}/*!@.fa-chromecast:before*/.fa-chromecast.sc-mge-view:before{content:\"\\f838\"}/*!@.fa-church:before*/.fa-church.sc-mge-view:before{content:\"\\f51d\"}/*!@.fa-circle:before*/.fa-circle.sc-mge-view:before{content:\"\\f111\"}/*!@.fa-circle-notch:before*/.fa-circle-notch.sc-mge-view:before{content:\"\\f1ce\"}/*!@.fa-city:before*/.fa-city.sc-mge-view:before{content:\"\\f64f\"}/*!@.fa-clinic-medical:before*/.fa-clinic-medical.sc-mge-view:before{content:\"\\f7f2\"}/*!@.fa-clipboard:before*/.fa-clipboard.sc-mge-view:before{content:\"\\f328\"}/*!@.fa-clipboard-check:before*/.fa-clipboard-check.sc-mge-view:before{content:\"\\f46c\"}/*!@.fa-clipboard-list:before*/.fa-clipboard-list.sc-mge-view:before{content:\"\\f46d\"}/*!@.fa-clock:before*/.fa-clock.sc-mge-view:before{content:\"\\f017\"}/*!@.fa-clone:before*/.fa-clone.sc-mge-view:before{content:\"\\f24d\"}/*!@.fa-closed-captioning:before*/.fa-closed-captioning.sc-mge-view:before{content:\"\\f20a\"}/*!@.fa-cloud:before*/.fa-cloud.sc-mge-view:before{content:\"\\f0c2\"}/*!@.fa-cloud-download-alt:before*/.fa-cloud-download-alt.sc-mge-view:before{content:\"\\f381\"}/*!@.fa-cloud-meatball:before*/.fa-cloud-meatball.sc-mge-view:before{content:\"\\f73b\"}/*!@.fa-cloud-moon:before*/.fa-cloud-moon.sc-mge-view:before{content:\"\\f6c3\"}/*!@.fa-cloud-moon-rain:before*/.fa-cloud-moon-rain.sc-mge-view:before{content:\"\\f73c\"}/*!@.fa-cloud-rain:before*/.fa-cloud-rain.sc-mge-view:before{content:\"\\f73d\"}/*!@.fa-cloud-showers-heavy:before*/.fa-cloud-showers-heavy.sc-mge-view:before{content:\"\\f740\"}/*!@.fa-cloud-sun:before*/.fa-cloud-sun.sc-mge-view:before{content:\"\\f6c4\"}/*!@.fa-cloud-sun-rain:before*/.fa-cloud-sun-rain.sc-mge-view:before{content:\"\\f743\"}/*!@.fa-cloud-upload-alt:before*/.fa-cloud-upload-alt.sc-mge-view:before{content:\"\\f382\"}/*!@.fa-cloudflare:before*/.fa-cloudflare.sc-mge-view:before{content:\"\\e07d\"}/*!@.fa-cloudscale:before*/.fa-cloudscale.sc-mge-view:before{content:\"\\f383\"}/*!@.fa-cloudsmith:before*/.fa-cloudsmith.sc-mge-view:before{content:\"\\f384\"}/*!@.fa-cloudversify:before*/.fa-cloudversify.sc-mge-view:before{content:\"\\f385\"}/*!@.fa-cocktail:before*/.fa-cocktail.sc-mge-view:before{content:\"\\f561\"}/*!@.fa-code:before*/.fa-code.sc-mge-view:before{content:\"\\f121\"}/*!@.fa-code-branch:before*/.fa-code-branch.sc-mge-view:before{content:\"\\f126\"}/*!@.fa-codepen:before*/.fa-codepen.sc-mge-view:before{content:\"\\f1cb\"}/*!@.fa-codiepie:before*/.fa-codiepie.sc-mge-view:before{content:\"\\f284\"}/*!@.fa-coffee:before*/.fa-coffee.sc-mge-view:before{content:\"\\f0f4\"}/*!@.fa-cog:before*/.fa-cog.sc-mge-view:before{content:\"\\f013\"}/*!@.fa-cogs:before*/.fa-cogs.sc-mge-view:before{content:\"\\f085\"}/*!@.fa-coins:before*/.fa-coins.sc-mge-view:before{content:\"\\f51e\"}/*!@.fa-columns:before*/.fa-columns.sc-mge-view:before{content:\"\\f0db\"}/*!@.fa-comment:before*/.fa-comment.sc-mge-view:before{content:\"\\f075\"}/*!@.fa-comment-alt:before*/.fa-comment-alt.sc-mge-view:before{content:\"\\f27a\"}/*!@.fa-comment-dollar:before*/.fa-comment-dollar.sc-mge-view:before{content:\"\\f651\"}/*!@.fa-comment-dots:before*/.fa-comment-dots.sc-mge-view:before{content:\"\\f4ad\"}/*!@.fa-comment-medical:before*/.fa-comment-medical.sc-mge-view:before{content:\"\\f7f5\"}/*!@.fa-comment-slash:before*/.fa-comment-slash.sc-mge-view:before{content:\"\\f4b3\"}/*!@.fa-comments:before*/.fa-comments.sc-mge-view:before{content:\"\\f086\"}/*!@.fa-comments-dollar:before*/.fa-comments-dollar.sc-mge-view:before{content:\"\\f653\"}/*!@.fa-compact-disc:before*/.fa-compact-disc.sc-mge-view:before{content:\"\\f51f\"}/*!@.fa-compass:before*/.fa-compass.sc-mge-view:before{content:\"\\f14e\"}/*!@.fa-compress:before*/.fa-compress.sc-mge-view:before{content:\"\\f066\"}/*!@.fa-compress-alt:before*/.fa-compress-alt.sc-mge-view:before{content:\"\\f422\"}/*!@.fa-compress-arrows-alt:before*/.fa-compress-arrows-alt.sc-mge-view:before{content:\"\\f78c\"}/*!@.fa-concierge-bell:before*/.fa-concierge-bell.sc-mge-view:before{content:\"\\f562\"}/*!@.fa-confluence:before*/.fa-confluence.sc-mge-view:before{content:\"\\f78d\"}/*!@.fa-connectdevelop:before*/.fa-connectdevelop.sc-mge-view:before{content:\"\\f20e\"}/*!@.fa-contao:before*/.fa-contao.sc-mge-view:before{content:\"\\f26d\"}/*!@.fa-cookie:before*/.fa-cookie.sc-mge-view:before{content:\"\\f563\"}/*!@.fa-cookie-bite:before*/.fa-cookie-bite.sc-mge-view:before{content:\"\\f564\"}/*!@.fa-copy:before*/.fa-copy.sc-mge-view:before{content:\"\\f0c5\"}/*!@.fa-copyright:before*/.fa-copyright.sc-mge-view:before{content:\"\\f1f9\"}/*!@.fa-cotton-bureau:before*/.fa-cotton-bureau.sc-mge-view:before{content:\"\\f89e\"}/*!@.fa-couch:before*/.fa-couch.sc-mge-view:before{content:\"\\f4b8\"}/*!@.fa-cpanel:before*/.fa-cpanel.sc-mge-view:before{content:\"\\f388\"}/*!@.fa-creative-commons:before*/.fa-creative-commons.sc-mge-view:before{content:\"\\f25e\"}/*!@.fa-creative-commons-by:before*/.fa-creative-commons-by.sc-mge-view:before{content:\"\\f4e7\"}/*!@.fa-creative-commons-nc:before*/.fa-creative-commons-nc.sc-mge-view:before{content:\"\\f4e8\"}/*!@.fa-creative-commons-nc-eu:before*/.fa-creative-commons-nc-eu.sc-mge-view:before{content:\"\\f4e9\"}/*!@.fa-creative-commons-nc-jp:before*/.fa-creative-commons-nc-jp.sc-mge-view:before{content:\"\\f4ea\"}/*!@.fa-creative-commons-nd:before*/.fa-creative-commons-nd.sc-mge-view:before{content:\"\\f4eb\"}/*!@.fa-creative-commons-pd:before*/.fa-creative-commons-pd.sc-mge-view:before{content:\"\\f4ec\"}/*!@.fa-creative-commons-pd-alt:before*/.fa-creative-commons-pd-alt.sc-mge-view:before{content:\"\\f4ed\"}/*!@.fa-creative-commons-remix:before*/.fa-creative-commons-remix.sc-mge-view:before{content:\"\\f4ee\"}/*!@.fa-creative-commons-sa:before*/.fa-creative-commons-sa.sc-mge-view:before{content:\"\\f4ef\"}/*!@.fa-creative-commons-sampling:before*/.fa-creative-commons-sampling.sc-mge-view:before{content:\"\\f4f0\"}/*!@.fa-creative-commons-sampling-plus:before*/.fa-creative-commons-sampling-plus.sc-mge-view:before{content:\"\\f4f1\"}/*!@.fa-creative-commons-share:before*/.fa-creative-commons-share.sc-mge-view:before{content:\"\\f4f2\"}/*!@.fa-creative-commons-zero:before*/.fa-creative-commons-zero.sc-mge-view:before{content:\"\\f4f3\"}/*!@.fa-credit-card:before*/.fa-credit-card.sc-mge-view:before{content:\"\\f09d\"}/*!@.fa-critical-role:before*/.fa-critical-role.sc-mge-view:before{content:\"\\f6c9\"}/*!@.fa-crop:before*/.fa-crop.sc-mge-view:before{content:\"\\f125\"}/*!@.fa-crop-alt:before*/.fa-crop-alt.sc-mge-view:before{content:\"\\f565\"}/*!@.fa-cross:before*/.fa-cross.sc-mge-view:before{content:\"\\f654\"}/*!@.fa-crosshairs:before*/.fa-crosshairs.sc-mge-view:before{content:\"\\f05b\"}/*!@.fa-crow:before*/.fa-crow.sc-mge-view:before{content:\"\\f520\"}/*!@.fa-crown:before*/.fa-crown.sc-mge-view:before{content:\"\\f521\"}/*!@.fa-crutch:before*/.fa-crutch.sc-mge-view:before{content:\"\\f7f7\"}/*!@.fa-css3:before*/.fa-css3.sc-mge-view:before{content:\"\\f13c\"}/*!@.fa-css3-alt:before*/.fa-css3-alt.sc-mge-view:before{content:\"\\f38b\"}/*!@.fa-cube:before*/.fa-cube.sc-mge-view:before{content:\"\\f1b2\"}/*!@.fa-cubes:before*/.fa-cubes.sc-mge-view:before{content:\"\\f1b3\"}/*!@.fa-cut:before*/.fa-cut.sc-mge-view:before{content:\"\\f0c4\"}/*!@.fa-cuttlefish:before*/.fa-cuttlefish.sc-mge-view:before{content:\"\\f38c\"}/*!@.fa-d-and-d:before*/.fa-d-and-d.sc-mge-view:before{content:\"\\f38d\"}/*!@.fa-d-and-d-beyond:before*/.fa-d-and-d-beyond.sc-mge-view:before{content:\"\\f6ca\"}/*!@.fa-dailymotion:before*/.fa-dailymotion.sc-mge-view:before{content:\"\\e052\"}/*!@.fa-dashcube:before*/.fa-dashcube.sc-mge-view:before{content:\"\\f210\"}/*!@.fa-database:before*/.fa-database.sc-mge-view:before{content:\"\\f1c0\"}/*!@.fa-deaf:before*/.fa-deaf.sc-mge-view:before{content:\"\\f2a4\"}/*!@.fa-deezer:before*/.fa-deezer.sc-mge-view:before{content:\"\\e077\"}/*!@.fa-delicious:before*/.fa-delicious.sc-mge-view:before{content:\"\\f1a5\"}/*!@.fa-democrat:before*/.fa-democrat.sc-mge-view:before{content:\"\\f747\"}/*!@.fa-deploydog:before*/.fa-deploydog.sc-mge-view:before{content:\"\\f38e\"}/*!@.fa-deskpro:before*/.fa-deskpro.sc-mge-view:before{content:\"\\f38f\"}/*!@.fa-desktop:before*/.fa-desktop.sc-mge-view:before{content:\"\\f108\"}/*!@.fa-dev:before*/.fa-dev.sc-mge-view:before{content:\"\\f6cc\"}/*!@.fa-deviantart:before*/.fa-deviantart.sc-mge-view:before{content:\"\\f1bd\"}/*!@.fa-dharmachakra:before*/.fa-dharmachakra.sc-mge-view:before{content:\"\\f655\"}/*!@.fa-dhl:before*/.fa-dhl.sc-mge-view:before{content:\"\\f790\"}/*!@.fa-diagnoses:before*/.fa-diagnoses.sc-mge-view:before{content:\"\\f470\"}/*!@.fa-diaspora:before*/.fa-diaspora.sc-mge-view:before{content:\"\\f791\"}/*!@.fa-dice:before*/.fa-dice.sc-mge-view:before{content:\"\\f522\"}/*!@.fa-dice-d20:before*/.fa-dice-d20.sc-mge-view:before{content:\"\\f6cf\"}/*!@.fa-dice-d6:before*/.fa-dice-d6.sc-mge-view:before{content:\"\\f6d1\"}/*!@.fa-dice-five:before*/.fa-dice-five.sc-mge-view:before{content:\"\\f523\"}/*!@.fa-dice-four:before*/.fa-dice-four.sc-mge-view:before{content:\"\\f524\"}/*!@.fa-dice-one:before*/.fa-dice-one.sc-mge-view:before{content:\"\\f525\"}/*!@.fa-dice-six:before*/.fa-dice-six.sc-mge-view:before{content:\"\\f526\"}/*!@.fa-dice-three:before*/.fa-dice-three.sc-mge-view:before{content:\"\\f527\"}/*!@.fa-dice-two:before*/.fa-dice-two.sc-mge-view:before{content:\"\\f528\"}/*!@.fa-digg:before*/.fa-digg.sc-mge-view:before{content:\"\\f1a6\"}/*!@.fa-digital-ocean:before*/.fa-digital-ocean.sc-mge-view:before{content:\"\\f391\"}/*!@.fa-digital-tachograph:before*/.fa-digital-tachograph.sc-mge-view:before{content:\"\\f566\"}/*!@.fa-directions:before*/.fa-directions.sc-mge-view:before{content:\"\\f5eb\"}/*!@.fa-discord:before*/.fa-discord.sc-mge-view:before{content:\"\\f392\"}/*!@.fa-discourse:before*/.fa-discourse.sc-mge-view:before{content:\"\\f393\"}/*!@.fa-disease:before*/.fa-disease.sc-mge-view:before{content:\"\\f7fa\"}/*!@.fa-divide:before*/.fa-divide.sc-mge-view:before{content:\"\\f529\"}/*!@.fa-dizzy:before*/.fa-dizzy.sc-mge-view:before{content:\"\\f567\"}/*!@.fa-dna:before*/.fa-dna.sc-mge-view:before{content:\"\\f471\"}/*!@.fa-dochub:before*/.fa-dochub.sc-mge-view:before{content:\"\\f394\"}/*!@.fa-docker:before*/.fa-docker.sc-mge-view:before{content:\"\\f395\"}/*!@.fa-dog:before*/.fa-dog.sc-mge-view:before{content:\"\\f6d3\"}/*!@.fa-dollar-sign:before*/.fa-dollar-sign.sc-mge-view:before{content:\"\\f155\"}/*!@.fa-dolly:before*/.fa-dolly.sc-mge-view:before{content:\"\\f472\"}/*!@.fa-dolly-flatbed:before*/.fa-dolly-flatbed.sc-mge-view:before{content:\"\\f474\"}/*!@.fa-donate:before*/.fa-donate.sc-mge-view:before{content:\"\\f4b9\"}/*!@.fa-door-closed:before*/.fa-door-closed.sc-mge-view:before{content:\"\\f52a\"}/*!@.fa-door-open:before*/.fa-door-open.sc-mge-view:before{content:\"\\f52b\"}/*!@.fa-dot-circle:before*/.fa-dot-circle.sc-mge-view:before{content:\"\\f192\"}/*!@.fa-dove:before*/.fa-dove.sc-mge-view:before{content:\"\\f4ba\"}/*!@.fa-download:before*/.fa-download.sc-mge-view:before{content:\"\\f019\"}/*!@.fa-draft2digital:before*/.fa-draft2digital.sc-mge-view:before{content:\"\\f396\"}/*!@.fa-drafting-compass:before*/.fa-drafting-compass.sc-mge-view:before{content:\"\\f568\"}/*!@.fa-dragon:before*/.fa-dragon.sc-mge-view:before{content:\"\\f6d5\"}/*!@.fa-draw-polygon:before*/.fa-draw-polygon.sc-mge-view:before{content:\"\\f5ee\"}/*!@.fa-dribbble:before*/.fa-dribbble.sc-mge-view:before{content:\"\\f17d\"}/*!@.fa-dribbble-square:before*/.fa-dribbble-square.sc-mge-view:before{content:\"\\f397\"}/*!@.fa-dropbox:before*/.fa-dropbox.sc-mge-view:before{content:\"\\f16b\"}/*!@.fa-drum:before*/.fa-drum.sc-mge-view:before{content:\"\\f569\"}/*!@.fa-drum-steelpan:before*/.fa-drum-steelpan.sc-mge-view:before{content:\"\\f56a\"}/*!@.fa-drumstick-bite:before*/.fa-drumstick-bite.sc-mge-view:before{content:\"\\f6d7\"}/*!@.fa-drupal:before*/.fa-drupal.sc-mge-view:before{content:\"\\f1a9\"}/*!@.fa-dumbbell:before*/.fa-dumbbell.sc-mge-view:before{content:\"\\f44b\"}/*!@.fa-dumpster:before*/.fa-dumpster.sc-mge-view:before{content:\"\\f793\"}/*!@.fa-dumpster-fire:before*/.fa-dumpster-fire.sc-mge-view:before{content:\"\\f794\"}/*!@.fa-dungeon:before*/.fa-dungeon.sc-mge-view:before{content:\"\\f6d9\"}/*!@.fa-dyalog:before*/.fa-dyalog.sc-mge-view:before{content:\"\\f399\"}/*!@.fa-earlybirds:before*/.fa-earlybirds.sc-mge-view:before{content:\"\\f39a\"}/*!@.fa-ebay:before*/.fa-ebay.sc-mge-view:before{content:\"\\f4f4\"}/*!@.fa-edge:before*/.fa-edge.sc-mge-view:before{content:\"\\f282\"}/*!@.fa-edge-legacy:before*/.fa-edge-legacy.sc-mge-view:before{content:\"\\e078\"}/*!@.fa-edit:before*/.fa-edit.sc-mge-view:before{content:\"\\f044\"}/*!@.fa-egg:before*/.fa-egg.sc-mge-view:before{content:\"\\f7fb\"}/*!@.fa-eject:before*/.fa-eject.sc-mge-view:before{content:\"\\f052\"}/*!@.fa-elementor:before*/.fa-elementor.sc-mge-view:before{content:\"\\f430\"}/*!@.fa-ellipsis-h:before*/.fa-ellipsis-h.sc-mge-view:before{content:\"\\f141\"}/*!@.fa-ellipsis-v:before*/.fa-ellipsis-v.sc-mge-view:before{content:\"\\f142\"}/*!@.fa-ello:before*/.fa-ello.sc-mge-view:before{content:\"\\f5f1\"}/*!@.fa-ember:before*/.fa-ember.sc-mge-view:before{content:\"\\f423\"}/*!@.fa-empire:before*/.fa-empire.sc-mge-view:before{content:\"\\f1d1\"}/*!@.fa-envelope:before*/.fa-envelope.sc-mge-view:before{content:\"\\f0e0\"}/*!@.fa-envelope-open:before*/.fa-envelope-open.sc-mge-view:before{content:\"\\f2b6\"}/*!@.fa-envelope-open-text:before*/.fa-envelope-open-text.sc-mge-view:before{content:\"\\f658\"}/*!@.fa-envelope-square:before*/.fa-envelope-square.sc-mge-view:before{content:\"\\f199\"}/*!@.fa-envira:before*/.fa-envira.sc-mge-view:before{content:\"\\f299\"}/*!@.fa-equals:before*/.fa-equals.sc-mge-view:before{content:\"\\f52c\"}/*!@.fa-eraser:before*/.fa-eraser.sc-mge-view:before{content:\"\\f12d\"}/*!@.fa-erlang:before*/.fa-erlang.sc-mge-view:before{content:\"\\f39d\"}/*!@.fa-ethereum:before*/.fa-ethereum.sc-mge-view:before{content:\"\\f42e\"}/*!@.fa-ethernet:before*/.fa-ethernet.sc-mge-view:before{content:\"\\f796\"}/*!@.fa-etsy:before*/.fa-etsy.sc-mge-view:before{content:\"\\f2d7\"}/*!@.fa-euro-sign:before*/.fa-euro-sign.sc-mge-view:before{content:\"\\f153\"}/*!@.fa-evernote:before*/.fa-evernote.sc-mge-view:before{content:\"\\f839\"}/*!@.fa-exchange-alt:before*/.fa-exchange-alt.sc-mge-view:before{content:\"\\f362\"}/*!@.fa-exclamation:before*/.fa-exclamation.sc-mge-view:before{content:\"\\f12a\"}/*!@.fa-exclamation-circle:before*/.fa-exclamation-circle.sc-mge-view:before{content:\"\\f06a\"}/*!@.fa-exclamation-triangle:before*/.fa-exclamation-triangle.sc-mge-view:before{content:\"\\f071\"}/*!@.fa-expand:before*/.fa-expand.sc-mge-view:before{content:\"\\f065\"}/*!@.fa-expand-alt:before*/.fa-expand-alt.sc-mge-view:before{content:\"\\f424\"}/*!@.fa-expand-arrows-alt:before*/.fa-expand-arrows-alt.sc-mge-view:before{content:\"\\f31e\"}/*!@.fa-expeditedssl:before*/.fa-expeditedssl.sc-mge-view:before{content:\"\\f23e\"}/*!@.fa-external-link-alt:before*/.fa-external-link-alt.sc-mge-view:before{content:\"\\f35d\"}/*!@.fa-external-link-square-alt:before*/.fa-external-link-square-alt.sc-mge-view:before{content:\"\\f360\"}/*!@.fa-eye:before*/.fa-eye.sc-mge-view:before{content:\"\\f06e\"}/*!@.fa-eye-dropper:before*/.fa-eye-dropper.sc-mge-view:before{content:\"\\f1fb\"}/*!@.fa-eye-slash:before*/.fa-eye-slash.sc-mge-view:before{content:\"\\f070\"}/*!@.fa-facebook:before*/.fa-facebook.sc-mge-view:before{content:\"\\f09a\"}/*!@.fa-facebook-f:before*/.fa-facebook-f.sc-mge-view:before{content:\"\\f39e\"}/*!@.fa-facebook-messenger:before*/.fa-facebook-messenger.sc-mge-view:before{content:\"\\f39f\"}/*!@.fa-facebook-square:before*/.fa-facebook-square.sc-mge-view:before{content:\"\\f082\"}/*!@.fa-fan:before*/.fa-fan.sc-mge-view:before{content:\"\\f863\"}/*!@.fa-fantasy-flight-games:before*/.fa-fantasy-flight-games.sc-mge-view:before{content:\"\\f6dc\"}/*!@.fa-fast-backward:before*/.fa-fast-backward.sc-mge-view:before{content:\"\\f049\"}/*!@.fa-fast-forward:before*/.fa-fast-forward.sc-mge-view:before{content:\"\\f050\"}/*!@.fa-faucet:before*/.fa-faucet.sc-mge-view:before{content:\"\\e005\"}/*!@.fa-fax:before*/.fa-fax.sc-mge-view:before{content:\"\\f1ac\"}/*!@.fa-feather:before*/.fa-feather.sc-mge-view:before{content:\"\\f52d\"}/*!@.fa-feather-alt:before*/.fa-feather-alt.sc-mge-view:before{content:\"\\f56b\"}/*!@.fa-fedex:before*/.fa-fedex.sc-mge-view:before{content:\"\\f797\"}/*!@.fa-fedora:before*/.fa-fedora.sc-mge-view:before{content:\"\\f798\"}/*!@.fa-female:before*/.fa-female.sc-mge-view:before{content:\"\\f182\"}/*!@.fa-fighter-jet:before*/.fa-fighter-jet.sc-mge-view:before{content:\"\\f0fb\"}/*!@.fa-figma:before*/.fa-figma.sc-mge-view:before{content:\"\\f799\"}/*!@.fa-file:before*/.fa-file.sc-mge-view:before{content:\"\\f15b\"}/*!@.fa-file-alt:before*/.fa-file-alt.sc-mge-view:before{content:\"\\f15c\"}/*!@.fa-file-archive:before*/.fa-file-archive.sc-mge-view:before{content:\"\\f1c6\"}/*!@.fa-file-audio:before*/.fa-file-audio.sc-mge-view:before{content:\"\\f1c7\"}/*!@.fa-file-code:before*/.fa-file-code.sc-mge-view:before{content:\"\\f1c9\"}/*!@.fa-file-contract:before*/.fa-file-contract.sc-mge-view:before{content:\"\\f56c\"}/*!@.fa-file-csv:before*/.fa-file-csv.sc-mge-view:before{content:\"\\f6dd\"}/*!@.fa-file-download:before*/.fa-file-download.sc-mge-view:before{content:\"\\f56d\"}/*!@.fa-file-excel:before*/.fa-file-excel.sc-mge-view:before{content:\"\\f1c3\"}/*!@.fa-file-export:before*/.fa-file-export.sc-mge-view:before{content:\"\\f56e\"}/*!@.fa-file-image:before*/.fa-file-image.sc-mge-view:before{content:\"\\f1c5\"}/*!@.fa-file-import:before*/.fa-file-import.sc-mge-view:before{content:\"\\f56f\"}/*!@.fa-file-invoice:before*/.fa-file-invoice.sc-mge-view:before{content:\"\\f570\"}/*!@.fa-file-invoice-dollar:before*/.fa-file-invoice-dollar.sc-mge-view:before{content:\"\\f571\"}/*!@.fa-file-medical:before*/.fa-file-medical.sc-mge-view:before{content:\"\\f477\"}/*!@.fa-file-medical-alt:before*/.fa-file-medical-alt.sc-mge-view:before{content:\"\\f478\"}/*!@.fa-file-pdf:before*/.fa-file-pdf.sc-mge-view:before{content:\"\\f1c1\"}/*!@.fa-file-powerpoint:before*/.fa-file-powerpoint.sc-mge-view:before{content:\"\\f1c4\"}/*!@.fa-file-prescription:before*/.fa-file-prescription.sc-mge-view:before{content:\"\\f572\"}/*!@.fa-file-signature:before*/.fa-file-signature.sc-mge-view:before{content:\"\\f573\"}/*!@.fa-file-upload:before*/.fa-file-upload.sc-mge-view:before{content:\"\\f574\"}/*!@.fa-file-video:before*/.fa-file-video.sc-mge-view:before{content:\"\\f1c8\"}/*!@.fa-file-word:before*/.fa-file-word.sc-mge-view:before{content:\"\\f1c2\"}/*!@.fa-fill:before*/.fa-fill.sc-mge-view:before{content:\"\\f575\"}/*!@.fa-fill-drip:before*/.fa-fill-drip.sc-mge-view:before{content:\"\\f576\"}/*!@.fa-film:before*/.fa-film.sc-mge-view:before{content:\"\\f008\"}/*!@.fa-filter:before*/.fa-filter.sc-mge-view:before{content:\"\\f0b0\"}/*!@.fa-fingerprint:before*/.fa-fingerprint.sc-mge-view:before{content:\"\\f577\"}/*!@.fa-fire:before*/.fa-fire.sc-mge-view:before{content:\"\\f06d\"}/*!@.fa-fire-alt:before*/.fa-fire-alt.sc-mge-view:before{content:\"\\f7e4\"}/*!@.fa-fire-extinguisher:before*/.fa-fire-extinguisher.sc-mge-view:before{content:\"\\f134\"}/*!@.fa-firefox:before*/.fa-firefox.sc-mge-view:before{content:\"\\f269\"}/*!@.fa-firefox-browser:before*/.fa-firefox-browser.sc-mge-view:before{content:\"\\e007\"}/*!@.fa-first-aid:before*/.fa-first-aid.sc-mge-view:before{content:\"\\f479\"}/*!@.fa-first-order:before*/.fa-first-order.sc-mge-view:before{content:\"\\f2b0\"}/*!@.fa-first-order-alt:before*/.fa-first-order-alt.sc-mge-view:before{content:\"\\f50a\"}/*!@.fa-firstdraft:before*/.fa-firstdraft.sc-mge-view:before{content:\"\\f3a1\"}/*!@.fa-fish:before*/.fa-fish.sc-mge-view:before{content:\"\\f578\"}/*!@.fa-fist-raised:before*/.fa-fist-raised.sc-mge-view:before{content:\"\\f6de\"}/*!@.fa-flag:before*/.fa-flag.sc-mge-view:before{content:\"\\f024\"}/*!@.fa-flag-checkered:before*/.fa-flag-checkered.sc-mge-view:before{content:\"\\f11e\"}/*!@.fa-flag-usa:before*/.fa-flag-usa.sc-mge-view:before{content:\"\\f74d\"}/*!@.fa-flask:before*/.fa-flask.sc-mge-view:before{content:\"\\f0c3\"}/*!@.fa-flickr:before*/.fa-flickr.sc-mge-view:before{content:\"\\f16e\"}/*!@.fa-flipboard:before*/.fa-flipboard.sc-mge-view:before{content:\"\\f44d\"}/*!@.fa-flushed:before*/.fa-flushed.sc-mge-view:before{content:\"\\f579\"}/*!@.fa-fly:before*/.fa-fly.sc-mge-view:before{content:\"\\f417\"}/*!@.fa-folder:before*/.fa-folder.sc-mge-view:before{content:\"\\f07b\"}/*!@.fa-folder-minus:before*/.fa-folder-minus.sc-mge-view:before{content:\"\\f65d\"}/*!@.fa-folder-open:before*/.fa-folder-open.sc-mge-view:before{content:\"\\f07c\"}/*!@.fa-folder-plus:before*/.fa-folder-plus.sc-mge-view:before{content:\"\\f65e\"}/*!@.fa-font:before*/.fa-font.sc-mge-view:before{content:\"\\f031\"}/*!@.fa-font-awesome:before*/.fa-font-awesome.sc-mge-view:before{content:\"\\f2b4\"}/*!@.fa-font-awesome-alt:before*/.fa-font-awesome-alt.sc-mge-view:before{content:\"\\f35c\"}/*!@.fa-font-awesome-flag:before*/.fa-font-awesome-flag.sc-mge-view:before{content:\"\\f425\"}/*!@.fa-font-awesome-logo-full:before*/.fa-font-awesome-logo-full.sc-mge-view:before{content:\"\\f4e6\"}/*!@.fa-fonticons:before*/.fa-fonticons.sc-mge-view:before{content:\"\\f280\"}/*!@.fa-fonticons-fi:before*/.fa-fonticons-fi.sc-mge-view:before{content:\"\\f3a2\"}/*!@.fa-football-ball:before*/.fa-football-ball.sc-mge-view:before{content:\"\\f44e\"}/*!@.fa-fort-awesome:before*/.fa-fort-awesome.sc-mge-view:before{content:\"\\f286\"}/*!@.fa-fort-awesome-alt:before*/.fa-fort-awesome-alt.sc-mge-view:before{content:\"\\f3a3\"}/*!@.fa-forumbee:before*/.fa-forumbee.sc-mge-view:before{content:\"\\f211\"}/*!@.fa-forward:before*/.fa-forward.sc-mge-view:before{content:\"\\f04e\"}/*!@.fa-foursquare:before*/.fa-foursquare.sc-mge-view:before{content:\"\\f180\"}/*!@.fa-free-code-camp:before*/.fa-free-code-camp.sc-mge-view:before{content:\"\\f2c5\"}/*!@.fa-freebsd:before*/.fa-freebsd.sc-mge-view:before{content:\"\\f3a4\"}/*!@.fa-frog:before*/.fa-frog.sc-mge-view:before{content:\"\\f52e\"}/*!@.fa-frown:before*/.fa-frown.sc-mge-view:before{content:\"\\f119\"}/*!@.fa-frown-open:before*/.fa-frown-open.sc-mge-view:before{content:\"\\f57a\"}/*!@.fa-fulcrum:before*/.fa-fulcrum.sc-mge-view:before{content:\"\\f50b\"}/*!@.fa-funnel-dollar:before*/.fa-funnel-dollar.sc-mge-view:before{content:\"\\f662\"}/*!@.fa-futbol:before*/.fa-futbol.sc-mge-view:before{content:\"\\f1e3\"}/*!@.fa-galactic-republic:before*/.fa-galactic-republic.sc-mge-view:before{content:\"\\f50c\"}/*!@.fa-galactic-senate:before*/.fa-galactic-senate.sc-mge-view:before{content:\"\\f50d\"}/*!@.fa-gamepad:before*/.fa-gamepad.sc-mge-view:before{content:\"\\f11b\"}/*!@.fa-gas-pump:before*/.fa-gas-pump.sc-mge-view:before{content:\"\\f52f\"}/*!@.fa-gavel:before*/.fa-gavel.sc-mge-view:before{content:\"\\f0e3\"}/*!@.fa-gem:before*/.fa-gem.sc-mge-view:before{content:\"\\f3a5\"}/*!@.fa-genderless:before*/.fa-genderless.sc-mge-view:before{content:\"\\f22d\"}/*!@.fa-get-pocket:before*/.fa-get-pocket.sc-mge-view:before{content:\"\\f265\"}/*!@.fa-gg:before*/.fa-gg.sc-mge-view:before{content:\"\\f260\"}/*!@.fa-gg-circle:before*/.fa-gg-circle.sc-mge-view:before{content:\"\\f261\"}/*!@.fa-ghost:before*/.fa-ghost.sc-mge-view:before{content:\"\\f6e2\"}/*!@.fa-gift:before*/.fa-gift.sc-mge-view:before{content:\"\\f06b\"}/*!@.fa-gifts:before*/.fa-gifts.sc-mge-view:before{content:\"\\f79c\"}/*!@.fa-git:before*/.fa-git.sc-mge-view:before{content:\"\\f1d3\"}/*!@.fa-git-alt:before*/.fa-git-alt.sc-mge-view:before{content:\"\\f841\"}/*!@.fa-git-square:before*/.fa-git-square.sc-mge-view:before{content:\"\\f1d2\"}/*!@.fa-github:before*/.fa-github.sc-mge-view:before{content:\"\\f09b\"}/*!@.fa-github-alt:before*/.fa-github-alt.sc-mge-view:before{content:\"\\f113\"}/*!@.fa-github-square:before*/.fa-github-square.sc-mge-view:before{content:\"\\f092\"}/*!@.fa-gitkraken:before*/.fa-gitkraken.sc-mge-view:before{content:\"\\f3a6\"}/*!@.fa-gitlab:before*/.fa-gitlab.sc-mge-view:before{content:\"\\f296\"}/*!@.fa-gitter:before*/.fa-gitter.sc-mge-view:before{content:\"\\f426\"}/*!@.fa-glass-cheers:before*/.fa-glass-cheers.sc-mge-view:before{content:\"\\f79f\"}/*!@.fa-glass-martini:before*/.fa-glass-martini.sc-mge-view:before{content:\"\\f000\"}/*!@.fa-glass-martini-alt:before*/.fa-glass-martini-alt.sc-mge-view:before{content:\"\\f57b\"}/*!@.fa-glass-whiskey:before*/.fa-glass-whiskey.sc-mge-view:before{content:\"\\f7a0\"}/*!@.fa-glasses:before*/.fa-glasses.sc-mge-view:before{content:\"\\f530\"}/*!@.fa-glide:before*/.fa-glide.sc-mge-view:before{content:\"\\f2a5\"}/*!@.fa-glide-g:before*/.fa-glide-g.sc-mge-view:before{content:\"\\f2a6\"}/*!@.fa-globe:before*/.fa-globe.sc-mge-view:before{content:\"\\f0ac\"}/*!@.fa-globe-africa:before*/.fa-globe-africa.sc-mge-view:before{content:\"\\f57c\"}/*!@.fa-globe-americas:before*/.fa-globe-americas.sc-mge-view:before{content:\"\\f57d\"}/*!@.fa-globe-asia:before*/.fa-globe-asia.sc-mge-view:before{content:\"\\f57e\"}/*!@.fa-globe-europe:before*/.fa-globe-europe.sc-mge-view:before{content:\"\\f7a2\"}/*!@.fa-gofore:before*/.fa-gofore.sc-mge-view:before{content:\"\\f3a7\"}/*!@.fa-golf-ball:before*/.fa-golf-ball.sc-mge-view:before{content:\"\\f450\"}/*!@.fa-goodreads:before*/.fa-goodreads.sc-mge-view:before{content:\"\\f3a8\"}/*!@.fa-goodreads-g:before*/.fa-goodreads-g.sc-mge-view:before{content:\"\\f3a9\"}/*!@.fa-google:before*/.fa-google.sc-mge-view:before{content:\"\\f1a0\"}/*!@.fa-google-drive:before*/.fa-google-drive.sc-mge-view:before{content:\"\\f3aa\"}/*!@.fa-google-pay:before*/.fa-google-pay.sc-mge-view:before{content:\"\\e079\"}/*!@.fa-google-play:before*/.fa-google-play.sc-mge-view:before{content:\"\\f3ab\"}/*!@.fa-google-plus:before*/.fa-google-plus.sc-mge-view:before{content:\"\\f2b3\"}/*!@.fa-google-plus-g:before*/.fa-google-plus-g.sc-mge-view:before{content:\"\\f0d5\"}/*!@.fa-google-plus-square:before*/.fa-google-plus-square.sc-mge-view:before{content:\"\\f0d4\"}/*!@.fa-google-wallet:before*/.fa-google-wallet.sc-mge-view:before{content:\"\\f1ee\"}/*!@.fa-gopuram:before*/.fa-gopuram.sc-mge-view:before{content:\"\\f664\"}/*!@.fa-graduation-cap:before*/.fa-graduation-cap.sc-mge-view:before{content:\"\\f19d\"}/*!@.fa-gratipay:before*/.fa-gratipay.sc-mge-view:before{content:\"\\f184\"}/*!@.fa-grav:before*/.fa-grav.sc-mge-view:before{content:\"\\f2d6\"}/*!@.fa-greater-than:before*/.fa-greater-than.sc-mge-view:before{content:\"\\f531\"}/*!@.fa-greater-than-equal:before*/.fa-greater-than-equal.sc-mge-view:before{content:\"\\f532\"}/*!@.fa-grimace:before*/.fa-grimace.sc-mge-view:before{content:\"\\f57f\"}/*!@.fa-grin:before*/.fa-grin.sc-mge-view:before{content:\"\\f580\"}/*!@.fa-grin-alt:before*/.fa-grin-alt.sc-mge-view:before{content:\"\\f581\"}/*!@.fa-grin-beam:before*/.fa-grin-beam.sc-mge-view:before{content:\"\\f582\"}/*!@.fa-grin-beam-sweat:before*/.fa-grin-beam-sweat.sc-mge-view:before{content:\"\\f583\"}/*!@.fa-grin-hearts:before*/.fa-grin-hearts.sc-mge-view:before{content:\"\\f584\"}/*!@.fa-grin-squint:before*/.fa-grin-squint.sc-mge-view:before{content:\"\\f585\"}/*!@.fa-grin-squint-tears:before*/.fa-grin-squint-tears.sc-mge-view:before{content:\"\\f586\"}/*!@.fa-grin-stars:before*/.fa-grin-stars.sc-mge-view:before{content:\"\\f587\"}/*!@.fa-grin-tears:before*/.fa-grin-tears.sc-mge-view:before{content:\"\\f588\"}/*!@.fa-grin-tongue:before*/.fa-grin-tongue.sc-mge-view:before{content:\"\\f589\"}/*!@.fa-grin-tongue-squint:before*/.fa-grin-tongue-squint.sc-mge-view:before{content:\"\\f58a\"}/*!@.fa-grin-tongue-wink:before*/.fa-grin-tongue-wink.sc-mge-view:before{content:\"\\f58b\"}/*!@.fa-grin-wink:before*/.fa-grin-wink.sc-mge-view:before{content:\"\\f58c\"}/*!@.fa-grip-horizontal:before*/.fa-grip-horizontal.sc-mge-view:before{content:\"\\f58d\"}/*!@.fa-grip-lines:before*/.fa-grip-lines.sc-mge-view:before{content:\"\\f7a4\"}/*!@.fa-grip-lines-vertical:before*/.fa-grip-lines-vertical.sc-mge-view:before{content:\"\\f7a5\"}/*!@.fa-grip-vertical:before*/.fa-grip-vertical.sc-mge-view:before{content:\"\\f58e\"}/*!@.fa-gripfire:before*/.fa-gripfire.sc-mge-view:before{content:\"\\f3ac\"}/*!@.fa-grunt:before*/.fa-grunt.sc-mge-view:before{content:\"\\f3ad\"}/*!@.fa-guilded:before*/.fa-guilded.sc-mge-view:before{content:\"\\e07e\"}/*!@.fa-guitar:before*/.fa-guitar.sc-mge-view:before{content:\"\\f7a6\"}/*!@.fa-gulp:before*/.fa-gulp.sc-mge-view:before{content:\"\\f3ae\"}/*!@.fa-h-square:before*/.fa-h-square.sc-mge-view:before{content:\"\\f0fd\"}/*!@.fa-hacker-news:before*/.fa-hacker-news.sc-mge-view:before{content:\"\\f1d4\"}/*!@.fa-hacker-news-square:before*/.fa-hacker-news-square.sc-mge-view:before{content:\"\\f3af\"}/*!@.fa-hackerrank:before*/.fa-hackerrank.sc-mge-view:before{content:\"\\f5f7\"}/*!@.fa-hamburger:before*/.fa-hamburger.sc-mge-view:before{content:\"\\f805\"}/*!@.fa-hammer:before*/.fa-hammer.sc-mge-view:before{content:\"\\f6e3\"}/*!@.fa-hamsa:before*/.fa-hamsa.sc-mge-view:before{content:\"\\f665\"}/*!@.fa-hand-holding:before*/.fa-hand-holding.sc-mge-view:before{content:\"\\f4bd\"}/*!@.fa-hand-holding-heart:before*/.fa-hand-holding-heart.sc-mge-view:before{content:\"\\f4be\"}/*!@.fa-hand-holding-medical:before*/.fa-hand-holding-medical.sc-mge-view:before{content:\"\\e05c\"}/*!@.fa-hand-holding-usd:before*/.fa-hand-holding-usd.sc-mge-view:before{content:\"\\f4c0\"}/*!@.fa-hand-holding-water:before*/.fa-hand-holding-water.sc-mge-view:before{content:\"\\f4c1\"}/*!@.fa-hand-lizard:before*/.fa-hand-lizard.sc-mge-view:before{content:\"\\f258\"}/*!@.fa-hand-middle-finger:before*/.fa-hand-middle-finger.sc-mge-view:before{content:\"\\f806\"}/*!@.fa-hand-paper:before*/.fa-hand-paper.sc-mge-view:before{content:\"\\f256\"}/*!@.fa-hand-peace:before*/.fa-hand-peace.sc-mge-view:before{content:\"\\f25b\"}/*!@.fa-hand-point-down:before*/.fa-hand-point-down.sc-mge-view:before{content:\"\\f0a7\"}/*!@.fa-hand-point-left:before*/.fa-hand-point-left.sc-mge-view:before{content:\"\\f0a5\"}/*!@.fa-hand-point-right:before*/.fa-hand-point-right.sc-mge-view:before{content:\"\\f0a4\"}/*!@.fa-hand-point-up:before*/.fa-hand-point-up.sc-mge-view:before{content:\"\\f0a6\"}/*!@.fa-hand-pointer:before*/.fa-hand-pointer.sc-mge-view:before{content:\"\\f25a\"}/*!@.fa-hand-rock:before*/.fa-hand-rock.sc-mge-view:before{content:\"\\f255\"}/*!@.fa-hand-scissors:before*/.fa-hand-scissors.sc-mge-view:before{content:\"\\f257\"}/*!@.fa-hand-sparkles:before*/.fa-hand-sparkles.sc-mge-view:before{content:\"\\e05d\"}/*!@.fa-hand-spock:before*/.fa-hand-spock.sc-mge-view:before{content:\"\\f259\"}/*!@.fa-hands:before*/.fa-hands.sc-mge-view:before{content:\"\\f4c2\"}/*!@.fa-hands-helping:before*/.fa-hands-helping.sc-mge-view:before{content:\"\\f4c4\"}/*!@.fa-hands-wash:before*/.fa-hands-wash.sc-mge-view:before{content:\"\\e05e\"}/*!@.fa-handshake:before*/.fa-handshake.sc-mge-view:before{content:\"\\f2b5\"}/*!@.fa-handshake-alt-slash:before*/.fa-handshake-alt-slash.sc-mge-view:before{content:\"\\e05f\"}/*!@.fa-handshake-slash:before*/.fa-handshake-slash.sc-mge-view:before{content:\"\\e060\"}/*!@.fa-hanukiah:before*/.fa-hanukiah.sc-mge-view:before{content:\"\\f6e6\"}/*!@.fa-hard-hat:before*/.fa-hard-hat.sc-mge-view:before{content:\"\\f807\"}/*!@.fa-hashtag:before*/.fa-hashtag.sc-mge-view:before{content:\"\\f292\"}/*!@.fa-hat-cowboy:before*/.fa-hat-cowboy.sc-mge-view:before{content:\"\\f8c0\"}/*!@.fa-hat-cowboy-side:before*/.fa-hat-cowboy-side.sc-mge-view:before{content:\"\\f8c1\"}/*!@.fa-hat-wizard:before*/.fa-hat-wizard.sc-mge-view:before{content:\"\\f6e8\"}/*!@.fa-hdd:before*/.fa-hdd.sc-mge-view:before{content:\"\\f0a0\"}/*!@.fa-head-side-cough:before*/.fa-head-side-cough.sc-mge-view:before{content:\"\\e061\"}/*!@.fa-head-side-cough-slash:before*/.fa-head-side-cough-slash.sc-mge-view:before{content:\"\\e062\"}/*!@.fa-head-side-mask:before*/.fa-head-side-mask.sc-mge-view:before{content:\"\\e063\"}/*!@.fa-head-side-virus:before*/.fa-head-side-virus.sc-mge-view:before{content:\"\\e064\"}/*!@.fa-heading:before*/.fa-heading.sc-mge-view:before{content:\"\\f1dc\"}/*!@.fa-headphones:before*/.fa-headphones.sc-mge-view:before{content:\"\\f025\"}/*!@.fa-headphones-alt:before*/.fa-headphones-alt.sc-mge-view:before{content:\"\\f58f\"}/*!@.fa-headset:before*/.fa-headset.sc-mge-view:before{content:\"\\f590\"}/*!@.fa-heart:before*/.fa-heart.sc-mge-view:before{content:\"\\f004\"}/*!@.fa-heart-broken:before*/.fa-heart-broken.sc-mge-view:before{content:\"\\f7a9\"}/*!@.fa-heartbeat:before*/.fa-heartbeat.sc-mge-view:before{content:\"\\f21e\"}/*!@.fa-helicopter:before*/.fa-helicopter.sc-mge-view:before{content:\"\\f533\"}/*!@.fa-highlighter:before*/.fa-highlighter.sc-mge-view:before{content:\"\\f591\"}/*!@.fa-hiking:before*/.fa-hiking.sc-mge-view:before{content:\"\\f6ec\"}/*!@.fa-hippo:before*/.fa-hippo.sc-mge-view:before{content:\"\\f6ed\"}/*!@.fa-hips:before*/.fa-hips.sc-mge-view:before{content:\"\\f452\"}/*!@.fa-hire-a-helper:before*/.fa-hire-a-helper.sc-mge-view:before{content:\"\\f3b0\"}/*!@.fa-history:before*/.fa-history.sc-mge-view:before{content:\"\\f1da\"}/*!@.fa-hive:before*/.fa-hive.sc-mge-view:before{content:\"\\e07f\"}/*!@.fa-hockey-puck:before*/.fa-hockey-puck.sc-mge-view:before{content:\"\\f453\"}/*!@.fa-holly-berry:before*/.fa-holly-berry.sc-mge-view:before{content:\"\\f7aa\"}/*!@.fa-home:before*/.fa-home.sc-mge-view:before{content:\"\\f015\"}/*!@.fa-hooli:before*/.fa-hooli.sc-mge-view:before{content:\"\\f427\"}/*!@.fa-hornbill:before*/.fa-hornbill.sc-mge-view:before{content:\"\\f592\"}/*!@.fa-horse:before*/.fa-horse.sc-mge-view:before{content:\"\\f6f0\"}/*!@.fa-horse-head:before*/.fa-horse-head.sc-mge-view:before{content:\"\\f7ab\"}/*!@.fa-hospital:before*/.fa-hospital.sc-mge-view:before{content:\"\\f0f8\"}/*!@.fa-hospital-alt:before*/.fa-hospital-alt.sc-mge-view:before{content:\"\\f47d\"}/*!@.fa-hospital-symbol:before*/.fa-hospital-symbol.sc-mge-view:before{content:\"\\f47e\"}/*!@.fa-hospital-user:before*/.fa-hospital-user.sc-mge-view:before{content:\"\\f80d\"}/*!@.fa-hot-tub:before*/.fa-hot-tub.sc-mge-view:before{content:\"\\f593\"}/*!@.fa-hotdog:before*/.fa-hotdog.sc-mge-view:before{content:\"\\f80f\"}/*!@.fa-hotel:before*/.fa-hotel.sc-mge-view:before{content:\"\\f594\"}/*!@.fa-hotjar:before*/.fa-hotjar.sc-mge-view:before{content:\"\\f3b1\"}/*!@.fa-hourglass:before*/.fa-hourglass.sc-mge-view:before{content:\"\\f254\"}/*!@.fa-hourglass-end:before*/.fa-hourglass-end.sc-mge-view:before{content:\"\\f253\"}/*!@.fa-hourglass-half:before*/.fa-hourglass-half.sc-mge-view:before{content:\"\\f252\"}/*!@.fa-hourglass-start:before*/.fa-hourglass-start.sc-mge-view:before{content:\"\\f251\"}/*!@.fa-house-damage:before*/.fa-house-damage.sc-mge-view:before{content:\"\\f6f1\"}/*!@.fa-house-user:before*/.fa-house-user.sc-mge-view:before{content:\"\\e065\"}/*!@.fa-houzz:before*/.fa-houzz.sc-mge-view:before{content:\"\\f27c\"}/*!@.fa-hryvnia:before*/.fa-hryvnia.sc-mge-view:before{content:\"\\f6f2\"}/*!@.fa-html5:before*/.fa-html5.sc-mge-view:before{content:\"\\f13b\"}/*!@.fa-hubspot:before*/.fa-hubspot.sc-mge-view:before{content:\"\\f3b2\"}/*!@.fa-i-cursor:before*/.fa-i-cursor.sc-mge-view:before{content:\"\\f246\"}/*!@.fa-ice-cream:before*/.fa-ice-cream.sc-mge-view:before{content:\"\\f810\"}/*!@.fa-icicles:before*/.fa-icicles.sc-mge-view:before{content:\"\\f7ad\"}/*!@.fa-icons:before*/.fa-icons.sc-mge-view:before{content:\"\\f86d\"}/*!@.fa-id-badge:before*/.fa-id-badge.sc-mge-view:before{content:\"\\f2c1\"}/*!@.fa-id-card:before*/.fa-id-card.sc-mge-view:before{content:\"\\f2c2\"}/*!@.fa-id-card-alt:before*/.fa-id-card-alt.sc-mge-view:before{content:\"\\f47f\"}/*!@.fa-ideal:before*/.fa-ideal.sc-mge-view:before{content:\"\\e013\"}/*!@.fa-igloo:before*/.fa-igloo.sc-mge-view:before{content:\"\\f7ae\"}/*!@.fa-image:before*/.fa-image.sc-mge-view:before{content:\"\\f03e\"}/*!@.fa-images:before*/.fa-images.sc-mge-view:before{content:\"\\f302\"}/*!@.fa-imdb:before*/.fa-imdb.sc-mge-view:before{content:\"\\f2d8\"}/*!@.fa-inbox:before*/.fa-inbox.sc-mge-view:before{content:\"\\f01c\"}/*!@.fa-indent:before*/.fa-indent.sc-mge-view:before{content:\"\\f03c\"}/*!@.fa-industry:before*/.fa-industry.sc-mge-view:before{content:\"\\f275\"}/*!@.fa-infinity:before*/.fa-infinity.sc-mge-view:before{content:\"\\f534\"}/*!@.fa-info:before*/.fa-info.sc-mge-view:before{content:\"\\f129\"}/*!@.fa-info-circle:before*/.fa-info-circle.sc-mge-view:before{content:\"\\f05a\"}/*!@.fa-innosoft:before*/.fa-innosoft.sc-mge-view:before{content:\"\\e080\"}/*!@.fa-instagram:before*/.fa-instagram.sc-mge-view:before{content:\"\\f16d\"}/*!@.fa-instagram-square:before*/.fa-instagram-square.sc-mge-view:before{content:\"\\e055\"}/*!@.fa-instalod:before*/.fa-instalod.sc-mge-view:before{content:\"\\e081\"}/*!@.fa-intercom:before*/.fa-intercom.sc-mge-view:before{content:\"\\f7af\"}/*!@.fa-internet-explorer:before*/.fa-internet-explorer.sc-mge-view:before{content:\"\\f26b\"}/*!@.fa-invision:before*/.fa-invision.sc-mge-view:before{content:\"\\f7b0\"}/*!@.fa-ioxhost:before*/.fa-ioxhost.sc-mge-view:before{content:\"\\f208\"}/*!@.fa-italic:before*/.fa-italic.sc-mge-view:before{content:\"\\f033\"}/*!@.fa-itch-io:before*/.fa-itch-io.sc-mge-view:before{content:\"\\f83a\"}/*!@.fa-itunes:before*/.fa-itunes.sc-mge-view:before{content:\"\\f3b4\"}/*!@.fa-itunes-note:before*/.fa-itunes-note.sc-mge-view:before{content:\"\\f3b5\"}/*!@.fa-java:before*/.fa-java.sc-mge-view:before{content:\"\\f4e4\"}/*!@.fa-jedi:before*/.fa-jedi.sc-mge-view:before{content:\"\\f669\"}/*!@.fa-jedi-order:before*/.fa-jedi-order.sc-mge-view:before{content:\"\\f50e\"}/*!@.fa-jenkins:before*/.fa-jenkins.sc-mge-view:before{content:\"\\f3b6\"}/*!@.fa-jira:before*/.fa-jira.sc-mge-view:before{content:\"\\f7b1\"}/*!@.fa-joget:before*/.fa-joget.sc-mge-view:before{content:\"\\f3b7\"}/*!@.fa-joint:before*/.fa-joint.sc-mge-view:before{content:\"\\f595\"}/*!@.fa-joomla:before*/.fa-joomla.sc-mge-view:before{content:\"\\f1aa\"}/*!@.fa-journal-whills:before*/.fa-journal-whills.sc-mge-view:before{content:\"\\f66a\"}/*!@.fa-js:before*/.fa-js.sc-mge-view:before{content:\"\\f3b8\"}/*!@.fa-js-square:before*/.fa-js-square.sc-mge-view:before{content:\"\\f3b9\"}/*!@.fa-jsfiddle:before*/.fa-jsfiddle.sc-mge-view:before{content:\"\\f1cc\"}/*!@.fa-kaaba:before*/.fa-kaaba.sc-mge-view:before{content:\"\\f66b\"}/*!@.fa-kaggle:before*/.fa-kaggle.sc-mge-view:before{content:\"\\f5fa\"}/*!@.fa-key:before*/.fa-key.sc-mge-view:before{content:\"\\f084\"}/*!@.fa-keybase:before*/.fa-keybase.sc-mge-view:before{content:\"\\f4f5\"}/*!@.fa-keyboard:before*/.fa-keyboard.sc-mge-view:before{content:\"\\f11c\"}/*!@.fa-keycdn:before*/.fa-keycdn.sc-mge-view:before{content:\"\\f3ba\"}/*!@.fa-khanda:before*/.fa-khanda.sc-mge-view:before{content:\"\\f66d\"}/*!@.fa-kickstarter:before*/.fa-kickstarter.sc-mge-view:before{content:\"\\f3bb\"}/*!@.fa-kickstarter-k:before*/.fa-kickstarter-k.sc-mge-view:before{content:\"\\f3bc\"}/*!@.fa-kiss:before*/.fa-kiss.sc-mge-view:before{content:\"\\f596\"}/*!@.fa-kiss-beam:before*/.fa-kiss-beam.sc-mge-view:before{content:\"\\f597\"}/*!@.fa-kiss-wink-heart:before*/.fa-kiss-wink-heart.sc-mge-view:before{content:\"\\f598\"}/*!@.fa-kiwi-bird:before*/.fa-kiwi-bird.sc-mge-view:before{content:\"\\f535\"}/*!@.fa-korvue:before*/.fa-korvue.sc-mge-view:before{content:\"\\f42f\"}/*!@.fa-landmark:before*/.fa-landmark.sc-mge-view:before{content:\"\\f66f\"}/*!@.fa-language:before*/.fa-language.sc-mge-view:before{content:\"\\f1ab\"}/*!@.fa-laptop:before*/.fa-laptop.sc-mge-view:before{content:\"\\f109\"}/*!@.fa-laptop-code:before*/.fa-laptop-code.sc-mge-view:before{content:\"\\f5fc\"}/*!@.fa-laptop-house:before*/.fa-laptop-house.sc-mge-view:before{content:\"\\e066\"}/*!@.fa-laptop-medical:before*/.fa-laptop-medical.sc-mge-view:before{content:\"\\f812\"}/*!@.fa-laravel:before*/.fa-laravel.sc-mge-view:before{content:\"\\f3bd\"}/*!@.fa-lastfm:before*/.fa-lastfm.sc-mge-view:before{content:\"\\f202\"}/*!@.fa-lastfm-square:before*/.fa-lastfm-square.sc-mge-view:before{content:\"\\f203\"}/*!@.fa-laugh:before*/.fa-laugh.sc-mge-view:before{content:\"\\f599\"}/*!@.fa-laugh-beam:before*/.fa-laugh-beam.sc-mge-view:before{content:\"\\f59a\"}/*!@.fa-laugh-squint:before*/.fa-laugh-squint.sc-mge-view:before{content:\"\\f59b\"}/*!@.fa-laugh-wink:before*/.fa-laugh-wink.sc-mge-view:before{content:\"\\f59c\"}/*!@.fa-layer-group:before*/.fa-layer-group.sc-mge-view:before{content:\"\\f5fd\"}/*!@.fa-leaf:before*/.fa-leaf.sc-mge-view:before{content:\"\\f06c\"}/*!@.fa-leanpub:before*/.fa-leanpub.sc-mge-view:before{content:\"\\f212\"}/*!@.fa-lemon:before*/.fa-lemon.sc-mge-view:before{content:\"\\f094\"}/*!@.fa-less:before*/.fa-less.sc-mge-view:before{content:\"\\f41d\"}/*!@.fa-less-than:before*/.fa-less-than.sc-mge-view:before{content:\"\\f536\"}/*!@.fa-less-than-equal:before*/.fa-less-than-equal.sc-mge-view:before{content:\"\\f537\"}/*!@.fa-level-down-alt:before*/.fa-level-down-alt.sc-mge-view:before{content:\"\\f3be\"}/*!@.fa-level-up-alt:before*/.fa-level-up-alt.sc-mge-view:before{content:\"\\f3bf\"}/*!@.fa-life-ring:before*/.fa-life-ring.sc-mge-view:before{content:\"\\f1cd\"}/*!@.fa-lightbulb:before*/.fa-lightbulb.sc-mge-view:before{content:\"\\f0eb\"}/*!@.fa-line:before*/.fa-line.sc-mge-view:before{content:\"\\f3c0\"}/*!@.fa-link:before*/.fa-link.sc-mge-view:before{content:\"\\f0c1\"}/*!@.fa-linkedin:before*/.fa-linkedin.sc-mge-view:before{content:\"\\f08c\"}/*!@.fa-linkedin-in:before*/.fa-linkedin-in.sc-mge-view:before{content:\"\\f0e1\"}/*!@.fa-linode:before*/.fa-linode.sc-mge-view:before{content:\"\\f2b8\"}/*!@.fa-linux:before*/.fa-linux.sc-mge-view:before{content:\"\\f17c\"}/*!@.fa-lira-sign:before*/.fa-lira-sign.sc-mge-view:before{content:\"\\f195\"}/*!@.fa-list:before*/.fa-list.sc-mge-view:before{content:\"\\f03a\"}/*!@.fa-list-alt:before*/.fa-list-alt.sc-mge-view:before{content:\"\\f022\"}/*!@.fa-list-ol:before*/.fa-list-ol.sc-mge-view:before{content:\"\\f0cb\"}/*!@.fa-list-ul:before*/.fa-list-ul.sc-mge-view:before{content:\"\\f0ca\"}/*!@.fa-location-arrow:before*/.fa-location-arrow.sc-mge-view:before{content:\"\\f124\"}/*!@.fa-lock:before*/.fa-lock.sc-mge-view:before{content:\"\\f023\"}/*!@.fa-lock-open:before*/.fa-lock-open.sc-mge-view:before{content:\"\\f3c1\"}/*!@.fa-long-arrow-alt-down:before*/.fa-long-arrow-alt-down.sc-mge-view:before{content:\"\\f309\"}/*!@.fa-long-arrow-alt-left:before*/.fa-long-arrow-alt-left.sc-mge-view:before{content:\"\\f30a\"}/*!@.fa-long-arrow-alt-right:before*/.fa-long-arrow-alt-right.sc-mge-view:before{content:\"\\f30b\"}/*!@.fa-long-arrow-alt-up:before*/.fa-long-arrow-alt-up.sc-mge-view:before{content:\"\\f30c\"}/*!@.fa-low-vision:before*/.fa-low-vision.sc-mge-view:before{content:\"\\f2a8\"}/*!@.fa-luggage-cart:before*/.fa-luggage-cart.sc-mge-view:before{content:\"\\f59d\"}/*!@.fa-lungs:before*/.fa-lungs.sc-mge-view:before{content:\"\\f604\"}/*!@.fa-lungs-virus:before*/.fa-lungs-virus.sc-mge-view:before{content:\"\\e067\"}/*!@.fa-lyft:before*/.fa-lyft.sc-mge-view:before{content:\"\\f3c3\"}/*!@.fa-magento:before*/.fa-magento.sc-mge-view:before{content:\"\\f3c4\"}/*!@.fa-magic:before*/.fa-magic.sc-mge-view:before{content:\"\\f0d0\"}/*!@.fa-magnet:before*/.fa-magnet.sc-mge-view:before{content:\"\\f076\"}/*!@.fa-mail-bulk:before*/.fa-mail-bulk.sc-mge-view:before{content:\"\\f674\"}/*!@.fa-mailchimp:before*/.fa-mailchimp.sc-mge-view:before{content:\"\\f59e\"}/*!@.fa-male:before*/.fa-male.sc-mge-view:before{content:\"\\f183\"}/*!@.fa-mandalorian:before*/.fa-mandalorian.sc-mge-view:before{content:\"\\f50f\"}/*!@.fa-map:before*/.fa-map.sc-mge-view:before{content:\"\\f279\"}/*!@.fa-map-marked:before*/.fa-map-marked.sc-mge-view:before{content:\"\\f59f\"}/*!@.fa-map-marked-alt:before*/.fa-map-marked-alt.sc-mge-view:before{content:\"\\f5a0\"}/*!@.fa-map-marker:before*/.fa-map-marker.sc-mge-view:before{content:\"\\f041\"}/*!@.fa-map-marker-alt:before*/.fa-map-marker-alt.sc-mge-view:before{content:\"\\f3c5\"}/*!@.fa-map-pin:before*/.fa-map-pin.sc-mge-view:before{content:\"\\f276\"}/*!@.fa-map-signs:before*/.fa-map-signs.sc-mge-view:before{content:\"\\f277\"}/*!@.fa-markdown:before*/.fa-markdown.sc-mge-view:before{content:\"\\f60f\"}/*!@.fa-marker:before*/.fa-marker.sc-mge-view:before{content:\"\\f5a1\"}/*!@.fa-mars:before*/.fa-mars.sc-mge-view:before{content:\"\\f222\"}/*!@.fa-mars-double:before*/.fa-mars-double.sc-mge-view:before{content:\"\\f227\"}/*!@.fa-mars-stroke:before*/.fa-mars-stroke.sc-mge-view:before{content:\"\\f229\"}/*!@.fa-mars-stroke-h:before*/.fa-mars-stroke-h.sc-mge-view:before{content:\"\\f22b\"}/*!@.fa-mars-stroke-v:before*/.fa-mars-stroke-v.sc-mge-view:before{content:\"\\f22a\"}/*!@.fa-mask:before*/.fa-mask.sc-mge-view:before{content:\"\\f6fa\"}/*!@.fa-mastodon:before*/.fa-mastodon.sc-mge-view:before{content:\"\\f4f6\"}/*!@.fa-maxcdn:before*/.fa-maxcdn.sc-mge-view:before{content:\"\\f136\"}/*!@.fa-mdb:before*/.fa-mdb.sc-mge-view:before{content:\"\\f8ca\"}/*!@.fa-medal:before*/.fa-medal.sc-mge-view:before{content:\"\\f5a2\"}/*!@.fa-medapps:before*/.fa-medapps.sc-mge-view:before{content:\"\\f3c6\"}/*!@.fa-medium:before*/.fa-medium.sc-mge-view:before{content:\"\\f23a\"}/*!@.fa-medium-m:before*/.fa-medium-m.sc-mge-view:before{content:\"\\f3c7\"}/*!@.fa-medkit:before*/.fa-medkit.sc-mge-view:before{content:\"\\f0fa\"}/*!@.fa-medrt:before*/.fa-medrt.sc-mge-view:before{content:\"\\f3c8\"}/*!@.fa-meetup:before*/.fa-meetup.sc-mge-view:before{content:\"\\f2e0\"}/*!@.fa-megaport:before*/.fa-megaport.sc-mge-view:before{content:\"\\f5a3\"}/*!@.fa-meh:before*/.fa-meh.sc-mge-view:before{content:\"\\f11a\"}/*!@.fa-meh-blank:before*/.fa-meh-blank.sc-mge-view:before{content:\"\\f5a4\"}/*!@.fa-meh-rolling-eyes:before*/.fa-meh-rolling-eyes.sc-mge-view:before{content:\"\\f5a5\"}/*!@.fa-memory:before*/.fa-memory.sc-mge-view:before{content:\"\\f538\"}/*!@.fa-mendeley:before*/.fa-mendeley.sc-mge-view:before{content:\"\\f7b3\"}/*!@.fa-menorah:before*/.fa-menorah.sc-mge-view:before{content:\"\\f676\"}/*!@.fa-mercury:before*/.fa-mercury.sc-mge-view:before{content:\"\\f223\"}/*!@.fa-meteor:before*/.fa-meteor.sc-mge-view:before{content:\"\\f753\"}/*!@.fa-microblog:before*/.fa-microblog.sc-mge-view:before{content:\"\\e01a\"}/*!@.fa-microchip:before*/.fa-microchip.sc-mge-view:before{content:\"\\f2db\"}/*!@.fa-microphone:before*/.fa-microphone.sc-mge-view:before{content:\"\\f130\"}/*!@.fa-microphone-alt:before*/.fa-microphone-alt.sc-mge-view:before{content:\"\\f3c9\"}/*!@.fa-microphone-alt-slash:before*/.fa-microphone-alt-slash.sc-mge-view:before{content:\"\\f539\"}/*!@.fa-microphone-slash:before*/.fa-microphone-slash.sc-mge-view:before{content:\"\\f131\"}/*!@.fa-microscope:before*/.fa-microscope.sc-mge-view:before{content:\"\\f610\"}/*!@.fa-microsoft:before*/.fa-microsoft.sc-mge-view:before{content:\"\\f3ca\"}/*!@.fa-minus:before*/.fa-minus.sc-mge-view:before{content:\"\\f068\"}/*!@.fa-minus-circle:before*/.fa-minus-circle.sc-mge-view:before{content:\"\\f056\"}/*!@.fa-minus-square:before*/.fa-minus-square.sc-mge-view:before{content:\"\\f146\"}/*!@.fa-mitten:before*/.fa-mitten.sc-mge-view:before{content:\"\\f7b5\"}/*!@.fa-mix:before*/.fa-mix.sc-mge-view:before{content:\"\\f3cb\"}/*!@.fa-mixcloud:before*/.fa-mixcloud.sc-mge-view:before{content:\"\\f289\"}/*!@.fa-mixer:before*/.fa-mixer.sc-mge-view:before{content:\"\\e056\"}/*!@.fa-mizuni:before*/.fa-mizuni.sc-mge-view:before{content:\"\\f3cc\"}/*!@.fa-mobile:before*/.fa-mobile.sc-mge-view:before{content:\"\\f10b\"}/*!@.fa-mobile-alt:before*/.fa-mobile-alt.sc-mge-view:before{content:\"\\f3cd\"}/*!@.fa-modx:before*/.fa-modx.sc-mge-view:before{content:\"\\f285\"}/*!@.fa-monero:before*/.fa-monero.sc-mge-view:before{content:\"\\f3d0\"}/*!@.fa-money-bill:before*/.fa-money-bill.sc-mge-view:before{content:\"\\f0d6\"}/*!@.fa-money-bill-alt:before*/.fa-money-bill-alt.sc-mge-view:before{content:\"\\f3d1\"}/*!@.fa-money-bill-wave:before*/.fa-money-bill-wave.sc-mge-view:before{content:\"\\f53a\"}/*!@.fa-money-bill-wave-alt:before*/.fa-money-bill-wave-alt.sc-mge-view:before{content:\"\\f53b\"}/*!@.fa-money-check:before*/.fa-money-check.sc-mge-view:before{content:\"\\f53c\"}/*!@.fa-money-check-alt:before*/.fa-money-check-alt.sc-mge-view:before{content:\"\\f53d\"}/*!@.fa-monument:before*/.fa-monument.sc-mge-view:before{content:\"\\f5a6\"}/*!@.fa-moon:before*/.fa-moon.sc-mge-view:before{content:\"\\f186\"}/*!@.fa-mortar-pestle:before*/.fa-mortar-pestle.sc-mge-view:before{content:\"\\f5a7\"}/*!@.fa-mosque:before*/.fa-mosque.sc-mge-view:before{content:\"\\f678\"}/*!@.fa-motorcycle:before*/.fa-motorcycle.sc-mge-view:before{content:\"\\f21c\"}/*!@.fa-mountain:before*/.fa-mountain.sc-mge-view:before{content:\"\\f6fc\"}/*!@.fa-mouse:before*/.fa-mouse.sc-mge-view:before{content:\"\\f8cc\"}/*!@.fa-mouse-pointer:before*/.fa-mouse-pointer.sc-mge-view:before{content:\"\\f245\"}/*!@.fa-mug-hot:before*/.fa-mug-hot.sc-mge-view:before{content:\"\\f7b6\"}/*!@.fa-music:before*/.fa-music.sc-mge-view:before{content:\"\\f001\"}/*!@.fa-napster:before*/.fa-napster.sc-mge-view:before{content:\"\\f3d2\"}/*!@.fa-neos:before*/.fa-neos.sc-mge-view:before{content:\"\\f612\"}/*!@.fa-network-wired:before*/.fa-network-wired.sc-mge-view:before{content:\"\\f6ff\"}/*!@.fa-neuter:before*/.fa-neuter.sc-mge-view:before{content:\"\\f22c\"}/*!@.fa-newspaper:before*/.fa-newspaper.sc-mge-view:before{content:\"\\f1ea\"}/*!@.fa-nimblr:before*/.fa-nimblr.sc-mge-view:before{content:\"\\f5a8\"}/*!@.fa-node:before*/.fa-node.sc-mge-view:before{content:\"\\f419\"}/*!@.fa-node-js:before*/.fa-node-js.sc-mge-view:before{content:\"\\f3d3\"}/*!@.fa-not-equal:before*/.fa-not-equal.sc-mge-view:before{content:\"\\f53e\"}/*!@.fa-notes-medical:before*/.fa-notes-medical.sc-mge-view:before{content:\"\\f481\"}/*!@.fa-npm:before*/.fa-npm.sc-mge-view:before{content:\"\\f3d4\"}/*!@.fa-ns8:before*/.fa-ns8.sc-mge-view:before{content:\"\\f3d5\"}/*!@.fa-nutritionix:before*/.fa-nutritionix.sc-mge-view:before{content:\"\\f3d6\"}/*!@.fa-object-group:before*/.fa-object-group.sc-mge-view:before{content:\"\\f247\"}/*!@.fa-object-ungroup:before*/.fa-object-ungroup.sc-mge-view:before{content:\"\\f248\"}/*!@.fa-octopus-deploy:before*/.fa-octopus-deploy.sc-mge-view:before{content:\"\\e082\"}/*!@.fa-odnoklassniki:before*/.fa-odnoklassniki.sc-mge-view:before{content:\"\\f263\"}/*!@.fa-odnoklassniki-square:before*/.fa-odnoklassniki-square.sc-mge-view:before{content:\"\\f264\"}/*!@.fa-oil-can:before*/.fa-oil-can.sc-mge-view:before{content:\"\\f613\"}/*!@.fa-old-republic:before*/.fa-old-republic.sc-mge-view:before{content:\"\\f510\"}/*!@.fa-om:before*/.fa-om.sc-mge-view:before{content:\"\\f679\"}/*!@.fa-opencart:before*/.fa-opencart.sc-mge-view:before{content:\"\\f23d\"}/*!@.fa-openid:before*/.fa-openid.sc-mge-view:before{content:\"\\f19b\"}/*!@.fa-opera:before*/.fa-opera.sc-mge-view:before{content:\"\\f26a\"}/*!@.fa-optin-monster:before*/.fa-optin-monster.sc-mge-view:before{content:\"\\f23c\"}/*!@.fa-orcid:before*/.fa-orcid.sc-mge-view:before{content:\"\\f8d2\"}/*!@.fa-osi:before*/.fa-osi.sc-mge-view:before{content:\"\\f41a\"}/*!@.fa-otter:before*/.fa-otter.sc-mge-view:before{content:\"\\f700\"}/*!@.fa-outdent:before*/.fa-outdent.sc-mge-view:before{content:\"\\f03b\"}/*!@.fa-page4:before*/.fa-page4.sc-mge-view:before{content:\"\\f3d7\"}/*!@.fa-pagelines:before*/.fa-pagelines.sc-mge-view:before{content:\"\\f18c\"}/*!@.fa-pager:before*/.fa-pager.sc-mge-view:before{content:\"\\f815\"}/*!@.fa-paint-brush:before*/.fa-paint-brush.sc-mge-view:before{content:\"\\f1fc\"}/*!@.fa-paint-roller:before*/.fa-paint-roller.sc-mge-view:before{content:\"\\f5aa\"}/*!@.fa-palette:before*/.fa-palette.sc-mge-view:before{content:\"\\f53f\"}/*!@.fa-palfed:before*/.fa-palfed.sc-mge-view:before{content:\"\\f3d8\"}/*!@.fa-pallet:before*/.fa-pallet.sc-mge-view:before{content:\"\\f482\"}/*!@.fa-paper-plane:before*/.fa-paper-plane.sc-mge-view:before{content:\"\\f1d8\"}/*!@.fa-paperclip:before*/.fa-paperclip.sc-mge-view:before{content:\"\\f0c6\"}/*!@.fa-parachute-box:before*/.fa-parachute-box.sc-mge-view:before{content:\"\\f4cd\"}/*!@.fa-paragraph:before*/.fa-paragraph.sc-mge-view:before{content:\"\\f1dd\"}/*!@.fa-parking:before*/.fa-parking.sc-mge-view:before{content:\"\\f540\"}/*!@.fa-passport:before*/.fa-passport.sc-mge-view:before{content:\"\\f5ab\"}/*!@.fa-pastafarianism:before*/.fa-pastafarianism.sc-mge-view:before{content:\"\\f67b\"}/*!@.fa-paste:before*/.fa-paste.sc-mge-view:before{content:\"\\f0ea\"}/*!@.fa-patreon:before*/.fa-patreon.sc-mge-view:before{content:\"\\f3d9\"}/*!@.fa-pause:before*/.fa-pause.sc-mge-view:before{content:\"\\f04c\"}/*!@.fa-pause-circle:before*/.fa-pause-circle.sc-mge-view:before{content:\"\\f28b\"}/*!@.fa-paw:before*/.fa-paw.sc-mge-view:before{content:\"\\f1b0\"}/*!@.fa-paypal:before*/.fa-paypal.sc-mge-view:before{content:\"\\f1ed\"}/*!@.fa-peace:before*/.fa-peace.sc-mge-view:before{content:\"\\f67c\"}/*!@.fa-pen:before*/.fa-pen.sc-mge-view:before{content:\"\\f304\"}/*!@.fa-pen-alt:before*/.fa-pen-alt.sc-mge-view:before{content:\"\\f305\"}/*!@.fa-pen-fancy:before*/.fa-pen-fancy.sc-mge-view:before{content:\"\\f5ac\"}/*!@.fa-pen-nib:before*/.fa-pen-nib.sc-mge-view:before{content:\"\\f5ad\"}/*!@.fa-pen-square:before*/.fa-pen-square.sc-mge-view:before{content:\"\\f14b\"}/*!@.fa-pencil-alt:before*/.fa-pencil-alt.sc-mge-view:before{content:\"\\f303\"}/*!@.fa-pencil-ruler:before*/.fa-pencil-ruler.sc-mge-view:before{content:\"\\f5ae\"}/*!@.fa-penny-arcade:before*/.fa-penny-arcade.sc-mge-view:before{content:\"\\f704\"}/*!@.fa-people-arrows:before*/.fa-people-arrows.sc-mge-view:before{content:\"\\e068\"}/*!@.fa-people-carry:before*/.fa-people-carry.sc-mge-view:before{content:\"\\f4ce\"}/*!@.fa-pepper-hot:before*/.fa-pepper-hot.sc-mge-view:before{content:\"\\f816\"}/*!@.fa-perbyte:before*/.fa-perbyte.sc-mge-view:before{content:\"\\e083\"}/*!@.fa-percent:before*/.fa-percent.sc-mge-view:before{content:\"\\f295\"}/*!@.fa-percentage:before*/.fa-percentage.sc-mge-view:before{content:\"\\f541\"}/*!@.fa-periscope:before*/.fa-periscope.sc-mge-view:before{content:\"\\f3da\"}/*!@.fa-person-booth:before*/.fa-person-booth.sc-mge-view:before{content:\"\\f756\"}/*!@.fa-phabricator:before*/.fa-phabricator.sc-mge-view:before{content:\"\\f3db\"}/*!@.fa-phoenix-framework:before*/.fa-phoenix-framework.sc-mge-view:before{content:\"\\f3dc\"}/*!@.fa-phoenix-squadron:before*/.fa-phoenix-squadron.sc-mge-view:before{content:\"\\f511\"}/*!@.fa-phone:before*/.fa-phone.sc-mge-view:before{content:\"\\f095\"}/*!@.fa-phone-alt:before*/.fa-phone-alt.sc-mge-view:before{content:\"\\f879\"}/*!@.fa-phone-slash:before*/.fa-phone-slash.sc-mge-view:before{content:\"\\f3dd\"}/*!@.fa-phone-square:before*/.fa-phone-square.sc-mge-view:before{content:\"\\f098\"}/*!@.fa-phone-square-alt:before*/.fa-phone-square-alt.sc-mge-view:before{content:\"\\f87b\"}/*!@.fa-phone-volume:before*/.fa-phone-volume.sc-mge-view:before{content:\"\\f2a0\"}/*!@.fa-photo-video:before*/.fa-photo-video.sc-mge-view:before{content:\"\\f87c\"}/*!@.fa-php:before*/.fa-php.sc-mge-view:before{content:\"\\f457\"}/*!@.fa-pied-piper:before*/.fa-pied-piper.sc-mge-view:before{content:\"\\f2ae\"}/*!@.fa-pied-piper-alt:before*/.fa-pied-piper-alt.sc-mge-view:before{content:\"\\f1a8\"}/*!@.fa-pied-piper-hat:before*/.fa-pied-piper-hat.sc-mge-view:before{content:\"\\f4e5\"}/*!@.fa-pied-piper-pp:before*/.fa-pied-piper-pp.sc-mge-view:before{content:\"\\f1a7\"}/*!@.fa-pied-piper-square:before*/.fa-pied-piper-square.sc-mge-view:before{content:\"\\e01e\"}/*!@.fa-piggy-bank:before*/.fa-piggy-bank.sc-mge-view:before{content:\"\\f4d3\"}/*!@.fa-pills:before*/.fa-pills.sc-mge-view:before{content:\"\\f484\"}/*!@.fa-pinterest:before*/.fa-pinterest.sc-mge-view:before{content:\"\\f0d2\"}/*!@.fa-pinterest-p:before*/.fa-pinterest-p.sc-mge-view:before{content:\"\\f231\"}/*!@.fa-pinterest-square:before*/.fa-pinterest-square.sc-mge-view:before{content:\"\\f0d3\"}/*!@.fa-pizza-slice:before*/.fa-pizza-slice.sc-mge-view:before{content:\"\\f818\"}/*!@.fa-place-of-worship:before*/.fa-place-of-worship.sc-mge-view:before{content:\"\\f67f\"}/*!@.fa-plane:before*/.fa-plane.sc-mge-view:before{content:\"\\f072\"}/*!@.fa-plane-arrival:before*/.fa-plane-arrival.sc-mge-view:before{content:\"\\f5af\"}/*!@.fa-plane-departure:before*/.fa-plane-departure.sc-mge-view:before{content:\"\\f5b0\"}/*!@.fa-plane-slash:before*/.fa-plane-slash.sc-mge-view:before{content:\"\\e069\"}/*!@.fa-play:before*/.fa-play.sc-mge-view:before{content:\"\\f04b\"}/*!@.fa-play-circle:before*/.fa-play-circle.sc-mge-view:before{content:\"\\f144\"}/*!@.fa-playstation:before*/.fa-playstation.sc-mge-view:before{content:\"\\f3df\"}/*!@.fa-plug:before*/.fa-plug.sc-mge-view:before{content:\"\\f1e6\"}/*!@.fa-plus:before*/.fa-plus.sc-mge-view:before{content:\"\\f067\"}/*!@.fa-plus-circle:before*/.fa-plus-circle.sc-mge-view:before{content:\"\\f055\"}/*!@.fa-plus-square:before*/.fa-plus-square.sc-mge-view:before{content:\"\\f0fe\"}/*!@.fa-podcast:before*/.fa-podcast.sc-mge-view:before{content:\"\\f2ce\"}/*!@.fa-poll:before*/.fa-poll.sc-mge-view:before{content:\"\\f681\"}/*!@.fa-poll-h:before*/.fa-poll-h.sc-mge-view:before{content:\"\\f682\"}/*!@.fa-poo:before*/.fa-poo.sc-mge-view:before{content:\"\\f2fe\"}/*!@.fa-poo-storm:before*/.fa-poo-storm.sc-mge-view:before{content:\"\\f75a\"}/*!@.fa-poop:before*/.fa-poop.sc-mge-view:before{content:\"\\f619\"}/*!@.fa-portrait:before*/.fa-portrait.sc-mge-view:before{content:\"\\f3e0\"}/*!@.fa-pound-sign:before*/.fa-pound-sign.sc-mge-view:before{content:\"\\f154\"}/*!@.fa-power-off:before*/.fa-power-off.sc-mge-view:before{content:\"\\f011\"}/*!@.fa-pray:before*/.fa-pray.sc-mge-view:before{content:\"\\f683\"}/*!@.fa-praying-hands:before*/.fa-praying-hands.sc-mge-view:before{content:\"\\f684\"}/*!@.fa-prescription:before*/.fa-prescription.sc-mge-view:before{content:\"\\f5b1\"}/*!@.fa-prescription-bottle:before*/.fa-prescription-bottle.sc-mge-view:before{content:\"\\f485\"}/*!@.fa-prescription-bottle-alt:before*/.fa-prescription-bottle-alt.sc-mge-view:before{content:\"\\f486\"}/*!@.fa-print:before*/.fa-print.sc-mge-view:before{content:\"\\f02f\"}/*!@.fa-procedures:before*/.fa-procedures.sc-mge-view:before{content:\"\\f487\"}/*!@.fa-product-hunt:before*/.fa-product-hunt.sc-mge-view:before{content:\"\\f288\"}/*!@.fa-project-diagram:before*/.fa-project-diagram.sc-mge-view:before{content:\"\\f542\"}/*!@.fa-pump-medical:before*/.fa-pump-medical.sc-mge-view:before{content:\"\\e06a\"}/*!@.fa-pump-soap:before*/.fa-pump-soap.sc-mge-view:before{content:\"\\e06b\"}/*!@.fa-pushed:before*/.fa-pushed.sc-mge-view:before{content:\"\\f3e1\"}/*!@.fa-puzzle-piece:before*/.fa-puzzle-piece.sc-mge-view:before{content:\"\\f12e\"}/*!@.fa-python:before*/.fa-python.sc-mge-view:before{content:\"\\f3e2\"}/*!@.fa-qq:before*/.fa-qq.sc-mge-view:before{content:\"\\f1d6\"}/*!@.fa-qrcode:before*/.fa-qrcode.sc-mge-view:before{content:\"\\f029\"}/*!@.fa-question:before*/.fa-question.sc-mge-view:before{content:\"\\f128\"}/*!@.fa-question-circle:before*/.fa-question-circle.sc-mge-view:before{content:\"\\f059\"}/*!@.fa-quidditch:before*/.fa-quidditch.sc-mge-view:before{content:\"\\f458\"}/*!@.fa-quinscape:before*/.fa-quinscape.sc-mge-view:before{content:\"\\f459\"}/*!@.fa-quora:before*/.fa-quora.sc-mge-view:before{content:\"\\f2c4\"}/*!@.fa-quote-left:before*/.fa-quote-left.sc-mge-view:before{content:\"\\f10d\"}/*!@.fa-quote-right:before*/.fa-quote-right.sc-mge-view:before{content:\"\\f10e\"}/*!@.fa-quran:before*/.fa-quran.sc-mge-view:before{content:\"\\f687\"}/*!@.fa-r-project:before*/.fa-r-project.sc-mge-view:before{content:\"\\f4f7\"}/*!@.fa-radiation:before*/.fa-radiation.sc-mge-view:before{content:\"\\f7b9\"}/*!@.fa-radiation-alt:before*/.fa-radiation-alt.sc-mge-view:before{content:\"\\f7ba\"}/*!@.fa-rainbow:before*/.fa-rainbow.sc-mge-view:before{content:\"\\f75b\"}/*!@.fa-random:before*/.fa-random.sc-mge-view:before{content:\"\\f074\"}/*!@.fa-raspberry-pi:before*/.fa-raspberry-pi.sc-mge-view:before{content:\"\\f7bb\"}/*!@.fa-ravelry:before*/.fa-ravelry.sc-mge-view:before{content:\"\\f2d9\"}/*!@.fa-react:before*/.fa-react.sc-mge-view:before{content:\"\\f41b\"}/*!@.fa-reacteurope:before*/.fa-reacteurope.sc-mge-view:before{content:\"\\f75d\"}/*!@.fa-readme:before*/.fa-readme.sc-mge-view:before{content:\"\\f4d5\"}/*!@.fa-rebel:before*/.fa-rebel.sc-mge-view:before{content:\"\\f1d0\"}/*!@.fa-receipt:before*/.fa-receipt.sc-mge-view:before{content:\"\\f543\"}/*!@.fa-record-vinyl:before*/.fa-record-vinyl.sc-mge-view:before{content:\"\\f8d9\"}/*!@.fa-recycle:before*/.fa-recycle.sc-mge-view:before{content:\"\\f1b8\"}/*!@.fa-red-river:before*/.fa-red-river.sc-mge-view:before{content:\"\\f3e3\"}/*!@.fa-reddit:before*/.fa-reddit.sc-mge-view:before{content:\"\\f1a1\"}/*!@.fa-reddit-alien:before*/.fa-reddit-alien.sc-mge-view:before{content:\"\\f281\"}/*!@.fa-reddit-square:before*/.fa-reddit-square.sc-mge-view:before{content:\"\\f1a2\"}/*!@.fa-redhat:before*/.fa-redhat.sc-mge-view:before{content:\"\\f7bc\"}/*!@.fa-redo:before*/.fa-redo.sc-mge-view:before{content:\"\\f01e\"}/*!@.fa-redo-alt:before*/.fa-redo-alt.sc-mge-view:before{content:\"\\f2f9\"}/*!@.fa-registered:before*/.fa-registered.sc-mge-view:before{content:\"\\f25d\"}/*!@.fa-remove-format:before*/.fa-remove-format.sc-mge-view:before{content:\"\\f87d\"}/*!@.fa-renren:before*/.fa-renren.sc-mge-view:before{content:\"\\f18b\"}/*!@.fa-reply:before*/.fa-reply.sc-mge-view:before{content:\"\\f3e5\"}/*!@.fa-reply-all:before*/.fa-reply-all.sc-mge-view:before{content:\"\\f122\"}/*!@.fa-replyd:before*/.fa-replyd.sc-mge-view:before{content:\"\\f3e6\"}/*!@.fa-republican:before*/.fa-republican.sc-mge-view:before{content:\"\\f75e\"}/*!@.fa-researchgate:before*/.fa-researchgate.sc-mge-view:before{content:\"\\f4f8\"}/*!@.fa-resolving:before*/.fa-resolving.sc-mge-view:before{content:\"\\f3e7\"}/*!@.fa-restroom:before*/.fa-restroom.sc-mge-view:before{content:\"\\f7bd\"}/*!@.fa-retweet:before*/.fa-retweet.sc-mge-view:before{content:\"\\f079\"}/*!@.fa-rev:before*/.fa-rev.sc-mge-view:before{content:\"\\f5b2\"}/*!@.fa-ribbon:before*/.fa-ribbon.sc-mge-view:before{content:\"\\f4d6\"}/*!@.fa-ring:before*/.fa-ring.sc-mge-view:before{content:\"\\f70b\"}/*!@.fa-road:before*/.fa-road.sc-mge-view:before{content:\"\\f018\"}/*!@.fa-robot:before*/.fa-robot.sc-mge-view:before{content:\"\\f544\"}/*!@.fa-rocket:before*/.fa-rocket.sc-mge-view:before{content:\"\\f135\"}/*!@.fa-rocketchat:before*/.fa-rocketchat.sc-mge-view:before{content:\"\\f3e8\"}/*!@.fa-rockrms:before*/.fa-rockrms.sc-mge-view:before{content:\"\\f3e9\"}/*!@.fa-route:before*/.fa-route.sc-mge-view:before{content:\"\\f4d7\"}/*!@.fa-rss:before*/.fa-rss.sc-mge-view:before{content:\"\\f09e\"}/*!@.fa-rss-square:before*/.fa-rss-square.sc-mge-view:before{content:\"\\f143\"}/*!@.fa-ruble-sign:before*/.fa-ruble-sign.sc-mge-view:before{content:\"\\f158\"}/*!@.fa-ruler:before*/.fa-ruler.sc-mge-view:before{content:\"\\f545\"}/*!@.fa-ruler-combined:before*/.fa-ruler-combined.sc-mge-view:before{content:\"\\f546\"}/*!@.fa-ruler-horizontal:before*/.fa-ruler-horizontal.sc-mge-view:before{content:\"\\f547\"}/*!@.fa-ruler-vertical:before*/.fa-ruler-vertical.sc-mge-view:before{content:\"\\f548\"}/*!@.fa-running:before*/.fa-running.sc-mge-view:before{content:\"\\f70c\"}/*!@.fa-rupee-sign:before*/.fa-rupee-sign.sc-mge-view:before{content:\"\\f156\"}/*!@.fa-rust:before*/.fa-rust.sc-mge-view:before{content:\"\\e07a\"}/*!@.fa-sad-cry:before*/.fa-sad-cry.sc-mge-view:before{content:\"\\f5b3\"}/*!@.fa-sad-tear:before*/.fa-sad-tear.sc-mge-view:before{content:\"\\f5b4\"}/*!@.fa-safari:before*/.fa-safari.sc-mge-view:before{content:\"\\f267\"}/*!@.fa-salesforce:before*/.fa-salesforce.sc-mge-view:before{content:\"\\f83b\"}/*!@.fa-sass:before*/.fa-sass.sc-mge-view:before{content:\"\\f41e\"}/*!@.fa-satellite:before*/.fa-satellite.sc-mge-view:before{content:\"\\f7bf\"}/*!@.fa-satellite-dish:before*/.fa-satellite-dish.sc-mge-view:before{content:\"\\f7c0\"}/*!@.fa-save:before*/.fa-save.sc-mge-view:before{content:\"\\f0c7\"}/*!@.fa-schlix:before*/.fa-schlix.sc-mge-view:before{content:\"\\f3ea\"}/*!@.fa-school:before*/.fa-school.sc-mge-view:before{content:\"\\f549\"}/*!@.fa-screwdriver:before*/.fa-screwdriver.sc-mge-view:before{content:\"\\f54a\"}/*!@.fa-scribd:before*/.fa-scribd.sc-mge-view:before{content:\"\\f28a\"}/*!@.fa-scroll:before*/.fa-scroll.sc-mge-view:before{content:\"\\f70e\"}/*!@.fa-sd-card:before*/.fa-sd-card.sc-mge-view:before{content:\"\\f7c2\"}/*!@.fa-search:before*/.fa-search.sc-mge-view:before{content:\"\\f002\"}/*!@.fa-search-dollar:before*/.fa-search-dollar.sc-mge-view:before{content:\"\\f688\"}/*!@.fa-search-location:before*/.fa-search-location.sc-mge-view:before{content:\"\\f689\"}/*!@.fa-search-minus:before*/.fa-search-minus.sc-mge-view:before{content:\"\\f010\"}/*!@.fa-search-plus:before*/.fa-search-plus.sc-mge-view:before{content:\"\\f00e\"}/*!@.fa-searchengin:before*/.fa-searchengin.sc-mge-view:before{content:\"\\f3eb\"}/*!@.fa-seedling:before*/.fa-seedling.sc-mge-view:before{content:\"\\f4d8\"}/*!@.fa-sellcast:before*/.fa-sellcast.sc-mge-view:before{content:\"\\f2da\"}/*!@.fa-sellsy:before*/.fa-sellsy.sc-mge-view:before{content:\"\\f213\"}/*!@.fa-server:before*/.fa-server.sc-mge-view:before{content:\"\\f233\"}/*!@.fa-servicestack:before*/.fa-servicestack.sc-mge-view:before{content:\"\\f3ec\"}/*!@.fa-shapes:before*/.fa-shapes.sc-mge-view:before{content:\"\\f61f\"}/*!@.fa-share:before*/.fa-share.sc-mge-view:before{content:\"\\f064\"}/*!@.fa-share-alt:before*/.fa-share-alt.sc-mge-view:before{content:\"\\f1e0\"}/*!@.fa-share-alt-square:before*/.fa-share-alt-square.sc-mge-view:before{content:\"\\f1e1\"}/*!@.fa-share-square:before*/.fa-share-square.sc-mge-view:before{content:\"\\f14d\"}/*!@.fa-shekel-sign:before*/.fa-shekel-sign.sc-mge-view:before{content:\"\\f20b\"}/*!@.fa-shield-alt:before*/.fa-shield-alt.sc-mge-view:before{content:\"\\f3ed\"}/*!@.fa-shield-virus:before*/.fa-shield-virus.sc-mge-view:before{content:\"\\e06c\"}/*!@.fa-ship:before*/.fa-ship.sc-mge-view:before{content:\"\\f21a\"}/*!@.fa-shipping-fast:before*/.fa-shipping-fast.sc-mge-view:before{content:\"\\f48b\"}/*!@.fa-shirtsinbulk:before*/.fa-shirtsinbulk.sc-mge-view:before{content:\"\\f214\"}/*!@.fa-shoe-prints:before*/.fa-shoe-prints.sc-mge-view:before{content:\"\\f54b\"}/*!@.fa-shopify:before*/.fa-shopify.sc-mge-view:before{content:\"\\e057\"}/*!@.fa-shopping-bag:before*/.fa-shopping-bag.sc-mge-view:before{content:\"\\f290\"}/*!@.fa-shopping-basket:before*/.fa-shopping-basket.sc-mge-view:before{content:\"\\f291\"}/*!@.fa-shopping-cart:before*/.fa-shopping-cart.sc-mge-view:before{content:\"\\f07a\"}/*!@.fa-shopware:before*/.fa-shopware.sc-mge-view:before{content:\"\\f5b5\"}/*!@.fa-shower:before*/.fa-shower.sc-mge-view:before{content:\"\\f2cc\"}/*!@.fa-shuttle-van:before*/.fa-shuttle-van.sc-mge-view:before{content:\"\\f5b6\"}/*!@.fa-sign:before*/.fa-sign.sc-mge-view:before{content:\"\\f4d9\"}/*!@.fa-sign-in-alt:before*/.fa-sign-in-alt.sc-mge-view:before{content:\"\\f2f6\"}/*!@.fa-sign-language:before*/.fa-sign-language.sc-mge-view:before{content:\"\\f2a7\"}/*!@.fa-sign-out-alt:before*/.fa-sign-out-alt.sc-mge-view:before{content:\"\\f2f5\"}/*!@.fa-signal:before*/.fa-signal.sc-mge-view:before{content:\"\\f012\"}/*!@.fa-signature:before*/.fa-signature.sc-mge-view:before{content:\"\\f5b7\"}/*!@.fa-sim-card:before*/.fa-sim-card.sc-mge-view:before{content:\"\\f7c4\"}/*!@.fa-simplybuilt:before*/.fa-simplybuilt.sc-mge-view:before{content:\"\\f215\"}/*!@.fa-sink:before*/.fa-sink.sc-mge-view:before{content:\"\\e06d\"}/*!@.fa-sistrix:before*/.fa-sistrix.sc-mge-view:before{content:\"\\f3ee\"}/*!@.fa-sitemap:before*/.fa-sitemap.sc-mge-view:before{content:\"\\f0e8\"}/*!@.fa-sith:before*/.fa-sith.sc-mge-view:before{content:\"\\f512\"}/*!@.fa-skating:before*/.fa-skating.sc-mge-view:before{content:\"\\f7c5\"}/*!@.fa-sketch:before*/.fa-sketch.sc-mge-view:before{content:\"\\f7c6\"}/*!@.fa-skiing:before*/.fa-skiing.sc-mge-view:before{content:\"\\f7c9\"}/*!@.fa-skiing-nordic:before*/.fa-skiing-nordic.sc-mge-view:before{content:\"\\f7ca\"}/*!@.fa-skull:before*/.fa-skull.sc-mge-view:before{content:\"\\f54c\"}/*!@.fa-skull-crossbones:before*/.fa-skull-crossbones.sc-mge-view:before{content:\"\\f714\"}/*!@.fa-skyatlas:before*/.fa-skyatlas.sc-mge-view:before{content:\"\\f216\"}/*!@.fa-skype:before*/.fa-skype.sc-mge-view:before{content:\"\\f17e\"}/*!@.fa-slack:before*/.fa-slack.sc-mge-view:before{content:\"\\f198\"}/*!@.fa-slack-hash:before*/.fa-slack-hash.sc-mge-view:before{content:\"\\f3ef\"}/*!@.fa-slash:before*/.fa-slash.sc-mge-view:before{content:\"\\f715\"}/*!@.fa-sleigh:before*/.fa-sleigh.sc-mge-view:before{content:\"\\f7cc\"}/*!@.fa-sliders-h:before*/.fa-sliders-h.sc-mge-view:before{content:\"\\f1de\"}/*!@.fa-slideshare:before*/.fa-slideshare.sc-mge-view:before{content:\"\\f1e7\"}/*!@.fa-smile:before*/.fa-smile.sc-mge-view:before{content:\"\\f118\"}/*!@.fa-smile-beam:before*/.fa-smile-beam.sc-mge-view:before{content:\"\\f5b8\"}/*!@.fa-smile-wink:before*/.fa-smile-wink.sc-mge-view:before{content:\"\\f4da\"}/*!@.fa-smog:before*/.fa-smog.sc-mge-view:before{content:\"\\f75f\"}/*!@.fa-smoking:before*/.fa-smoking.sc-mge-view:before{content:\"\\f48d\"}/*!@.fa-smoking-ban:before*/.fa-smoking-ban.sc-mge-view:before{content:\"\\f54d\"}/*!@.fa-sms:before*/.fa-sms.sc-mge-view:before{content:\"\\f7cd\"}/*!@.fa-snapchat:before*/.fa-snapchat.sc-mge-view:before{content:\"\\f2ab\"}/*!@.fa-snapchat-ghost:before*/.fa-snapchat-ghost.sc-mge-view:before{content:\"\\f2ac\"}/*!@.fa-snapchat-square:before*/.fa-snapchat-square.sc-mge-view:before{content:\"\\f2ad\"}/*!@.fa-snowboarding:before*/.fa-snowboarding.sc-mge-view:before{content:\"\\f7ce\"}/*!@.fa-snowflake:before*/.fa-snowflake.sc-mge-view:before{content:\"\\f2dc\"}/*!@.fa-snowman:before*/.fa-snowman.sc-mge-view:before{content:\"\\f7d0\"}/*!@.fa-snowplow:before*/.fa-snowplow.sc-mge-view:before{content:\"\\f7d2\"}/*!@.fa-soap:before*/.fa-soap.sc-mge-view:before{content:\"\\e06e\"}/*!@.fa-socks:before*/.fa-socks.sc-mge-view:before{content:\"\\f696\"}/*!@.fa-solar-panel:before*/.fa-solar-panel.sc-mge-view:before{content:\"\\f5ba\"}/*!@.fa-sort:before*/.fa-sort.sc-mge-view:before{content:\"\\f0dc\"}/*!@.fa-sort-alpha-down:before*/.fa-sort-alpha-down.sc-mge-view:before{content:\"\\f15d\"}/*!@.fa-sort-alpha-down-alt:before*/.fa-sort-alpha-down-alt.sc-mge-view:before{content:\"\\f881\"}/*!@.fa-sort-alpha-up:before*/.fa-sort-alpha-up.sc-mge-view:before{content:\"\\f15e\"}/*!@.fa-sort-alpha-up-alt:before*/.fa-sort-alpha-up-alt.sc-mge-view:before{content:\"\\f882\"}/*!@.fa-sort-amount-down:before*/.fa-sort-amount-down.sc-mge-view:before{content:\"\\f160\"}/*!@.fa-sort-amount-down-alt:before*/.fa-sort-amount-down-alt.sc-mge-view:before{content:\"\\f884\"}/*!@.fa-sort-amount-up:before*/.fa-sort-amount-up.sc-mge-view:before{content:\"\\f161\"}/*!@.fa-sort-amount-up-alt:before*/.fa-sort-amount-up-alt.sc-mge-view:before{content:\"\\f885\"}/*!@.fa-sort-down:before*/.fa-sort-down.sc-mge-view:before{content:\"\\f0dd\"}/*!@.fa-sort-numeric-down:before*/.fa-sort-numeric-down.sc-mge-view:before{content:\"\\f162\"}/*!@.fa-sort-numeric-down-alt:before*/.fa-sort-numeric-down-alt.sc-mge-view:before{content:\"\\f886\"}/*!@.fa-sort-numeric-up:before*/.fa-sort-numeric-up.sc-mge-view:before{content:\"\\f163\"}/*!@.fa-sort-numeric-up-alt:before*/.fa-sort-numeric-up-alt.sc-mge-view:before{content:\"\\f887\"}/*!@.fa-sort-up:before*/.fa-sort-up.sc-mge-view:before{content:\"\\f0de\"}/*!@.fa-soundcloud:before*/.fa-soundcloud.sc-mge-view:before{content:\"\\f1be\"}/*!@.fa-sourcetree:before*/.fa-sourcetree.sc-mge-view:before{content:\"\\f7d3\"}/*!@.fa-spa:before*/.fa-spa.sc-mge-view:before{content:\"\\f5bb\"}/*!@.fa-space-shuttle:before*/.fa-space-shuttle.sc-mge-view:before{content:\"\\f197\"}/*!@.fa-speakap:before*/.fa-speakap.sc-mge-view:before{content:\"\\f3f3\"}/*!@.fa-speaker-deck:before*/.fa-speaker-deck.sc-mge-view:before{content:\"\\f83c\"}/*!@.fa-spell-check:before*/.fa-spell-check.sc-mge-view:before{content:\"\\f891\"}/*!@.fa-spider:before*/.fa-spider.sc-mge-view:before{content:\"\\f717\"}/*!@.fa-spinner:before*/.fa-spinner.sc-mge-view:before{content:\"\\f110\"}/*!@.fa-splotch:before*/.fa-splotch.sc-mge-view:before{content:\"\\f5bc\"}/*!@.fa-spotify:before*/.fa-spotify.sc-mge-view:before{content:\"\\f1bc\"}/*!@.fa-spray-can:before*/.fa-spray-can.sc-mge-view:before{content:\"\\f5bd\"}/*!@.fa-square:before*/.fa-square.sc-mge-view:before{content:\"\\f0c8\"}/*!@.fa-square-full:before*/.fa-square-full.sc-mge-view:before{content:\"\\f45c\"}/*!@.fa-square-root-alt:before*/.fa-square-root-alt.sc-mge-view:before{content:\"\\f698\"}/*!@.fa-squarespace:before*/.fa-squarespace.sc-mge-view:before{content:\"\\f5be\"}/*!@.fa-stack-exchange:before*/.fa-stack-exchange.sc-mge-view:before{content:\"\\f18d\"}/*!@.fa-stack-overflow:before*/.fa-stack-overflow.sc-mge-view:before{content:\"\\f16c\"}/*!@.fa-stackpath:before*/.fa-stackpath.sc-mge-view:before{content:\"\\f842\"}/*!@.fa-stamp:before*/.fa-stamp.sc-mge-view:before{content:\"\\f5bf\"}/*!@.fa-star:before*/.fa-star.sc-mge-view:before{content:\"\\f005\"}/*!@.fa-star-and-crescent:before*/.fa-star-and-crescent.sc-mge-view:before{content:\"\\f699\"}/*!@.fa-star-half:before*/.fa-star-half.sc-mge-view:before{content:\"\\f089\"}/*!@.fa-star-half-alt:before*/.fa-star-half-alt.sc-mge-view:before{content:\"\\f5c0\"}/*!@.fa-star-of-david:before*/.fa-star-of-david.sc-mge-view:before{content:\"\\f69a\"}/*!@.fa-star-of-life:before*/.fa-star-of-life.sc-mge-view:before{content:\"\\f621\"}/*!@.fa-staylinked:before*/.fa-staylinked.sc-mge-view:before{content:\"\\f3f5\"}/*!@.fa-steam:before*/.fa-steam.sc-mge-view:before{content:\"\\f1b6\"}/*!@.fa-steam-square:before*/.fa-steam-square.sc-mge-view:before{content:\"\\f1b7\"}/*!@.fa-steam-symbol:before*/.fa-steam-symbol.sc-mge-view:before{content:\"\\f3f6\"}/*!@.fa-step-backward:before*/.fa-step-backward.sc-mge-view:before{content:\"\\f048\"}/*!@.fa-step-forward:before*/.fa-step-forward.sc-mge-view:before{content:\"\\f051\"}/*!@.fa-stethoscope:before*/.fa-stethoscope.sc-mge-view:before{content:\"\\f0f1\"}/*!@.fa-sticker-mule:before*/.fa-sticker-mule.sc-mge-view:before{content:\"\\f3f7\"}/*!@.fa-sticky-note:before*/.fa-sticky-note.sc-mge-view:before{content:\"\\f249\"}/*!@.fa-stop:before*/.fa-stop.sc-mge-view:before{content:\"\\f04d\"}/*!@.fa-stop-circle:before*/.fa-stop-circle.sc-mge-view:before{content:\"\\f28d\"}/*!@.fa-stopwatch:before*/.fa-stopwatch.sc-mge-view:before{content:\"\\f2f2\"}/*!@.fa-stopwatch-20:before*/.fa-stopwatch-20.sc-mge-view:before{content:\"\\e06f\"}/*!@.fa-store:before*/.fa-store.sc-mge-view:before{content:\"\\f54e\"}/*!@.fa-store-alt:before*/.fa-store-alt.sc-mge-view:before{content:\"\\f54f\"}/*!@.fa-store-alt-slash:before*/.fa-store-alt-slash.sc-mge-view:before{content:\"\\e070\"}/*!@.fa-store-slash:before*/.fa-store-slash.sc-mge-view:before{content:\"\\e071\"}/*!@.fa-strava:before*/.fa-strava.sc-mge-view:before{content:\"\\f428\"}/*!@.fa-stream:before*/.fa-stream.sc-mge-view:before{content:\"\\f550\"}/*!@.fa-street-view:before*/.fa-street-view.sc-mge-view:before{content:\"\\f21d\"}/*!@.fa-strikethrough:before*/.fa-strikethrough.sc-mge-view:before{content:\"\\f0cc\"}/*!@.fa-stripe:before*/.fa-stripe.sc-mge-view:before{content:\"\\f429\"}/*!@.fa-stripe-s:before*/.fa-stripe-s.sc-mge-view:before{content:\"\\f42a\"}/*!@.fa-stroopwafel:before*/.fa-stroopwafel.sc-mge-view:before{content:\"\\f551\"}/*!@.fa-studiovinari:before*/.fa-studiovinari.sc-mge-view:before{content:\"\\f3f8\"}/*!@.fa-stumbleupon:before*/.fa-stumbleupon.sc-mge-view:before{content:\"\\f1a4\"}/*!@.fa-stumbleupon-circle:before*/.fa-stumbleupon-circle.sc-mge-view:before{content:\"\\f1a3\"}/*!@.fa-subscript:before*/.fa-subscript.sc-mge-view:before{content:\"\\f12c\"}/*!@.fa-subway:before*/.fa-subway.sc-mge-view:before{content:\"\\f239\"}/*!@.fa-suitcase:before*/.fa-suitcase.sc-mge-view:before{content:\"\\f0f2\"}/*!@.fa-suitcase-rolling:before*/.fa-suitcase-rolling.sc-mge-view:before{content:\"\\f5c1\"}/*!@.fa-sun:before*/.fa-sun.sc-mge-view:before{content:\"\\f185\"}/*!@.fa-superpowers:before*/.fa-superpowers.sc-mge-view:before{content:\"\\f2dd\"}/*!@.fa-superscript:before*/.fa-superscript.sc-mge-view:before{content:\"\\f12b\"}/*!@.fa-supple:before*/.fa-supple.sc-mge-view:before{content:\"\\f3f9\"}/*!@.fa-surprise:before*/.fa-surprise.sc-mge-view:before{content:\"\\f5c2\"}/*!@.fa-suse:before*/.fa-suse.sc-mge-view:before{content:\"\\f7d6\"}/*!@.fa-swatchbook:before*/.fa-swatchbook.sc-mge-view:before{content:\"\\f5c3\"}/*!@.fa-swift:before*/.fa-swift.sc-mge-view:before{content:\"\\f8e1\"}/*!@.fa-swimmer:before*/.fa-swimmer.sc-mge-view:before{content:\"\\f5c4\"}/*!@.fa-swimming-pool:before*/.fa-swimming-pool.sc-mge-view:before{content:\"\\f5c5\"}/*!@.fa-symfony:before*/.fa-symfony.sc-mge-view:before{content:\"\\f83d\"}/*!@.fa-synagogue:before*/.fa-synagogue.sc-mge-view:before{content:\"\\f69b\"}/*!@.fa-sync:before*/.fa-sync.sc-mge-view:before{content:\"\\f021\"}/*!@.fa-sync-alt:before*/.fa-sync-alt.sc-mge-view:before{content:\"\\f2f1\"}/*!@.fa-syringe:before*/.fa-syringe.sc-mge-view:before{content:\"\\f48e\"}/*!@.fa-table:before*/.fa-table.sc-mge-view:before{content:\"\\f0ce\"}/*!@.fa-table-tennis:before*/.fa-table-tennis.sc-mge-view:before{content:\"\\f45d\"}/*!@.fa-tablet:before*/.fa-tablet.sc-mge-view:before{content:\"\\f10a\"}/*!@.fa-tablet-alt:before*/.fa-tablet-alt.sc-mge-view:before{content:\"\\f3fa\"}/*!@.fa-tablets:before*/.fa-tablets.sc-mge-view:before{content:\"\\f490\"}/*!@.fa-tachometer-alt:before*/.fa-tachometer-alt.sc-mge-view:before{content:\"\\f3fd\"}/*!@.fa-tag:before*/.fa-tag.sc-mge-view:before{content:\"\\f02b\"}/*!@.fa-tags:before*/.fa-tags.sc-mge-view:before{content:\"\\f02c\"}/*!@.fa-tape:before*/.fa-tape.sc-mge-view:before{content:\"\\f4db\"}/*!@.fa-tasks:before*/.fa-tasks.sc-mge-view:before{content:\"\\f0ae\"}/*!@.fa-taxi:before*/.fa-taxi.sc-mge-view:before{content:\"\\f1ba\"}/*!@.fa-teamspeak:before*/.fa-teamspeak.sc-mge-view:before{content:\"\\f4f9\"}/*!@.fa-teeth:before*/.fa-teeth.sc-mge-view:before{content:\"\\f62e\"}/*!@.fa-teeth-open:before*/.fa-teeth-open.sc-mge-view:before{content:\"\\f62f\"}/*!@.fa-telegram:before*/.fa-telegram.sc-mge-view:before{content:\"\\f2c6\"}/*!@.fa-telegram-plane:before*/.fa-telegram-plane.sc-mge-view:before{content:\"\\f3fe\"}/*!@.fa-temperature-high:before*/.fa-temperature-high.sc-mge-view:before{content:\"\\f769\"}/*!@.fa-temperature-low:before*/.fa-temperature-low.sc-mge-view:before{content:\"\\f76b\"}/*!@.fa-tencent-weibo:before*/.fa-tencent-weibo.sc-mge-view:before{content:\"\\f1d5\"}/*!@.fa-tenge:before*/.fa-tenge.sc-mge-view:before{content:\"\\f7d7\"}/*!@.fa-terminal:before*/.fa-terminal.sc-mge-view:before{content:\"\\f120\"}/*!@.fa-text-height:before*/.fa-text-height.sc-mge-view:before{content:\"\\f034\"}/*!@.fa-text-width:before*/.fa-text-width.sc-mge-view:before{content:\"\\f035\"}/*!@.fa-th:before*/.fa-th.sc-mge-view:before{content:\"\\f00a\"}/*!@.fa-th-large:before*/.fa-th-large.sc-mge-view:before{content:\"\\f009\"}/*!@.fa-th-list:before*/.fa-th-list.sc-mge-view:before{content:\"\\f00b\"}/*!@.fa-the-red-yeti:before*/.fa-the-red-yeti.sc-mge-view:before{content:\"\\f69d\"}/*!@.fa-theater-masks:before*/.fa-theater-masks.sc-mge-view:before{content:\"\\f630\"}/*!@.fa-themeco:before*/.fa-themeco.sc-mge-view:before{content:\"\\f5c6\"}/*!@.fa-themeisle:before*/.fa-themeisle.sc-mge-view:before{content:\"\\f2b2\"}/*!@.fa-thermometer:before*/.fa-thermometer.sc-mge-view:before{content:\"\\f491\"}/*!@.fa-thermometer-empty:before*/.fa-thermometer-empty.sc-mge-view:before{content:\"\\f2cb\"}/*!@.fa-thermometer-full:before*/.fa-thermometer-full.sc-mge-view:before{content:\"\\f2c7\"}/*!@.fa-thermometer-half:before*/.fa-thermometer-half.sc-mge-view:before{content:\"\\f2c9\"}/*!@.fa-thermometer-quarter:before*/.fa-thermometer-quarter.sc-mge-view:before{content:\"\\f2ca\"}/*!@.fa-thermometer-three-quarters:before*/.fa-thermometer-three-quarters.sc-mge-view:before{content:\"\\f2c8\"}/*!@.fa-think-peaks:before*/.fa-think-peaks.sc-mge-view:before{content:\"\\f731\"}/*!@.fa-thumbs-down:before*/.fa-thumbs-down.sc-mge-view:before{content:\"\\f165\"}/*!@.fa-thumbs-up:before*/.fa-thumbs-up.sc-mge-view:before{content:\"\\f164\"}/*!@.fa-thumbtack:before*/.fa-thumbtack.sc-mge-view:before{content:\"\\f08d\"}/*!@.fa-ticket-alt:before*/.fa-ticket-alt.sc-mge-view:before{content:\"\\f3ff\"}/*!@.fa-tiktok:before*/.fa-tiktok.sc-mge-view:before{content:\"\\e07b\"}/*!@.fa-times:before*/.fa-times.sc-mge-view:before{content:\"\\f00d\"}/*!@.fa-times-circle:before*/.fa-times-circle.sc-mge-view:before{content:\"\\f057\"}/*!@.fa-tint:before*/.fa-tint.sc-mge-view:before{content:\"\\f043\"}/*!@.fa-tint-slash:before*/.fa-tint-slash.sc-mge-view:before{content:\"\\f5c7\"}/*!@.fa-tired:before*/.fa-tired.sc-mge-view:before{content:\"\\f5c8\"}/*!@.fa-toggle-off:before*/.fa-toggle-off.sc-mge-view:before{content:\"\\f204\"}/*!@.fa-toggle-on:before*/.fa-toggle-on.sc-mge-view:before{content:\"\\f205\"}/*!@.fa-toilet:before*/.fa-toilet.sc-mge-view:before{content:\"\\f7d8\"}/*!@.fa-toilet-paper:before*/.fa-toilet-paper.sc-mge-view:before{content:\"\\f71e\"}/*!@.fa-toilet-paper-slash:before*/.fa-toilet-paper-slash.sc-mge-view:before{content:\"\\e072\"}/*!@.fa-toolbox:before*/.fa-toolbox.sc-mge-view:before{content:\"\\f552\"}/*!@.fa-tools:before*/.fa-tools.sc-mge-view:before{content:\"\\f7d9\"}/*!@.fa-tooth:before*/.fa-tooth.sc-mge-view:before{content:\"\\f5c9\"}/*!@.fa-torah:before*/.fa-torah.sc-mge-view:before{content:\"\\f6a0\"}/*!@.fa-torii-gate:before*/.fa-torii-gate.sc-mge-view:before{content:\"\\f6a1\"}/*!@.fa-tractor:before*/.fa-tractor.sc-mge-view:before{content:\"\\f722\"}/*!@.fa-trade-federation:before*/.fa-trade-federation.sc-mge-view:before{content:\"\\f513\"}/*!@.fa-trademark:before*/.fa-trademark.sc-mge-view:before{content:\"\\f25c\"}/*!@.fa-traffic-light:before*/.fa-traffic-light.sc-mge-view:before{content:\"\\f637\"}/*!@.fa-trailer:before*/.fa-trailer.sc-mge-view:before{content:\"\\e041\"}/*!@.fa-train:before*/.fa-train.sc-mge-view:before{content:\"\\f238\"}/*!@.fa-tram:before*/.fa-tram.sc-mge-view:before{content:\"\\f7da\"}/*!@.fa-transgender:before*/.fa-transgender.sc-mge-view:before{content:\"\\f224\"}/*!@.fa-transgender-alt:before*/.fa-transgender-alt.sc-mge-view:before{content:\"\\f225\"}/*!@.fa-trash:before*/.fa-trash.sc-mge-view:before{content:\"\\f1f8\"}/*!@.fa-trash-alt:before*/.fa-trash-alt.sc-mge-view:before{content:\"\\f2ed\"}/*!@.fa-trash-restore:before*/.fa-trash-restore.sc-mge-view:before{content:\"\\f829\"}/*!@.fa-trash-restore-alt:before*/.fa-trash-restore-alt.sc-mge-view:before{content:\"\\f82a\"}/*!@.fa-tree:before*/.fa-tree.sc-mge-view:before{content:\"\\f1bb\"}/*!@.fa-trello:before*/.fa-trello.sc-mge-view:before{content:\"\\f181\"}/*!@.fa-tripadvisor:before*/.fa-tripadvisor.sc-mge-view:before{content:\"\\f262\"}/*!@.fa-trophy:before*/.fa-trophy.sc-mge-view:before{content:\"\\f091\"}/*!@.fa-truck:before*/.fa-truck.sc-mge-view:before{content:\"\\f0d1\"}/*!@.fa-truck-loading:before*/.fa-truck-loading.sc-mge-view:before{content:\"\\f4de\"}/*!@.fa-truck-monster:before*/.fa-truck-monster.sc-mge-view:before{content:\"\\f63b\"}/*!@.fa-truck-moving:before*/.fa-truck-moving.sc-mge-view:before{content:\"\\f4df\"}/*!@.fa-truck-pickup:before*/.fa-truck-pickup.sc-mge-view:before{content:\"\\f63c\"}/*!@.fa-tshirt:before*/.fa-tshirt.sc-mge-view:before{content:\"\\f553\"}/*!@.fa-tty:before*/.fa-tty.sc-mge-view:before{content:\"\\f1e4\"}/*!@.fa-tumblr:before*/.fa-tumblr.sc-mge-view:before{content:\"\\f173\"}/*!@.fa-tumblr-square:before*/.fa-tumblr-square.sc-mge-view:before{content:\"\\f174\"}/*!@.fa-tv:before*/.fa-tv.sc-mge-view:before{content:\"\\f26c\"}/*!@.fa-twitch:before*/.fa-twitch.sc-mge-view:before{content:\"\\f1e8\"}/*!@.fa-twitter:before*/.fa-twitter.sc-mge-view:before{content:\"\\f099\"}/*!@.fa-twitter-square:before*/.fa-twitter-square.sc-mge-view:before{content:\"\\f081\"}/*!@.fa-typo3:before*/.fa-typo3.sc-mge-view:before{content:\"\\f42b\"}/*!@.fa-uber:before*/.fa-uber.sc-mge-view:before{content:\"\\f402\"}/*!@.fa-ubuntu:before*/.fa-ubuntu.sc-mge-view:before{content:\"\\f7df\"}/*!@.fa-uikit:before*/.fa-uikit.sc-mge-view:before{content:\"\\f403\"}/*!@.fa-umbraco:before*/.fa-umbraco.sc-mge-view:before{content:\"\\f8e8\"}/*!@.fa-umbrella:before*/.fa-umbrella.sc-mge-view:before{content:\"\\f0e9\"}/*!@.fa-umbrella-beach:before*/.fa-umbrella-beach.sc-mge-view:before{content:\"\\f5ca\"}/*!@.fa-uncharted:before*/.fa-uncharted.sc-mge-view:before{content:\"\\e084\"}/*!@.fa-underline:before*/.fa-underline.sc-mge-view:before{content:\"\\f0cd\"}/*!@.fa-undo:before*/.fa-undo.sc-mge-view:before{content:\"\\f0e2\"}/*!@.fa-undo-alt:before*/.fa-undo-alt.sc-mge-view:before{content:\"\\f2ea\"}/*!@.fa-uniregistry:before*/.fa-uniregistry.sc-mge-view:before{content:\"\\f404\"}/*!@.fa-unity:before*/.fa-unity.sc-mge-view:before{content:\"\\e049\"}/*!@.fa-universal-access:before*/.fa-universal-access.sc-mge-view:before{content:\"\\f29a\"}/*!@.fa-university:before*/.fa-university.sc-mge-view:before{content:\"\\f19c\"}/*!@.fa-unlink:before*/.fa-unlink.sc-mge-view:before{content:\"\\f127\"}/*!@.fa-unlock:before*/.fa-unlock.sc-mge-view:before{content:\"\\f09c\"}/*!@.fa-unlock-alt:before*/.fa-unlock-alt.sc-mge-view:before{content:\"\\f13e\"}/*!@.fa-unsplash:before*/.fa-unsplash.sc-mge-view:before{content:\"\\e07c\"}/*!@.fa-untappd:before*/.fa-untappd.sc-mge-view:before{content:\"\\f405\"}/*!@.fa-upload:before*/.fa-upload.sc-mge-view:before{content:\"\\f093\"}/*!@.fa-ups:before*/.fa-ups.sc-mge-view:before{content:\"\\f7e0\"}/*!@.fa-usb:before*/.fa-usb.sc-mge-view:before{content:\"\\f287\"}/*!@.fa-user:before*/.fa-user.sc-mge-view:before{content:\"\\f007\"}/*!@.fa-user-alt:before*/.fa-user-alt.sc-mge-view:before{content:\"\\f406\"}/*!@.fa-user-alt-slash:before*/.fa-user-alt-slash.sc-mge-view:before{content:\"\\f4fa\"}/*!@.fa-user-astronaut:before*/.fa-user-astronaut.sc-mge-view:before{content:\"\\f4fb\"}/*!@.fa-user-check:before*/.fa-user-check.sc-mge-view:before{content:\"\\f4fc\"}/*!@.fa-user-circle:before*/.fa-user-circle.sc-mge-view:before{content:\"\\f2bd\"}/*!@.fa-user-clock:before*/.fa-user-clock.sc-mge-view:before{content:\"\\f4fd\"}/*!@.fa-user-cog:before*/.fa-user-cog.sc-mge-view:before{content:\"\\f4fe\"}/*!@.fa-user-edit:before*/.fa-user-edit.sc-mge-view:before{content:\"\\f4ff\"}/*!@.fa-user-friends:before*/.fa-user-friends.sc-mge-view:before{content:\"\\f500\"}/*!@.fa-user-graduate:before*/.fa-user-graduate.sc-mge-view:before{content:\"\\f501\"}/*!@.fa-user-injured:before*/.fa-user-injured.sc-mge-view:before{content:\"\\f728\"}/*!@.fa-user-lock:before*/.fa-user-lock.sc-mge-view:before{content:\"\\f502\"}/*!@.fa-user-md:before*/.fa-user-md.sc-mge-view:before{content:\"\\f0f0\"}/*!@.fa-user-minus:before*/.fa-user-minus.sc-mge-view:before{content:\"\\f503\"}/*!@.fa-user-ninja:before*/.fa-user-ninja.sc-mge-view:before{content:\"\\f504\"}/*!@.fa-user-nurse:before*/.fa-user-nurse.sc-mge-view:before{content:\"\\f82f\"}/*!@.fa-user-plus:before*/.fa-user-plus.sc-mge-view:before{content:\"\\f234\"}/*!@.fa-user-secret:before*/.fa-user-secret.sc-mge-view:before{content:\"\\f21b\"}/*!@.fa-user-shield:before*/.fa-user-shield.sc-mge-view:before{content:\"\\f505\"}/*!@.fa-user-slash:before*/.fa-user-slash.sc-mge-view:before{content:\"\\f506\"}/*!@.fa-user-tag:before*/.fa-user-tag.sc-mge-view:before{content:\"\\f507\"}/*!@.fa-user-tie:before*/.fa-user-tie.sc-mge-view:before{content:\"\\f508\"}/*!@.fa-user-times:before*/.fa-user-times.sc-mge-view:before{content:\"\\f235\"}/*!@.fa-users:before*/.fa-users.sc-mge-view:before{content:\"\\f0c0\"}/*!@.fa-users-cog:before*/.fa-users-cog.sc-mge-view:before{content:\"\\f509\"}/*!@.fa-users-slash:before*/.fa-users-slash.sc-mge-view:before{content:\"\\e073\"}/*!@.fa-usps:before*/.fa-usps.sc-mge-view:before{content:\"\\f7e1\"}/*!@.fa-ussunnah:before*/.fa-ussunnah.sc-mge-view:before{content:\"\\f407\"}/*!@.fa-utensil-spoon:before*/.fa-utensil-spoon.sc-mge-view:before{content:\"\\f2e5\"}/*!@.fa-utensils:before*/.fa-utensils.sc-mge-view:before{content:\"\\f2e7\"}/*!@.fa-vaadin:before*/.fa-vaadin.sc-mge-view:before{content:\"\\f408\"}/*!@.fa-vector-square:before*/.fa-vector-square.sc-mge-view:before{content:\"\\f5cb\"}/*!@.fa-venus:before*/.fa-venus.sc-mge-view:before{content:\"\\f221\"}/*!@.fa-venus-double:before*/.fa-venus-double.sc-mge-view:before{content:\"\\f226\"}/*!@.fa-venus-mars:before*/.fa-venus-mars.sc-mge-view:before{content:\"\\f228\"}/*!@.fa-vest:before*/.fa-vest.sc-mge-view:before{content:\"\\e085\"}/*!@.fa-vest-patches:before*/.fa-vest-patches.sc-mge-view:before{content:\"\\e086\"}/*!@.fa-viacoin:before*/.fa-viacoin.sc-mge-view:before{content:\"\\f237\"}/*!@.fa-viadeo:before*/.fa-viadeo.sc-mge-view:before{content:\"\\f2a9\"}/*!@.fa-viadeo-square:before*/.fa-viadeo-square.sc-mge-view:before{content:\"\\f2aa\"}/*!@.fa-vial:before*/.fa-vial.sc-mge-view:before{content:\"\\f492\"}/*!@.fa-vials:before*/.fa-vials.sc-mge-view:before{content:\"\\f493\"}/*!@.fa-viber:before*/.fa-viber.sc-mge-view:before{content:\"\\f409\"}/*!@.fa-video:before*/.fa-video.sc-mge-view:before{content:\"\\f03d\"}/*!@.fa-video-slash:before*/.fa-video-slash.sc-mge-view:before{content:\"\\f4e2\"}/*!@.fa-vihara:before*/.fa-vihara.sc-mge-view:before{content:\"\\f6a7\"}/*!@.fa-vimeo:before*/.fa-vimeo.sc-mge-view:before{content:\"\\f40a\"}/*!@.fa-vimeo-square:before*/.fa-vimeo-square.sc-mge-view:before{content:\"\\f194\"}/*!@.fa-vimeo-v:before*/.fa-vimeo-v.sc-mge-view:before{content:\"\\f27d\"}/*!@.fa-vine:before*/.fa-vine.sc-mge-view:before{content:\"\\f1ca\"}/*!@.fa-virus:before*/.fa-virus.sc-mge-view:before{content:\"\\e074\"}/*!@.fa-virus-slash:before*/.fa-virus-slash.sc-mge-view:before{content:\"\\e075\"}/*!@.fa-viruses:before*/.fa-viruses.sc-mge-view:before{content:\"\\e076\"}/*!@.fa-vk:before*/.fa-vk.sc-mge-view:before{content:\"\\f189\"}/*!@.fa-vnv:before*/.fa-vnv.sc-mge-view:before{content:\"\\f40b\"}/*!@.fa-voicemail:before*/.fa-voicemail.sc-mge-view:before{content:\"\\f897\"}/*!@.fa-volleyball-ball:before*/.fa-volleyball-ball.sc-mge-view:before{content:\"\\f45f\"}/*!@.fa-volume-down:before*/.fa-volume-down.sc-mge-view:before{content:\"\\f027\"}/*!@.fa-volume-mute:before*/.fa-volume-mute.sc-mge-view:before{content:\"\\f6a9\"}/*!@.fa-volume-off:before*/.fa-volume-off.sc-mge-view:before{content:\"\\f026\"}/*!@.fa-volume-up:before*/.fa-volume-up.sc-mge-view:before{content:\"\\f028\"}/*!@.fa-vote-yea:before*/.fa-vote-yea.sc-mge-view:before{content:\"\\f772\"}/*!@.fa-vr-cardboard:before*/.fa-vr-cardboard.sc-mge-view:before{content:\"\\f729\"}/*!@.fa-vuejs:before*/.fa-vuejs.sc-mge-view:before{content:\"\\f41f\"}/*!@.fa-walking:before*/.fa-walking.sc-mge-view:before{content:\"\\f554\"}/*!@.fa-wallet:before*/.fa-wallet.sc-mge-view:before{content:\"\\f555\"}/*!@.fa-warehouse:before*/.fa-warehouse.sc-mge-view:before{content:\"\\f494\"}/*!@.fa-watchman-monitoring:before*/.fa-watchman-monitoring.sc-mge-view:before{content:\"\\e087\"}/*!@.fa-water:before*/.fa-water.sc-mge-view:before{content:\"\\f773\"}/*!@.fa-wave-square:before*/.fa-wave-square.sc-mge-view:before{content:\"\\f83e\"}/*!@.fa-waze:before*/.fa-waze.sc-mge-view:before{content:\"\\f83f\"}/*!@.fa-weebly:before*/.fa-weebly.sc-mge-view:before{content:\"\\f5cc\"}/*!@.fa-weibo:before*/.fa-weibo.sc-mge-view:before{content:\"\\f18a\"}/*!@.fa-weight:before*/.fa-weight.sc-mge-view:before{content:\"\\f496\"}/*!@.fa-weight-hanging:before*/.fa-weight-hanging.sc-mge-view:before{content:\"\\f5cd\"}/*!@.fa-weixin:before*/.fa-weixin.sc-mge-view:before{content:\"\\f1d7\"}/*!@.fa-whatsapp:before*/.fa-whatsapp.sc-mge-view:before{content:\"\\f232\"}/*!@.fa-whatsapp-square:before*/.fa-whatsapp-square.sc-mge-view:before{content:\"\\f40c\"}/*!@.fa-wheelchair:before*/.fa-wheelchair.sc-mge-view:before{content:\"\\f193\"}/*!@.fa-whmcs:before*/.fa-whmcs.sc-mge-view:before{content:\"\\f40d\"}/*!@.fa-wifi:before*/.fa-wifi.sc-mge-view:before{content:\"\\f1eb\"}/*!@.fa-wikipedia-w:before*/.fa-wikipedia-w.sc-mge-view:before{content:\"\\f266\"}/*!@.fa-wind:before*/.fa-wind.sc-mge-view:before{content:\"\\f72e\"}/*!@.fa-window-close:before*/.fa-window-close.sc-mge-view:before{content:\"\\f410\"}/*!@.fa-window-maximize:before*/.fa-window-maximize.sc-mge-view:before{content:\"\\f2d0\"}/*!@.fa-window-minimize:before*/.fa-window-minimize.sc-mge-view:before{content:\"\\f2d1\"}/*!@.fa-window-restore:before*/.fa-window-restore.sc-mge-view:before{content:\"\\f2d2\"}/*!@.fa-windows:before*/.fa-windows.sc-mge-view:before{content:\"\\f17a\"}/*!@.fa-wine-bottle:before*/.fa-wine-bottle.sc-mge-view:before{content:\"\\f72f\"}/*!@.fa-wine-glass:before*/.fa-wine-glass.sc-mge-view:before{content:\"\\f4e3\"}/*!@.fa-wine-glass-alt:before*/.fa-wine-glass-alt.sc-mge-view:before{content:\"\\f5ce\"}/*!@.fa-wix:before*/.fa-wix.sc-mge-view:before{content:\"\\f5cf\"}/*!@.fa-wizards-of-the-coast:before*/.fa-wizards-of-the-coast.sc-mge-view:before{content:\"\\f730\"}/*!@.fa-wodu:before*/.fa-wodu.sc-mge-view:before{content:\"\\e088\"}/*!@.fa-wolf-pack-battalion:before*/.fa-wolf-pack-battalion.sc-mge-view:before{content:\"\\f514\"}/*!@.fa-won-sign:before*/.fa-won-sign.sc-mge-view:before{content:\"\\f159\"}/*!@.fa-wordpress:before*/.fa-wordpress.sc-mge-view:before{content:\"\\f19a\"}/*!@.fa-wordpress-simple:before*/.fa-wordpress-simple.sc-mge-view:before{content:\"\\f411\"}/*!@.fa-wpbeginner:before*/.fa-wpbeginner.sc-mge-view:before{content:\"\\f297\"}/*!@.fa-wpexplorer:before*/.fa-wpexplorer.sc-mge-view:before{content:\"\\f2de\"}/*!@.fa-wpforms:before*/.fa-wpforms.sc-mge-view:before{content:\"\\f298\"}/*!@.fa-wpressr:before*/.fa-wpressr.sc-mge-view:before{content:\"\\f3e4\"}/*!@.fa-wrench:before*/.fa-wrench.sc-mge-view:before{content:\"\\f0ad\"}/*!@.fa-x-ray:before*/.fa-x-ray.sc-mge-view:before{content:\"\\f497\"}/*!@.fa-xbox:before*/.fa-xbox.sc-mge-view:before{content:\"\\f412\"}/*!@.fa-xing:before*/.fa-xing.sc-mge-view:before{content:\"\\f168\"}/*!@.fa-xing-square:before*/.fa-xing-square.sc-mge-view:before{content:\"\\f169\"}/*!@.fa-y-combinator:before*/.fa-y-combinator.sc-mge-view:before{content:\"\\f23b\"}/*!@.fa-yahoo:before*/.fa-yahoo.sc-mge-view:before{content:\"\\f19e\"}/*!@.fa-yammer:before*/.fa-yammer.sc-mge-view:before{content:\"\\f840\"}/*!@.fa-yandex:before*/.fa-yandex.sc-mge-view:before{content:\"\\f413\"}/*!@.fa-yandex-international:before*/.fa-yandex-international.sc-mge-view:before{content:\"\\f414\"}/*!@.fa-yarn:before*/.fa-yarn.sc-mge-view:before{content:\"\\f7e3\"}/*!@.fa-yelp:before*/.fa-yelp.sc-mge-view:before{content:\"\\f1e9\"}/*!@.fa-yen-sign:before*/.fa-yen-sign.sc-mge-view:before{content:\"\\f157\"}/*!@.fa-yin-yang:before*/.fa-yin-yang.sc-mge-view:before{content:\"\\f6ad\"}/*!@.fa-yoast:before*/.fa-yoast.sc-mge-view:before{content:\"\\f2b1\"}/*!@.fa-youtube:before*/.fa-youtube.sc-mge-view:before{content:\"\\f167\"}/*!@.fa-youtube-square:before*/.fa-youtube-square.sc-mge-view:before{content:\"\\f431\"}/*!@.fa-zhihu:before*/.fa-zhihu.sc-mge-view:before{content:\"\\f63f\"}/*!@.sr-only*/.sr-only.sc-mge-view{border:0;clip:rect(0, 0, 0, 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}/*!@.sr-only-focusable:active, .sr-only-focusable:focus*/.sr-only-focusable.sc-mge-view:active,.sr-only-focusable.sc-mge-view:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}@font-face{font-family:'Font Awesome 5 Brands';font-style:normal;font-weight:400;font-display:block;src:url(\"../webfonts/fa-brands-400.eot\");src:url(\"../webfonts/fa-brands-400.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-brands-400.woff2\") format(\"woff2\"), url(\"../webfonts/fa-brands-400.woff\") format(\"woff\"), url(\"../webfonts/fa-brands-400.ttf\") format(\"truetype\"), url(\"../webfonts/fa-brands-400.svg#fontawesome\") format(\"svg\")}/*!@.fab*/.fab.sc-mge-view{font-family:'Font Awesome 5 Brands';font-weight:400}@font-face{font-family:'Font Awesome 5 Free';font-style:normal;font-weight:400;font-display:block;src:url(\"../webfonts/fa-regular-400.eot\");src:url(\"../webfonts/fa-regular-400.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-regular-400.woff2\") format(\"woff2\"), url(\"../webfonts/fa-regular-400.woff\") format(\"woff\"), url(\"../webfonts/fa-regular-400.ttf\") format(\"truetype\"), url(\"../webfonts/fa-regular-400.svg#fontawesome\") format(\"svg\")}/*!@.far*/.far.sc-mge-view{font-family:'Font Awesome 5 Free';font-weight:400}@font-face{font-family:'Font Awesome 5 Free';font-style:normal;font-weight:900;font-display:block;src:url(\"../webfonts/fa-solid-900.eot\");src:url(\"../webfonts/fa-solid-900.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-solid-900.woff2\") format(\"woff2\"), url(\"../webfonts/fa-solid-900.woff\") format(\"woff\"), url(\"../webfonts/fa-solid-900.ttf\") format(\"truetype\"), url(\"../webfonts/fa-solid-900.svg#fontawesome\") format(\"svg\")}/*!@.fa,\n.fas*/.fa.sc-mge-view,.fas.sc-mge-view{font-family:'Font Awesome 5 Free';font-weight:900}";

class MgeView {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.width = 400;
    this.height = 400;
    this.data = "[]";
    this.tree = "{}";
    this.title = "[]";
    this.x = 0;
    this.y = 0;
    this._selectOrder = null;
    this._selectAttr = null;
    this._center = { x: 0, y: 0, cx: 0, cy: 0 };
    this._position = { x: 0, y: 0 };
    this._barTitleHeight = 15;
    this._dimView = { width: 10, height: 10 };
    this.typeChart = {
      "histogram": "mge-barchart",
      "cluster": "mge-clustervis",
      "glyphMatrix": "mge-glyph-matrix",
      "iris": "mge-iris",
      "paperlist": "mge-listing",
    };
    this._canNodeRedirectCorese = false;
    //---------------------------------     
    this.setItemsContextMenu = function (codChart, itens) {
      this._contextMenu.vItens[codChart] = itens;
    };
    this.DS_NodeEdge = 0,
      this.DS_ClusterVis = 1,
      this.DS_Iris = 2,
      this.DS_GlyphMatrix = 3,
      this.DS_Iris_Solo = 4,
      this.DS_Papers_List = 5,
      this.DS_NodeEdge_HAL = 6,
      this.DS_ClusterVis_HAL = 7;
    this._configView = {
      barTitle: true,
      btTool: true,
      btClose: true,
      draggable: true,
      resizable: true,
      aspectRatio: false,
      visible: true
    },
      this._contextMenu = {
        showing: false,
        vItens: [null, null, null, null]
      },
      this._subContextMenu = {
        showing: false
      },
      this._dashboardArea = {
        div: null,
        dash: null,
        svg: null,
        width: 0,
        height: 0
      };
    this._dashboard = document.querySelector("mge-dashboard");
    this.pos1 = 0;
    this.pos2 = 0;
    this.pos3 = 0;
    this.pos4 = 0;
    this.filterTemplate = document.querySelector("." + this.idTemplate);
    this._dimView.width = this.width;
    this._dimView.height = this.height + this._barTitleHeight;
    this._position.x = this.x;
    this._position.y = this.y;
    this._center.cx = this.x + this._dimView.width / 2;
    this._center.cy = this.y + this._dimView.height / 2;
    console.log("Position X:", this.x);
    console.log(this._dimView.width / 2);
    console.log(this._center);
    if (this.typeDiv != "mge-history") {
      state.indexChart++;
    }
  }
  ;
  async getChart() {
    return this._chart;
  }
  dragElement(elm) {
    elm.onmousedown = this.dragMouseDown.bind(this);
  }
  elementDrag(event) {
    event = event || window.event;
    this.selLinkPai = select(this._dashboard.shadowRoot.querySelector(".F-" + this.idDiv));
    this.selLinkFilhos = selectAll(this._dashboard.shadowRoot.querySelectorAll(".P-" + this.idDiv));
    this.selConect = select(this._dashboard.shadowRoot.querySelector("." + this.idDiv));
    this.moveWindow(event.clientX, event.clientY);
  }
  moveWindow(x, y) {
    this.pos1 = this.pos3 - x;
    this.pos2 = this.pos4 - y;
    this.pos3 = x;
    this.pos4 = y;
    this.cont.style.top = this.cont.offsetTop - this.pos2 + 'px';
    this.cont.style.left = this.cont.offsetLeft - this.pos1 + 'px';
    this._position.x = this.cont.offsetLeft;
    this._position.y = this.cont.offsetTop;
    // this.viewDiv.setPosition(this._position.x, this._position.y)
    this._center.cx = this._position.x + this._dimView.width / 2;
    this._center.cy = this._position.y + this._dimView.height / 2;
    if (!this.selLinkPai.empty()) {
      this.selLinkPai.attr("x2", this._center.cx).attr("y2", this._center.cy);
      this.selConect.attr("x", this._center.cx - 6).attr("y", this._center.cy - 6);
    }
    this.selLinkFilhos.attr("x1", this._center.cx).attr("y1", this._center.cy);
    this._dashboard.refreshSvg();
  }
  closeDragElement() {
    /* stop moving when mouse button is released: */
    document.onmouseup = null;
    document.onmousemove = null;
    // this._position.x = event.clientX;
    // this._position.y = event.clientY;
    // this._center.cx = this._position.x + this._dimView.width / 2;
    // this._center.cy = this._position.y + this._dimView.height / 2;
  }
  // Events
  dragMouseDown(event) {
    event = event || window.event;
    event.preventDefault();
    // console.log('sender');
    this.pos3 = event.clientX;
    this.pos4 = event.clientY;
    // this.dashboard.setPosition(event.clientX, event.clientY);
    document.onmouseup = this.closeDragElement;
    document.onmousemove = this.elementDrag.bind(this);
  }
  async _addItemsSelectOrder() {
    this._selectOrder = this.element.shadowRoot.querySelector(".IC-selOrderBy");
    if (this._selectOrder !== null) {
      let _that = this;
      // this._selectOrder.append(new Option("Text", 0));
      // this._selectOrder.append(new Option("Attribute", 1));  // 100 starts numeric index
      this._selectOrder[0].selectedIndex = 0;
      this._selectOrder.addEventListener('change', async function () {
        let valor = +this.value;
        if (valor === 0)
          await _that._chart.acSortExecText();
        else
          await _that._chart.acSortExecAttribute();
      });
    }
  }
  setCenter(x, y) {
    this._center.cx = x;
    this._center.cy = y;
    this._position.x = this._center.cx - this._dimView.width / 2;
    this._position.y = this._center.cy - this._dimView.height / 2;
  }
  ;
  async getCenter() {
    return this._center;
  }
  ;
  async idChart() {
    return this.idDiv;
  }
  ;
  refresh() {
    this.viewDiv.node().style.top = this._position.y + "px";
    this.viewDiv.node().style.left = this._position.x + "px";
  }
  ;
  addTopContent() {
    let _btnMenu = this._top.append("button")
      .attr("id", this.idDiv + "-t-menu-btn")
      .attr("class", "fas fa-angle-double-down")
      .style("background-color", "white");
    _btnMenu.on("click", (event, d) => {
      if (this._filter.style.display == "none") {
        this._filter.style.display = "block";
        event.path[0].className = "fas fa-angle-double-up";
      }
      else {
        // event.path[0].innerHTML = "C &#11015";
        event.path[0].className = "fas fa-angle-double-down";
        this._filter.style.display = "none";
      }
    });
    this._top.append("span")
      .attr("class", "title")
      .attr("id", this.idDiv + "-t-title")
      .text(this.title);
    this._top.append("button")
      .attr("class", "fas fa-times")
      .attr("id", this.idDiv + "-t-close-btn")
      // .text("x")
      .on("click", async (event, d) => {
      await this._dashboard.closeView(this.element);
    });
  }
  ;
  addChartContent(div) {
    div.append(this.typeDiv).attr("data", this.data).attr("id", this.idDiv).attr("tree", this.tree);
    this._chart = this.element.shadowRoot.querySelector(this.typeDiv);
  }
  addFilterContent(div) {
    let _filterDiv = div.append("div").attr("id", this.idDiv + "-f")
      .attr("class", "filter-panel")
      .style("overflow-y", "scroll")
      .style("background-color", "#DCDCDC")
      .style("height", (0.30 * this.height) + "px")
      .style("padding", "5px")
      .style("display", "none");
    this._filter = _filterDiv.node();
    if (this.filterTemplate !== null)
      this._filter.appendChild(this.filterTemplate.content.cloneNode(true));
  }
  async buildPanel(div) {
    this._top = div.append("div")
      .attr("class", "top")
      .attr("id", this.idDiv + "-t")
      .style("height", this._barTitleHeight);
    this._content = div.append("div")
      .attr("class", "content")
      .attr("id", this.idDiv + "-c")
      .style("width", this.width)
      .style("height", "90%")
      .style("overflow", "hidden");
    this.addTopContent();
    this.addChartContent(this._content);
    this.addFilterContent(div);
    // console.log(div);
  }
  setVisible(status) {
    if (status)
      this.cont.style.display = "block";
    else
      this.cont.style.display = "none";
  }
  setPosition(x, y) {
    this.x = x;
    this.y = y;
  }
  async getPosition() {
    return this._position;
  }
  _initAction() {
    // this._dashboardArea.div = select("#viewArea");
    this._dashboardArea.dash = select(this.element);
    this._dashboardArea.dash.classed("DS-viewArea", true)
      .on("click", (event) => {
      if (event.detail === 1) {
        this._onClickAction.bind(this)(event);
      }
      else if (event.detail === 2) {
        this._dblClickAction.bind(this)(event);
      }
    })
      .on("contextmenu", this._onContextMenu.bind(this));
  }
  _onClickAction(event) {
    if (this._contextMenu.showing && this._contextMenu.showing !== "keep") {
      this._contextMenu.showing = false;
      select(this.element.shadowRoot.querySelector(".DS-popup")).remove();
      select("#subContextMenuDiv").remove();
    }
  }
  _onContextMenu(event) {
    let clickedElem, viewDiv, popupDiv, mousePos;
    this._selectedQuery = 8;
    //parseInt($("#selectQuery")[0].selectedIndex);
    event.preventDefault();
    if (this._contextMenu.showing) {
      event.preventDefault();
      this._contextMenu.showing = false;
      select(this.element.shadowRoot.querySelectorAll(".DS-popup")[0]).remove();
    }
    if (event.composedPath()[0].nodeName !== this.typeDiv) {
      this._contextMenu.showing = true;
      clickedElem = select(event.composedPath()[0]);
      if (clickedElem.classed("IC-node") || clickedElem.classed("GM-node")) {
        event.preventDefault();
        viewDiv = this._findParentDiv(clickedElem);
        mousePos = pointer(event, viewDiv.node());
        popupDiv = viewDiv.append("div")
          .attr("class", "DS-popup medium-size")
          .style("left", mousePos[0] + "px")
          .style("top", mousePos[1] + "px");
        if (clickedElem.classed("IC-node"))
          this._execCtxMenuIris(popupDiv, clickedElem, viewDiv.node());
        else if (clickedElem.classed("GM-node"))
          this._execCtxMenuGlyphMatrix(popupDiv, clickedElem, viewDiv.node());
      }
      if (this._selectedQuery !== 8) {
        if (clickedElem.classed("NE-node")
          || clickedElem.classed("NE-edge")
          || clickedElem.classed("CV-node")) {
          event.preventDefault();
          viewDiv = this._findParentDiv(clickedElem);
          mousePos = pointer(event, viewDiv.node());
          popupDiv = viewDiv.append("div")
            .attr("class", "DS-popup medium-size")
            .style("left", mousePos[0] + "px")
            .style("top", mousePos[1] + "px");
          this._contextMenu.showing = true;
          if ((clickedElem.classed("NE-node") || clickedElem.classed("NE-edge")) && this._selectedQuery !== 8)
            this._execCtxMenuNodeEdge(popupDiv, clickedElem, viewDiv.node());
          else if (clickedElem.classed("CV-node"))
            this._execCtxMenuClusterVis(popupDiv, clickedElem, viewDiv.node());
        }
      }
      else {
        event.preventDefault();
        viewDiv = this._findParentDiv(clickedElem);
        mousePos = pointer(event, viewDiv.node());
        if (clickedElem.classed("IC-bars")) {
          popupDiv = viewDiv.append("div")
            .attr("class", "DS-popup small-size")
            .style("left", mousePos[0] + "px")
            .style("top", mousePos[1] + "px");
          this._contextMenu.showing = true;
          this._execCtxMenuIrisBars(event, popupDiv, clickedElem, viewDiv.node());
        }
        else if (clickedElem.classed("NE-node") || clickedElem.classed("NE-edge")) {
          popupDiv = viewDiv.append("div")
            .attr("class", "DS-popup big-size")
            .style("left", mousePos[0] + "px")
            .style("top", mousePos[1] + "px");
          this._contextMenu.showing = true;
          this._execCtxMenuNodeEdgeHAL(event, popupDiv, clickedElem, viewDiv.node());
        }
        else if (clickedElem.classed("CV-node")) {
          popupDiv = viewDiv.append("div")
            .attr("class", "DS-popup big-size")
            .style("left", mousePos[0] + "px")
            .style("top", mousePos[1] + "px");
          this._contextMenu.showing = true;
          this._execCtxMenuClusterVisHAL(event, popupDiv, clickedElem, viewDiv.node());
        }
      }
    }
  }
  _dblClickAction(event) {
    let clickedElem = select(event.composedPath()[0]);
    let viewDiv = this._findParentDiv(clickedElem);
    if (clickedElem.classed("IC-node")) {
      let data = this._contextMenu.vItens[this.DS_Iris_Solo];
      data[0].fActionNode(clickedElem.datum(), viewDiv.node());
    }
  }
  //------------
  _findParentDiv(clickedElem) {
    let nodeElem = clickedElem.node();
    while (nodeElem.parentNode != null && nodeElem.parentNode.className !== "hydrated") {
      // while (nodeElem.parentNode != null && !(nodeElem.parentNode instanceof ShadowRoot)) {  
      nodeElem = select(nodeElem.parentNode).node();
    }
    return select(nodeElem.parentNode);
    // }
  }
  //------------  
  _execCtxMenuNodeEdge(popupDiv, clickedElem, parentId) {
    popupDiv.selectAll("div")
      .data(this._contextMenu.vItens[this.DS_NodeEdge])
      .enter()
      .append("div")
      .on("click", (event, d) => {
      this._contextMenu.showing = false;
      select(this.element.shadowRoot.querySelectorAll(".DS-popup")[0]).remove();
      if (clickedElem.classed("NE-node"))
        d.fActionNode(clickedElem.datum(), parentId);
      // else
      // d.fActionEdge(clickedElem.datum(),parentId);
    })
      .append("label")
      .text(function (d) { return d.label; });
  }
  //------------
  _execCtxMenuNodeEdgeHAL(event, popupDiv, clickedElem, parentId) {
    console.log("enter here 1");
    if (clickedElem.classed("NE-node")) {
      // Display the main context menu only if a node is clicked
      popupDiv.selectAll("div")
        .data(this._contextMenu.vItens[this.DS_NodeEdge_HAL])
        .enter()
        .append("div")
        .on("click", (event, d) => {
        // let mousePos,
        //     viewDiv,
        //     contextMenuDivRight,
        //     subContextMenuDiv;
        if (typeof (d.submenu) === "undefined") {
          if (clickedElem.classed("NE-node"))
            d.fActionNode(clickedElem.datum(), parentId);
          else
            d.fActionEdge(clickedElem.datum(), parentId);
          this._contextMenu.showing = false;
          select(this.element.shadowRoot.querySelectorAll(".DS-popup")[0]).remove();
        }
        // else if (d.submenu) { //if you clicked on New Query
        //     var chart = this.parentNode.parentNode;
        //     mousePos = pointer(event, chart);
        //     contextMenuDivRight = this.parentNode.getBoundingClientRect().width
        //         + this.parentNode.getBoundingClientRect().left
        //         - chart.getBoundingClientRect().left;
        //     if (select("#subContextMenuDiv")[0][0] === null) {
        //         viewDiv = select(event.target.parentNode.parentNode.parentNode);
        //         viewDiv.append("div")
        //             .attr("id", "subContextMenuDiv")
        //             .attr("class", "DS-popup medium-size")
        //             .style("left", contextMenuDivRight + "px")
        //             .style("top", mousePos[1] + "px");
        //         subContextMenuDiv = select("#subContextMenuDiv")
        //         /*  the following will load the submenu of "New Query" containing
        //             query 1, ..., query7
        //          */
        //         d.styleSheet.predefined_request_list.forEach(elt => {
        //             subContextMenuDiv
        //                 .append("div")
        //                 .on("click", function() {
        //                     var form = undefined,
        //                         dataToSend = {
        //                         "query": elt.query,
        //                         "uri": elt.uri,
        //                         "title": elt.title
        //                     };
        //                     this._contextMenu.showing = true;
        //                     parentId = chart.id;
        //                     // dashboard.title = elt.title;
        //                     if ([4, 5, 6, 7].includes(parseInt(elt.title.split("query")[1]))) {
        //                         form = document.querySelectorAll("textarea[id=" + elt.title + "]")[0]
        //                             .parentNode;
        //                     }
        //                     if ([6, 7].includes(parseInt(elt.title.split("query")[1]))) {
        //                         this.processVisualizationQueryType(dataToSend, 2, form);
        //                     } else {
        //                         this.processVisualizationQuery(dataToSend, form);
        //                     }
        //                 })
        //                 .append("label")
        //                 .text(elt.title);
        //         });
        //         this._contextMenu.showing = "keep";
        //     }
        // }
      })
        .append("label")
        .text(function (d) { return d.label; });
      // var numQuery = parseInt(document.querySelectorAll("h3.active")[0]
      //     .outerText.trim().split(" ")[1]),
      //     button = document.querySelectorAll("button.collapsible#query" + numQuery)[0];
      // console.log("coucou");
      // if you didn't activate stylesheet then we remove the entry New Query from main context menu
      // if (!button.previousElementSibling.previousElementSibling.checked)
      //     Array.from(popupDiv.selectAll("div")[0]).forEach((elt, index) => {
      //         if (elt.outerText === "New Query")
      //             elt.remove();
      //     });
    }
  }
  //------------  
  _execCtxMenuClusterVis(popupDiv, clickedElem, parentId) {
    popupDiv.selectAll("div")
      .data(this._contextMenu.vItens[this.DS_ClusterVis])
      .enter()
      .append("div")
      .on("click", (event, d) => {
      this._contextMenu.showing = false;
      select(this.element.shadowRoot.querySelectorAll(".DS-popup")[0]).remove();
      d.fActionNode(clickedElem.datum(), parentId);
      console.log("here 1");
    })
      .append("label")
      .text(function (d) { return d.label; });
  }
  //------------
  _execCtxMenuClusterVisHAL(event, popupDiv, clickedElem, parentId) {
    popupDiv.selectAll("div")
      .data(this._contextMenu.vItens[this.DS_ClusterVis_HAL])
      .enter()
      .append("div")
      .on("click", (event, d) => {
      this._contextMenu.showing = false;
      select(this.element.shadowRoot.querySelectorAll(".DS-popup")[0]).remove();
      d.fActionNode(clickedElem.datum(), parentId);
      console.log("here 2");
    })
      .append("label")
      .text(function (d) { return d.label; });
  }
  //------------  
  _execCtxMenuIris(popupDiv, clickedElem, parentId) {
    popupDiv.selectAll("div")
      .data(this._contextMenu.vItens[this.DS_Iris])
      .enter()
      .append("div")
      .on("click", (event, d) => {
      this._contextMenu.showing = false;
      select(this.element.shadowRoot.querySelectorAll(".DS-popup")[0]).remove();
      d.fActionNode(clickedElem.datum(), parentId);
    })
      .append("label")
      .text(function (d) { return d.label; });
  }
  //------------  
  _execCtxMenuGlyphMatrix(popupDiv, clickedElem, parentId) {
    popupDiv.selectAll("div")
      .data(this._contextMenu.vItens[this.DS_GlyphMatrix])
      .enter()
      .append("div")
      .on("click", (event, d) => {
      this._contextMenu.showing = false;
      select(this.element.shadowRoot.querySelectorAll(".DS-popup")[0]).remove();
      d.fActionNode(clickedElem.datum(), parentId);
    })
      .append("label")
      .text(function (d) { return d.label; });
  }
  //------------
  _execCtxMenuIrisBars(event, popupDiv, clickedElem, parentNode) {
    popupDiv.selectAll("div")
      .data(this._contextMenu.vItens[this.DS_Papers_List])
      .enter()
      .append("div")
      .on("click", (event, d) => {
      this._contextMenu.showing = false;
      select(this.element.shadowRoot.querySelectorAll(".DS-popup")[0]).remove();
      d.fActionNode(clickedElem.datum(), parentNode);
    })
      .append("label")
      .text(function (d) { return d.label; });
  }
  _inicContextMenu() {
    this.setItemsContextMenu(this.DS_NodeEdge, [
      // { label: "NodeEdge", fActionNode: _fActionNotImplemented, fActionEdge: _fActionNotImplemented },
      { label: "ClusterVis", fActionNode: this._fActionNodeNE_CV.bind(this), fActionEdge: this._fActionNotImplemented },
      { label: "Iris", fActionNode: this._fActionNodeNE_IC.bind(this), fActionEdge: this._fActionNotApplicable },
      { label: "Histogram", fActionNode: this._fActionNodeNE_HC.bind(this), fActionEdge: this._fActionNotImplemented },
      { label: "GlyphMatrix", fActionNode: this._fActionNodeNE_GM.bind(this), fActionEdge: this._fActionEdgeNE_GM.bind(this) },
      //{ label: "New Query", fActionNode: _fActionNodeNE_NQ, fActionEdge: _fActionNotImplemented }
    ]);
    this.setItemsContextMenu(this.DS_ClusterVis, [
      // { label: "NodeEdge", fActionNode: _fActionNotImplemented },
      { label: "ClusterVis", fActionNode: this._fActionNodeCV_CV.bind(this) },
      { label: "Iris", fActionNode: this._fActionNodeCV_IC.bind(this) },
      { label: "Histogram", fActionNode: this._fActionNodeNE_HC.bind(this) },
      { label: "GlyphMatrix", fActionNode: this._fActionNodeCV_GM.bind(this) },
      { label: "Papers' List", fActionNode: this._fActionNodeCV_PL.bind(this) },
      //{ label: "New Query", fActionNode: _fActionNodeCV_NQ }
    ]);
    this.setItemsContextMenu(this.DS_Iris, [
      { label: "NodeEdge", fActionNode: this._fActionNotImplemented.bind(this) },
      { label: "ClusterVis", fActionNode: this._fActionNodeIC_CV.bind(this) },
      { label: "Iris", fActionNode: this._fActionNodeIC_IC.bind(this) },
      { label: "GlyphMatrix", fActionNode: this._fActionNodeIC_GM.bind(this) },
      { label: "Histogram", fActionNode: this._fActionNodeIC_HC.bind(this) },
      { label: "Papers' List", fActionNode: this._fActionNodeIC_PLOnName.bind(this) }
    ]);
    this.setItemsContextMenu(this.DS_GlyphMatrix, [
      // { label: "NodeEdge", fActionNode: _fActionNotImplemented },
      { label: "ClusterVis", fActionNode: this._fActionNodeGM_CV.bind(this) },
      { label: "Iris", fActionNode: this._fActionNodeGM_IC.bind(this) },
      { label: "GlyphMatrix", fActionNode: this._fActionNodeGM_GM.bind(this) },
      { label: "Histogram", fActionNode: this._fActionNodeNE_HC.bind(this) },
      { label: "Papers' List", fActionNode: this._fActionNodeGM_PL.bind(this) }
    ]);
    this.setItemsContextMenu(this.DS_Iris_Solo, [
      { label: "Iris", fActionNode: this._fActionNodeIC_IC_SameView.bind(this) }
    ]);
    this.setItemsContextMenu(this.DS_Papers_List, [
      { label: "Papers' List", fActionNode: this._fActionNodeIC_PL.bind(this) },
      { label: "Histogram", fActionNode: this._fActionNodeIC_HCCluster.bind(this) },
    ]);
    if (this._canNodeRedirectCorese) {
      this.setItemsContextMenu(this.DS_NodeEdge_HAL, [
        // { label: "NodeEdge", fActionNode: _fActionNotImplemented, fActionEdge: _fActionNotImplemented },
        { label: "ClusterVis", fActionNode: this._fActionNodeNE_CV.bind(this), fActionEdge: this._fActionNotImplemented },
        { label: "Iris", fActionNode: this._fActionNodeNE_IC.bind(this), fActionEdge: this._fActionNotApplicable.bind(this) },
        { label: "GlyphMatrix", fActionNode: this._fActionNodeNE_GM.bind(this), fActionEdge: this._fActionEdgeNE_GM.bind(this) },
        { label: "Histogram", fActionNode: this._fActionNodeNE_HC.bind(this), fActionEdge: this._fActionNotImplemented },
        { label: "Papers' List", fActionNode: this._fActionNodeNE_PL.bind(this), fActionEdge: this._fActionEdgeNE_PL.bind(this) },
        // { label: "Corese Browser", fActionNode: this._fActionNodeNE_CI.bind(this), fActionEdge: _fActionNotImplemented },
        // {
        //     label: "New Query", fActionNode: _fActionNodeNE_NQ, fActionEdge: _fActionNotImplemented,
        //     styleSheet: _stylesheet, submenu: true
        // },
      ]);
    }
    else {
      this.setItemsContextMenu(this.DS_NodeEdge_HAL, [
        // { label: "NodeEdge", fActionNode: _fActionNotImplemented, fActionEdge: _fActionNotImplemented },
        { label: "ClusterVis", fActionNode: this._fActionNodeNE_CV.bind(this), fActionEdge: this._fActionNotImplemented },
        { label: "Iris", fActionNode: this._fActionNodeNE_IC.bind(this), fActionEdge: this._fActionNotApplicable },
        { label: "GlyphMatrix", fActionNode: this._fActionNodeNE_GM.bind(this), fActionEdge: this._fActionEdgeNE_GM.bind(this) },
        { label: "Histogram", fActionNode: this._fActionNodeNE_HC.bind(this), fActionEdge: this._fActionNotImplemented },
        { label: "Papers' List", fActionNode: this._fActionNodeNE_PL.bind(this), fActionEdge: this._fActionEdgeNE_PL.bind(this) },
        // {
        //     label: "New Query", fActionNode: _fActionNodeNE_NQ, fActionEdge: _fActionNotImplemented,
        //     styleSheet: _stylesheet, submenu: true
        // },
      ]);
    }
    this.setItemsContextMenu(this.DS_ClusterVis_HAL, [
      // { label: "NodeEdge", fActionNode: _fActionNotImplemented },
      { label: "ClusterVis", fActionNode: this._fActionNodeCV_CV.bind(this) },
      { label: "Iris", fActionNode: this._fActionNodeCV_IC.bind(this) },
      { label: "GlyphMatrix", fActionNode: this._fActionNodeCV_GM.bind(this) },
      { label: "Histogram", fActionNode: this._fActionNodeCV_HC.bind(this) },
      { label: "Papers' List", fActionNode: this._fActionNodeCV_PL.bind(this) }
    ]);
  }
  async _fActionNotApplicable() {
    alert("Not applicable!!");
  }
  async _fActionNotImplemented() {
    alert("Not implemented!!");
  }
  //=======================
  // Actions GM: GlyphMatrix
  //=======================
  async _fActionNodeGM_CV(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.cluster);
    // _showClusterVis(node, parentNode);
  }
  //---------------
  async _fActionNodeGM_IC(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.iris);
    // _showIris(node, parentNode);
  }
  //---------------
  async _fActionNodeGM_GM(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.glyphMatrix);
    // _showGlyphMatrix(node, parentNode);
  }
  //---------------
  async _fActionNodeGM_PL(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.paperlist, false, undefined, true);
    // _showPapersList(node, parentNode, false, undefined, false);
  }
  //=======================
  // Actions CV: ClusterVis
  //=======================
  async _fActionNodeCV_CV(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.cluster);
    // this._showClusterVis(node, parentNode.id);
  }
  //---------------
  async _fActionNodeCV_IC(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.iris);
    // this._showIris(node, parentNode.id);
  }
  //---------------
  async _fActionNodeCV_GM(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.glyphMatrix);
    // this._showGlyphMatrix(node, parentNode);
  }
  //---------------
  async _fActionNodeCV_PL(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.paperlist, false, undefined, true);
    // this._showPapersList(node, parentNode, false, undefined, true);
  }
  //---------------
  async _fActionNodeCV_HC(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.histogram, false, undefined, true);
    // this._showHistogram(node, parentNode, false, undefined, true);
  }
  async _fActionNodeCV_NQ(node, parentNode) {
    console.log("oula");
  }
  //---------------
  async _fActionNodeNE_CI(node, parentNode) {
    // const data = _subGraph.allPapersList(node, _data);              // Get a data structure that has url in it (for this test example)
    // const baseUrl = _stylesheet.browser.url
    // const uriUrl = node.labels[1]                                   // Url parameter for the redirection.
    // // Check if the clicked node is an URI and can be linked to the given browser
    // if (this.isURI(uriUrl)) {
    //     window.open(baseUrl + uriUrl);                              // Opens a new window with the given URL
    // } else {
    //     alert("Cette entitée ne posséde pas d'entrée en ligne")
    // }
  }
  async isURI(str) {
    var pattern = new RegExp('^(https?:\\/\\/)?' + // protocol
      '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
      '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR ip (v4) address
      '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
      '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
      '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
    return !!pattern.test(str);
  }
  //---------------
  async _fActionEdgeNE_PL(edge, parentNode) {
    // let vOrder = await parentNode.getVOrder();
    // let node = await parentNode.dataVisToNode(vOrder[edge.indexData]);
    this._showChart(edge, parentNode.id, this.typeChart.paperlist, false, undefined);
    // this._showPapersList(edge, parentNode.id, false, undefined);
  }
  async _fActionNodeNE_CV(node, parentNode) {
    // let vOrder = await parentNode.getVOrder();
    // let sourceNode = await parentNode.getSourceObject();
    // let targetNode = await parentNode.dataVisToNode(vOrder[node.indexData]);
    this._showChart(node, parentNode.id, this.typeChart.cluster, false, undefined);
    // this._showClusterVis(node, parentNode.id, true);
  }
  //---------------
  async _fActionNodeNE_IC(node, parentNode) {
    // let vOrder = await parentNode.getVOrder();
    // let sourceNode = await parentNode.getSourceObject();
    // let targetNode = await parentNode.dataVisToNode(vOrder[node.indexData]);
    this._showChart(node, parentNode.id, this.typeChart.iris, true);
    // this._showIris(node, parentNode.id, true);
  }
  //---------------
  async _fActionNodeNE_GM(node, parentNode) {
    this._showChart(node, parentNode.id, this.typeChart.glyphMatrix, true);
    // this._showGlyphMatrix(node, parentId);
  }
  //---------------
  async _fActionNodeNE_PL(node, parentNode) {
    // let vOrder = await parentNode.getVOrder();
    // node = await parentNode.dataVisToNode(vOrder[node.indexData]);
    this._showChart(node, parentNode.id, this.typeChart.paperlist, true);
    // this._showPapersList(node, parentNode.id, false, undefined);
  }
  async _fActionNodeNE_HC(node, parentNode) {
    // let vOrder = await parentNode.getVOrder();
    // let sourceNode = await parentNode.getSourceObject();
    // let targetNode = await parentNode.dataVisToNode(vOrder[node.indexData]);
    this._showChart(node, parentNode.id, this.typeChart.histogram, true);
    // this._showHistogram(node, parentNode.id, true);
  }
  _fActionNodeNE_NQ(node, parentId, parentChart) {
  }
  async _fActionEdgeNE_GM(edge, parentId) {
    // let data, posicaoPai, title;
    // if (edge.source.cluster && edge.target.cluster) {
    //     data = _subGraph.edgesBtClustersMatrixGlyph(edge, _data);
    // } else {
    //     d3.preventDefault();
    //     alert("Not implemented!!");
    //     return;
    // }
    // posicaoPai = _dashboard.getChart(parentId).view.getPosition();
    // _chart.view = _dashboard
    //     .configureView({
    //         barTitle: true,
    //         btClose: true,
    //         draggable: true,
    //         resizable: true,
    //         aspectRatio: true,
    //         visible: false
    //     })
    //     .newView(posicaoPai.x + 20, posicaoPai.y + 20);
    // _chart.chart = MatrixGlyphChart(_chart.view.idChart()).box({
    //     width: MG_WidthChart,
    //     height: MG_HeightChart
    // });
    // _chart.view.conectChart(_chart.chart, MatrixGlyphPanel);
    // title = "Edges: " + edge.source.key + " - " + edge.target.key;
    // _chart.view.setTitle(title);
    // _dashboard.addChart(parentId, {
    //     id: _chart.view.idChart(),
    //     title: title,
    //     typeChart: "GM",
    //     hidden: false,
    //     x: _chart.view.getPosition().x,
    //     y: _chart.view.getPosition().y,
    //     chart: _chart.chart,
    //     view: _chart.view
    // });
    // setTimeout(function () {   // It was put here to give the model time to work
    //     _chart.chart
    //         .indexAttrSort(0)     // Numeric attribute 0. Must be before date ()
    //         .indexAttrLegend(0)     //  Must be before date ()
    //         .indexAttrCellColor(1001)
    //         .glyph(_glyphStar)
    //         .cellColorsMap(["#99E6E6"]);
    //     _chart.chart
    //         .data(data);
    //     _chart.chart.setTTMatrixCell(_tooltips.matrixCell(data, _glyphStar, ATN_AuthorName));
    //     _historyTree.chart.data(_dashboard.getTree());
    //     _chart.view.show(true);
    // }, 100);
  }
  //=======================
  // Actions IC: Iris
  //=======================
  //---------------
  async _fActionNodeIC_CV(nodeIris, parentNode) {
    let vOrder = await parentNode.getVOrder();
    await parentNode.getSourceObject();
    let targetNode = await parentNode.dataVisToNode(vOrder[nodeIris.indexData]);
    this._showChart(targetNode, parentNode.id, this.typeChart.cluster, true);
  }
  async _fActionNodeIC_IC(nodeIris, parentNode) {
    // let vOrder = _dashboard.getChart(parentId).chart.getVOrder();
    // let node = _dashboard.getChart(parentId).chart.dataVisToNode(vOrder[nodeIris.indexData]);
    // _showIris(node, parentId);
    let vOrder = await parentNode.getVOrder();
    await parentNode.getSourceObject();
    let targetNode = await parentNode.dataVisToNode(vOrder[nodeIris.indexData]);
    this._showChart(targetNode, parentNode.id, this.typeChart.iris, true, targetNode);
    // this._showIris(sourceNode, parentNode.id, true, targetNode);
  }
  //---------------
  async _fActionNodeIC_GM(nodeIris, parentNode) {
    let vOrder = await parentNode.getVOrder();
    await parentNode.getSourceObject();
    let targetNode = await parentNode.dataVisToNode(vOrder[nodeIris.indexData]);
    this._showChart(targetNode, parentNode.id, this.typeChart.glyphMatrix, true, targetNode);
    // _showGlyphMatrix(node, parentId);
  }
  async _fActionNodeIC_IC_SameView(nodeIris, parentNode) {
    let vOrder = await parentNode.getVOrder();
    await parentNode.getSourceObject();
    let targetNode = await parentNode.dataVisToNode(vOrder[nodeIris.indexData]);
    this._showChart(targetNode, parentNode.id, this.typeChart.iris, true, targetNode);
    // this._showIris(sourceNode, parentNode.id, true, targetNode);
  }
  //---------------
  async _fActionNodeIC_PL(nodeIris, parentNode) {
    let vOrder = await parentNode.getVOrder();
    let sourceNode = await parentNode.getSourceObject();
    let targetNode = await parentNode.dataVisToNode(vOrder[nodeIris.indexData]);
    this._showChart(sourceNode, parentNode.id, this.typeChart.paperlist, true, targetNode);
    // this._showPapersList(sourceNode, parentNode.id, true, targetNode);
  }
  //---------------
  async _fActionNodeIC_PLOnName(nodeIris, parentNode) {
    let vOrder = await parentNode.getVOrder();
    let node = await parentNode.dataVisToNode(vOrder[nodeIris.indexData]);
    this._showChart(node, parentNode, this.typeChart.paperlist, false, undefined);
    // this._showPapersList(node, parentNode, false, undefined);
  }
  //---------------
  async _fActionNodeIC_HC(nodeIris, parentNode) {
    let vOrder = await parentNode.getVOrder();
    await parentNode.getSourceObject();
    let targetNode = await parentNode.dataVisToNode(vOrder[nodeIris.indexData]);
    this._showChart(targetNode, parentNode.id, this.typeChart.histogram, true, targetNode);
  }
  async _fActionNodeIC_HCCluster(nodeIris, parentNode) {
    // let chart = this.element.shadowRoot.querySelector(this.idDiv);
    // console.log(this.element);
    let vOrder = await parentNode.getVOrder();
    await parentNode.getSourceObject();
    let targetNode = await parentNode.dataVisToNode(vOrder[nodeIris.indexData]);
    this._showChart(targetNode, parentNode.id, this.typeChart.histogram, true, targetNode);
    // this._showHistogram(sourceNode, parentNode.id, true, targetNode);
  }
  async _showChart(node, parentId, typeChart, isFromEdge = false, secondNode = null, isFromCluster = false) {
    var parentPosition = await this.getPosition();
    var childId = "chart-" + state.indexChart;
    let _viewChild = select(this._dashboard.shadowRoot.querySelectorAll(".graph")[0]).append("mge-view")
      // .attr("data", "databaseUFRGS2004")
      .attr("type-div", typeChart)
      .attr("id-template", "filter-content-histogram")
      .attr("id-div", childId)
      .attr("title", "Michel Riveill's 23  connections  papers")
      .style("margin", "50px")
      .attr("x", parentPosition.x + 30)
      .attr("y", parentPosition.y + 30);
    var chartNode = await _viewChild.node().getChart();
    await chartNode.setData(node);
    var viewChild = _viewChild.node();
    var link = await this._dashboard._addLink(this.element, viewChild);
    await this._dashboard.addChart(parentId, {
      id: childId, title: viewChild.title, typeChart: viewChild.typeDiv, hidden: false,
      x: viewChild.x, y: viewChild.y, view: viewChild, link: link
    });
    await this._dashboard.refreshLinks();
    if (node.cluster) {
      alert("Not implemented!!");
      return;
    }
  }
  componentDidRender() {
    this._inicContextMenu();
    this._initAction();
  }
  componentDidLoad() {
    this.viewDiv = select(this.element.shadowRoot.getElementById(this.idDiv + "-g"))
      .attr("width", this.width)
      .attr("height", this.height)
      .style("top", this.y + "px")
      .style("left", this.x + "px")
      .style("position", "absolute")
      .style("border-style", "groove")
      .style("border-width", "0.5px");
    this.buildPanel(this.viewDiv);
    this.mover = this.element.shadowRoot.getElementById(this.idDiv + '-t');
    this.cont = this.element.shadowRoot.getElementById(this.idDiv + "-g");
    this.dragElement(this.mover);
    this._addItemsSelectOrder();
  }
  render() {
    return (hAsync(Host, null, hAsync("div", { id: this.idDiv + "-g" })));
  }
  get element() { return getElement(this); }
  static get style() { return mgeViewCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "mge-view",
    "$members$": {
      "width": [2],
      "height": [2],
      "typeDiv": [1, "type-div"],
      "idDiv": [1, "id-div"],
      "data": [1],
      "tree": [1],
      "title": [1],
      "idTemplate": [1, "id-template"],
      "x": [1026],
      "y": [1026],
      "getChart": [64],
      "_addItemsSelectOrder": [64],
      "setCenter": [64],
      "getCenter": [64],
      "idChart": [64],
      "refresh": [64],
      "setVisible": [64],
      "setPosition": [64],
      "getPosition": [64]
    },
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

const panelWindowCss = "/*!@:host*/.sc-panel-window-h{display:block}";

class PanelWindow {
  constructor(hostRef) {
    registerInstance(this, hostRef);
  }
  render() {
    return (hAsync(Host, null, hAsync("slot", null)));
  }
  static get style() { return panelWindowCss; }
  static get cmpMeta() { return {
    "$flags$": 9,
    "$tagName$": "panel-window",
    "$members$": undefined,
    "$listeners$": undefined,
    "$lazyBundleId$": "-",
    "$attrsToReflect$": []
  }; }
}

registerComponents([
  MgeBarchart,
  MgeClustervis,
  MgeDashboard,
  MgeGlyphMatrix,
  MgeHistory,
  MgeIris,
  MgeListing,
  MgeNodelink,
  MgeQuery,
  MgeView,
  PanelWindow,
]);

exports.hydrateApp = hydrateApp;


  /*hydrateAppClosure end*/
  hydrateApp(window, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve);
  }

  hydrateAppClosure($stencilWindow);
}

function createWindowFromHtml(e, t) {
 let r = templateWindows.get(t);
 return null == r && (r = new MockWindow(e), templateWindows.set(t, r)), cloneWindow(r);
}

function normalizeHydrateOptions(e) {
 const t = Object.assign({
  serializeToHtml: !1,
  destroyWindow: !1,
  destroyDocument: !1
 }, e || {});
 return "boolean" != typeof t.clientHydrateAnnotations && (t.clientHydrateAnnotations = !0), 
 "boolean" != typeof t.constrainTimeouts && (t.constrainTimeouts = !0), "number" != typeof t.maxHydrateCount && (t.maxHydrateCount = 300), 
 "boolean" != typeof t.runtimeLogging && (t.runtimeLogging = !1), "number" != typeof t.timeout && (t.timeout = 15e3), 
 Array.isArray(t.excludeComponents) ? t.excludeComponents = t.excludeComponents.filter(filterValidTags).map(mapValidTags) : t.excludeComponents = [], 
 Array.isArray(t.staticComponents) ? t.staticComponents = t.staticComponents.filter(filterValidTags).map(mapValidTags) : t.staticComponents = [], 
 t;
}

function filterValidTags(e) {
 return "string" == typeof e && e.includes("-");
}

function mapValidTags(e) {
 return e.trim().toLowerCase();
}

function generateHydrateResults(e) {
 "string" != typeof e.url && (e.url = "https://hydrate.stenciljs.com/"), "string" != typeof e.buildId && (e.buildId = createHydrateBuildId());
 const t = {
  buildId: e.buildId,
  diagnostics: [],
  url: e.url,
  host: null,
  hostname: null,
  href: null,
  pathname: null,
  port: null,
  search: null,
  hash: null,
  html: null,
  httpStatus: null,
  hydratedCount: 0,
  anchors: [],
  components: [],
  imgs: [],
  scripts: [],
  staticData: [],
  styles: [],
  title: null
 };
 try {
  const r = new URL(e.url, "https://hydrate.stenciljs.com/");
  t.url = r.href, t.host = r.host, t.hostname = r.hostname, t.href = r.href, t.port = r.port, 
  t.pathname = r.pathname, t.search = r.search, t.hash = r.hash;
 } catch (e) {
  renderCatchError(t, e);
 }
 return t;
}

function renderBuildDiagnostic(e, t, r, s) {
 const n = {
  level: t,
  type: "build",
  header: r,
  messageText: s,
  relFilePath: null,
  absFilePath: null,
  lines: []
 };
 return e.pathname ? "/" !== e.pathname && (n.header += ": " + e.pathname) : e.url && (n.header += ": " + e.url), 
 e.diagnostics.push(n), n;
}

function renderBuildError(e, t) {
 return renderBuildDiagnostic(e, "error", "Hydrate Error", t);
}

function renderCatchError(e, t) {
 const r = renderBuildError(e, null);
 return null != t && (null != t.stack ? r.messageText = t.stack.toString() : null != t.message ? r.messageText = t.message.toString() : r.messageText = t.toString()), 
 r;
}

function runtimeLog(e, t, r) {
 global.console[t].apply(global.console, [ `[ ${e}  ${t} ] `, ...r ]);
}

function inspectElement(e, t, r) {
 const s = t.children;
 for (let t = 0, n = s.length; t < n; t++) {
  const n = s[t], o = n.nodeName.toLowerCase();
  if (o.includes("-")) {
   const t = e.components.find((e => e.tag === o));
   null != t && (t.count++, r > t.depth && (t.depth = r));
  } else switch (o) {
  case "a":
   const t = collectAttributes(n);
   t.href = n.href, "string" == typeof t.href && (e.anchors.some((e => e.href === t.href)) || e.anchors.push(t));
   break;

  case "img":
   const r = collectAttributes(n);
   r.src = n.src, "string" == typeof r.src && (e.imgs.some((e => e.src === r.src)) || e.imgs.push(r));
   break;

  case "link":
   const s = collectAttributes(n);
   s.href = n.href, "string" == typeof s.rel && "stylesheet" === s.rel.toLowerCase() && "string" == typeof s.href && (e.styles.some((e => e.link === s.href)) || (delete s.rel, 
   delete s.type, e.styles.push(s)));
   break;

  case "script":
   const o = collectAttributes(n);
   if (n.hasAttribute("src")) o.src = n.src, "string" == typeof o.src && (e.scripts.some((e => e.src === o.src)) || e.scripts.push(o)); else {
    const t = n.getAttribute("data-stencil-static");
    t && e.staticData.push({
     id: t,
     type: n.getAttribute("type"),
     content: n.textContent
    });
   }
  }
  inspectElement(e, n, ++r);
 }
}

function collectAttributes(e) {
 const t = {}, r = e.attributes;
 for (let e = 0, s = r.length; e < s; e++) {
  const s = r.item(e), n = s.nodeName.toLowerCase();
  if (SKIP_ATTRS.has(n)) continue;
  const o = s.nodeValue;
  "class" === n && "" === o || (t[n] = o);
 }
 return t;
}

function patchDomImplementation(e, t) {
 let r;
 if (null != e.defaultView ? (t.destroyWindow = !0, patchWindow(e.defaultView), r = e.defaultView) : (t.destroyWindow = !0, 
 t.destroyDocument = !1, r = new MockWindow(!1)), r.document !== e && (r.document = e), 
 e.defaultView !== r && (e.defaultView = r), "function" != typeof e.documentElement.constructor.prototype.getRootNode && (e.createElement("unknown-element").constructor.prototype.getRootNode = getRootNode), 
 "function" == typeof e.createEvent) {
  const t = e.createEvent("CustomEvent").constructor;
  r.CustomEvent !== t && (r.CustomEvent = t);
 }
 try {
  e.baseURI;
 } catch (t) {
  Object.defineProperty(e, "baseURI", {
   get() {
    const t = e.querySelector("base[href]");
    return t ? new URL(t.getAttribute("href"), r.location.href).href : r.location.href;
   }
  });
 }
 return r;
}

function getRootNode(e) {
 const t = null != e && !0 === e.composed;
 let r = this;
 for (;null != r.parentNode; ) r = r.parentNode, !0 === t && null == r.parentNode && null != r.host && (r = r.host);
 return r;
}

function renderToString(e, t) {
 const r = normalizeHydrateOptions(t);
 return r.serializeToHtml = !0, new Promise((t => {
  let s;
  const n = generateHydrateResults(r);
  if (hasError(n.diagnostics)) t(n); else if ("string" == typeof e) try {
   r.destroyWindow = !0, r.destroyDocument = !0, s = new MockWindow(e), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else if (isValidDocument(e)) try {
   r.destroyDocument = !1, s = patchDomImplementation(e, r), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else renderBuildError(n, 'Invalid html or document. Must be either a valid "html" string, or DOM "document".'), 
  t(n);
 }));
}

function hydrateDocument(e, t) {
 const r = normalizeHydrateOptions(t);
 return r.serializeToHtml = !1, new Promise((t => {
  let s;
  const n = generateHydrateResults(r);
  if (hasError(n.diagnostics)) t(n); else if ("string" == typeof e) try {
   r.destroyWindow = !0, r.destroyDocument = !0, s = new MockWindow(e), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else if (isValidDocument(e)) try {
   r.destroyDocument = !1, s = patchDomImplementation(e, r), render(s, r, n, t);
  } catch (e) {
   s && s.close && s.close(), s = null, renderCatchError(n, e), t(n);
  } else renderBuildError(n, 'Invalid html or document. Must be either a valid "html" string, or DOM "document".'), 
  t(n);
 }));
}

function render(e, t, r, s) {
 if (process.__stencilErrors || (process.__stencilErrors = !0, process.on("unhandledRejection", (e => {
  console.log("unhandledRejection", e);
 }))), function n(e, t, r, s) {
  try {
   e.location.href = r.url;
  } catch (e) {
   renderCatchError(s, e);
  }
  if ("string" == typeof r.userAgent) try {
   e.navigator.userAgent = r.userAgent;
  } catch (e) {}
  if ("string" == typeof r.cookie) try {
   t.cookie = r.cookie;
  } catch (e) {}
  if ("string" == typeof r.referrer) try {
   t.referrer = r.referrer;
  } catch (e) {}
  if ("string" == typeof r.direction) try {
   t.documentElement.setAttribute("dir", r.direction);
  } catch (e) {}
  if ("string" == typeof r.language) try {
   t.documentElement.setAttribute("lang", r.language);
  } catch (e) {}
  if ("string" == typeof r.buildId) try {
   t.documentElement.setAttribute("data-stencil-build", r.buildId);
  } catch (e) {}
  try {
   e.customElements = null;
  } catch (e) {}
  return r.constrainTimeouts && constrainTimeouts(e), function n(e, t, r) {
   try {
    const s = e.location.pathname;
    e.console.error = (...e) => {
     const n = e.reduce(((e, t) => {
      if (t) {
       if (null != t.stack) return e + " " + String(t.stack);
       if (null != t.message) return e + " " + String(t.message);
      }
      return String(t);
     }), "").trim();
     "" !== n && (renderCatchError(r, n), t.runtimeLogging && runtimeLog(s, "error", [ n ]));
    }, e.console.debug = (...e) => {
     renderBuildDiagnostic(r, "debug", "Hydrate Debug", [ ...e ].join(", ")), t.runtimeLogging && runtimeLog(s, "debug", e);
    }, t.runtimeLogging && [ "log", "warn", "assert", "info", "trace" ].forEach((t => {
     e.console[t] = (...e) => {
      runtimeLog(s, t, e);
     };
    }));
   } catch (e) {
    renderCatchError(r, e);
   }
  }(e, r, s), e;
 }(e, e.document, t, r), "function" == typeof t.beforeHydrate) try {
  const n = t.beforeHydrate(e.document);
  isPromise(n) ? n.then((() => {
   hydrateFactory(e, t, r, afterHydrate, s);
  })) : hydrateFactory(e, t, r, afterHydrate, s);
 } catch (n) {
  renderCatchError(r, n), finalizeHydrate(e, e.document, t, r, s);
 } else hydrateFactory(e, t, r, afterHydrate, s);
}

function afterHydrate(e, t, r, s) {
 if ("function" == typeof t.afterHydrate) try {
  const n = t.afterHydrate(e.document);
  isPromise(n) ? n.then((() => {
   finalizeHydrate(e, e.document, t, r, s);
  })) : finalizeHydrate(e, e.document, t, r, s);
 } catch (n) {
  renderCatchError(r, n), finalizeHydrate(e, e.document, t, r, s);
 } else finalizeHydrate(e, e.document, t, r, s);
}

function finalizeHydrate(e, t, r, s, n) {
 try {
  if (inspectElement(s, t.documentElement, 0), !1 !== r.removeUnusedStyles) try {
   ((e, t) => {
    try {
     const r = e.head.querySelectorAll("style[data-styles]"), s = r.length;
     if (s > 0) {
      const n = (e => {
       const t = {
        attrs: new Set,
        classNames: new Set,
        ids: new Set,
        tags: new Set
       };
       return collectUsedSelectors(t, e), t;
      })(e.documentElement);
      for (let e = 0; e < s; e++) removeUnusedStyleText(n, t, r[e]);
     }
    } catch (e) {
     ((e, t, r) => {
      const s = {
       level: "error",
       type: "build",
       header: "Build Error",
       messageText: "build error",
       relFilePath: null,
       absFilePath: null,
       lines: []
      };
      null != t && (null != t.stack ? s.messageText = t.stack.toString() : null != t.message ? s.messageText = t.message.toString() : s.messageText = t.toString()), 
      null == e || shouldIgnoreError(s.messageText) || e.push(s);
     })(t, e);
    }
   })(t, s.diagnostics);
  } catch (e) {
   renderCatchError(s, e);
  }
  if ("string" == typeof r.title) try {
   t.title = r.title;
  } catch (e) {
   renderCatchError(s, e);
  }
  s.title = t.title, r.removeScripts && removeScripts(t.documentElement);
  try {
   ((e, t) => {
    let r = e.head.querySelector('link[rel="canonical"]');
    "string" == typeof t ? (null == r && (r = e.createElement("link"), r.setAttribute("rel", "canonical"), 
    e.head.appendChild(r)), r.setAttribute("href", t)) : null != r && (r.getAttribute("href") || r.parentNode.removeChild(r));
   })(t, r.canonicalUrl);
  } catch (e) {
   renderCatchError(s, e);
  }
  try {
   (e => {
    const t = e.head;
    let r = t.querySelector("meta[charset]");
    null == r ? (r = e.createElement("meta"), r.setAttribute("charset", "utf-8")) : r.remove(), 
    t.insertBefore(r, t.firstChild);
   })(t);
  } catch (e) {}
  hasError(s.diagnostics) || (s.httpStatus = 200);
  try {
   const e = t.head.querySelector('meta[http-equiv="status"]');
   if (null != e) {
    const t = e.getAttribute("content");
    t && t.length > 0 && (s.httpStatus = parseInt(t, 10));
   }
  } catch (e) {}
  r.clientHydrateAnnotations && t.documentElement.classList.add("hydrated"), r.serializeToHtml && (s.html = serializeDocumentToString(t, r));
 } catch (e) {
  renderCatchError(s, e);
 }
 if (r.destroyWindow) try {
  r.destroyDocument || (e.document = null, t.defaultView = null), e.close && e.close();
 } catch (e) {
  renderCatchError(s, e);
 }
 n(s);
}

function serializeDocumentToString(e, t) {
 return serializeNodeToHtml(e, {
  approximateLineWidth: t.approximateLineWidth,
  outerHtml: !1,
  prettyHtml: t.prettyHtml,
  removeAttributeQuotes: t.removeAttributeQuotes,
  removeBooleanAttributeQuotes: t.removeBooleanAttributeQuotes,
  removeEmptyAttributes: t.removeEmptyAttributes,
  removeHtmlComments: t.removeHtmlComments,
  serializeShadowRoot: !1
 });
}

function isValidDocument(e) {
 return null != e && 9 === e.nodeType && null != e.documentElement && 1 === e.documentElement.nodeType && null != e.body && 1 === e.body.nodeType;
}

function removeScripts(e) {
 const t = e.children;
 for (let e = t.length - 1; e >= 0; e--) {
  const r = t[e];
  removeScripts(r), ("SCRIPT" === r.nodeName || "LINK" === r.nodeName && "modulepreload" === r.getAttribute("rel")) && r.remove();
 }
}

const templateWindows = new Map, createHydrateBuildId = () => {
 let e = "abcdefghijklmnopqrstuvwxyz", t = "";
 for (;t.length < 8; ) t += e[Math.floor(Math.random() * e.length)], 1 === t.length && (e += "0123456789");
 return t;
}, isPromise = e => !!e && ("object" == typeof e || "function" == typeof e) && "function" == typeof e.then, hasError = e => null != e && 0 !== e.length && e.some((e => "error" === e.level && "runtime" !== e.type)), shouldIgnoreError = e => e === TASK_CANCELED_MSG, TASK_CANCELED_MSG = "task canceled", SKIP_ATTRS = new Set([ "s-id", "c-id" ]), collectUsedSelectors = (e, t) => {
 if (null != t && 1 === t.nodeType) {
  const r = t.children, s = t.nodeName.toLowerCase();
  e.tags.add(s);
  const n = t.attributes;
  for (let r = 0, s = n.length; r < s; r++) {
   const s = n.item(r), o = s.name.toLowerCase();
   if (e.attrs.add(o), "class" === o) {
    const r = t.classList;
    for (let t = 0, s = r.length; t < s; t++) e.classNames.add(r.item(t));
   } else "id" === o && e.ids.add(s.value);
  }
  if (r) for (let t = 0, s = r.length; t < s; t++) collectUsedSelectors(e, r[t]);
 }
}, parseCss = (e, t) => {
 let r = 1, s = 1;
 const n = [], o = e => {
  const t = e.match(/\n/g);
  t && (r += t.length);
  const n = e.lastIndexOf("\n");
  s = ~n ? e.length - n : s + e.length;
 }, i = () => {
  const e = {
   line: r,
   column: s
  };
  return t => (t.position = new z(e), m(), t);
 }, a = o => {
  const i = e.split("\n"), a = {
   level: "error",
   type: "css",
   language: "css",
   header: "CSS Parse",
   messageText: o,
   absFilePath: t,
   lines: [ {
    lineIndex: r - 1,
    lineNumber: r,
    errorCharStart: s,
    text: e[r - 1]
   } ]
  };
  if (r > 1) {
   const t = {
    lineIndex: r - 1,
    lineNumber: r - 1,
    text: e[r - 2],
    errorCharStart: -1,
    errorLength: -1
   };
   a.lines.unshift(t);
  }
  if (r + 2 < i.length) {
   const e = {
    lineIndex: r,
    lineNumber: r + 1,
    text: i[r],
    errorCharStart: -1,
    errorLength: -1
   };
   a.lines.push(e);
  }
  return n.push(a), null;
 }, l = () => u(/^{\s*/), c = () => u(/^}/), u = t => {
  const r = t.exec(e);
  if (!r) return;
  const s = r[0];
  return o(s), e = e.slice(s.length), r;
 }, d = () => {
  let t;
  const r = [];
  for (m(), h(r); e.length && "}" !== e.charAt(0) && (t = w() || A()); ) !1 !== t && (r.push(t), 
  h(r));
  return r;
 }, m = () => u(/^\s*/), h = e => {
  let t;
  for (e = e || []; t = p(); ) !1 !== t && e.push(t);
  return e;
 }, p = () => {
  const t = i();
  if ("/" !== e.charAt(0) || "*" !== e.charAt(1)) return null;
  let r = 2;
  for (;"" !== e.charAt(r) && ("*" !== e.charAt(r) || "/" !== e.charAt(r + 1)); ) ++r;
  if (r += 2, "" === e.charAt(r - 1)) return a("End of comment missing");
  const n = e.slice(2, r - 2);
  return s += 2, o(n), e = e.slice(r), s += 2, t({
   type: 1,
   comment: n
  });
 }, f = () => {
  const e = u(/^([^{]+)/);
  return e ? trim(e[0]).replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*\/+/g, "").replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g, (function(e) {
   return e.replace(/,/g, "‌");
  })).split(/\s*(?![^(]*\)),\s*/).map((function(e) {
   return e.replace(/\u200C/g, ",");
  })) : null;
 }, g = () => {
  const e = i();
  let t = u(/^(\*?[-#\/\*\\\w]+(\[[0-9a-z_-]+\])?)\s*/);
  if (!t) return null;
  if (t = trim(t[0]), !u(/^:\s*/)) return a("property missing ':'");
  const r = u(/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^\)]*?\)|[^};])+)/), s = e({
   type: 4,
   property: t.replace(commentre, ""),
   value: r ? trim(r[0]).replace(commentre, "") : ""
  });
  return u(/^[;\s]*/), s;
 }, y = () => {
  const e = [];
  if (!l()) return a("missing '{'");
  let t;
  for (h(e); t = g(); ) !1 !== t && (e.push(t), h(e));
  return c() ? e : a("missing '}'");
 }, C = () => {
  let e;
  const t = [], r = i();
  for (;e = u(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/); ) t.push(e[1]), u(/^,\s*/);
  return t.length ? r({
   type: 9,
   values: t,
   declarations: y()
  }) : null;
 }, S = (e, t) => {
  const r = new RegExp("^@" + e + "\\s*([^;]+);");
  return () => {
   const s = i(), n = u(r);
   if (!n) return null;
   const o = {
    type: t
   };
   return o[e] = n[1].trim(), s(o);
  };
 }, E = S("import", 7), b = S("charset", 0), T = S("namespace", 11), w = () => "@" !== e[0] ? null : (() => {
  const e = i();
  let t = u(/^@([-\w]+)?keyframes\s*/);
  if (!t) return null;
  const r = t[1];
  if (t = u(/^([-\w]+)\s*/), !t) return a("@keyframes missing name");
  const s = t[1];
  if (!l()) return a("@keyframes missing '{'");
  let n, o = h();
  for (;n = C(); ) o.push(n), o = o.concat(h());
  return c() ? e({
   type: 8,
   name: s,
   vendor: r,
   keyframes: o
  }) : a("@keyframes missing '}'");
 })() || (() => {
  const e = i(), t = u(/^@media *([^{]+)/);
  if (!t) return null;
  const r = trim(t[1]);
  if (!l()) return a("@media missing '{'");
  const s = h().concat(d());
  return c() ? e({
   type: 10,
   media: r,
   rules: s
  }) : a("@media missing '}'");
 })() || (() => {
  const e = i(), t = u(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);
  return t ? e({
   type: 2,
   name: trim(t[1]),
   media: trim(t[2])
  }) : null;
 })() || (() => {
  const e = i(), t = u(/^@supports *([^{]+)/);
  if (!t) return null;
  const r = trim(t[1]);
  if (!l()) return a("@supports missing '{'");
  const s = h().concat(d());
  return c() ? e({
   type: 15,
   supports: r,
   rules: s
  }) : a("@supports missing '}'");
 })() || E() || b() || T() || (() => {
  const e = i(), t = u(/^@([-\w]+)?document *([^{]+)/);
  if (!t) return null;
  const r = trim(t[1]), s = trim(t[2]);
  if (!l()) return a("@document missing '{'");
  const n = h().concat(d());
  return c() ? e({
   type: 3,
   document: s,
   vendor: r,
   rules: n
  }) : a("@document missing '}'");
 })() || (() => {
  const e = i();
  if (!u(/^@page */)) return null;
  const t = f() || [];
  if (!l()) return a("@page missing '{'");
  let r, s = h();
  for (;r = g(); ) s.push(r), s = s.concat(h());
  return c() ? e({
   type: 12,
   selectors: t,
   declarations: s
  }) : a("@page missing '}'");
 })() || (() => {
  const e = i();
  if (!u(/^@host\s*/)) return null;
  if (!l()) return a("@host missing '{'");
  const t = h().concat(d());
  return c() ? e({
   type: 6,
   rules: t
  }) : a("@host missing '}'");
 })() || (() => {
  const e = i();
  if (!u(/^@font-face\s*/)) return null;
  if (!l()) return a("@font-face missing '{'");
  let t, r = h();
  for (;t = g(); ) r.push(t), r = r.concat(h());
  return c() ? e({
   type: 5,
   declarations: r
  }) : a("@font-face missing '}'");
 })(), A = () => {
  const e = i(), t = f();
  return t ? (h(), e({
   type: 13,
   selectors: t,
   declarations: y()
  })) : a("selector missing");
 };
 class z {
  constructor(e) {
   this.start = e, this.end = {
    line: r,
    column: s
   }, this.source = t;
  }
 }
 return z.prototype.content = e, {
  diagnostics: n,
  ...addParent((() => {
   const e = d();
   return {
    type: 14,
    stylesheet: {
     source: t,
     rules: e
    }
   };
  })())
 };
}, trim = e => e ? e.trim() : "", addParent = (e, t) => {
 const r = e && "string" == typeof e.type, s = r ? e : t;
 for (const t in e) {
  const r = e[t];
  Array.isArray(r) ? r.forEach((function(e) {
   addParent(e, s);
  })) : r && "object" == typeof r && addParent(r, s);
 }
 return r && Object.defineProperty(e, "parent", {
  configurable: !0,
  writable: !0,
  enumerable: !1,
  value: t || null
 }), e;
}, commentre = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, getCssSelectors = e => {
 SELECTORS.all.length = SELECTORS.tags.length = SELECTORS.classNames.length = SELECTORS.ids.length = SELECTORS.attrs.length = 0;
 const t = (e = e.replace(/\./g, " .").replace(/\#/g, " #").replace(/\[/g, " [").replace(/\>/g, " > ").replace(/\+/g, " + ").replace(/\~/g, " ~ ").replace(/\*/g, " * ").replace(/\:not\((.*?)\)/g, " ")).split(" ");
 for (let e = 0, r = t.length; e < r; e++) t[e] = t[e].split(":")[0], 0 !== t[e].length && ("." === t[e].charAt(0) ? SELECTORS.classNames.push(t[e].substr(1)) : "#" === t[e].charAt(0) ? SELECTORS.ids.push(t[e].substr(1)) : "[" === t[e].charAt(0) ? (t[e] = t[e].substr(1).split("=")[0].split("]")[0].trim(), 
 SELECTORS.attrs.push(t[e].toLowerCase())) : /[a-z]/g.test(t[e].charAt(0)) && SELECTORS.tags.push(t[e].toLowerCase()));
 return SELECTORS.classNames = SELECTORS.classNames.sort(((e, t) => e.length < t.length ? -1 : e.length > t.length ? 1 : 0)), 
 SELECTORS;
}, SELECTORS = {
 all: [],
 tags: [],
 classNames: [],
 ids: [],
 attrs: []
}, serializeCssVisitNode = (e, t, r, s) => {
 const n = t.type;
 return 4 === n ? serializeCssDeclaration(t, r, s) : 13 === n ? serializeCssRule(e, t) : 1 === n ? "!" === t.comment[0] ? `/*${t.comment}*/` : "" : 10 === n ? serializeCssMedia(e, t) : 8 === n ? serializeCssKeyframes(e, t) : 9 === n ? serializeCssKeyframe(e, t) : 5 === n ? serializeCssFontFace(e, t) : 15 === n ? serializeCssSupports(e, t) : 7 === n ? "@import " + t.import + ";" : 0 === n ? "@charset " + t.charset + ";" : 12 === n ? serializeCssPage(e, t) : 6 === n ? "@host{" + serializeCssMapVisit(e, t.rules) + "}" : 2 === n ? "@custom-media " + t.name + " " + t.media + ";" : 3 === n ? serializeCssDocument(e, t) : 11 === n ? "@namespace " + t.namespace + ";" : "";
}, serializeCssRule = (e, t) => {
 const r = t.declarations, s = e.usedSelectors, n = t.selectors.slice();
 if (null == r || 0 === r.length) return "";
 if (s) {
  let t, r, o = !0;
  for (t = n.length - 1; t >= 0; t--) {
   const i = getCssSelectors(n[t]);
   o = !0;
   let a = i.classNames.length;
   if (a > 0 && e.hasUsedClassNames) for (r = 0; r < a; r++) if (!s.classNames.has(i.classNames[r])) {
    o = !1;
    break;
   }
   if (o && e.hasUsedTags && (a = i.tags.length, a > 0)) for (r = 0; r < a; r++) if (!s.tags.has(i.tags[r])) {
    o = !1;
    break;
   }
   if (o && e.hasUsedAttrs && (a = i.attrs.length, a > 0)) for (r = 0; r < a; r++) if (!s.attrs.has(i.attrs[r])) {
    o = !1;
    break;
   }
   if (o && e.hasUsedIds && (a = i.ids.length, a > 0)) for (r = 0; r < a; r++) if (!s.ids.has(i.ids[r])) {
    o = !1;
    break;
   }
   o || n.splice(t, 1);
  }
 }
 if (0 === n.length) return "";
 const o = [];
 let i = "";
 for (const e of t.selectors) i = removeSelectorWhitespace(e), o.includes(i) || o.push(i);
 return `${o}{${serializeCssMapVisit(e, r)}}`;
}, serializeCssDeclaration = (e, t, r) => "" === e.value ? "" : r - 1 === t ? e.property + ":" + e.value : e.property + ":" + e.value + ";", serializeCssMedia = (e, t) => {
 const r = serializeCssMapVisit(e, t.rules);
 return "" === r ? "" : "@media " + removeMediaWhitespace(t.media) + "{" + r + "}";
}, serializeCssKeyframes = (e, t) => {
 const r = serializeCssMapVisit(e, t.keyframes);
 return "" === r ? "" : "@" + (t.vendor || "") + "keyframes " + t.name + "{" + r + "}";
}, serializeCssKeyframe = (e, t) => t.values.join(",") + "{" + serializeCssMapVisit(e, t.declarations) + "}", serializeCssFontFace = (e, t) => {
 const r = serializeCssMapVisit(e, t.declarations);
 return "" === r ? "" : "@font-face{" + r + "}";
}, serializeCssSupports = (e, t) => {
 const r = serializeCssMapVisit(e, t.rules);
 return "" === r ? "" : "@supports " + t.supports + "{" + r + "}";
}, serializeCssPage = (e, t) => "@page " + t.selectors.join(", ") + "{" + serializeCssMapVisit(e, t.declarations) + "}", serializeCssDocument = (e, t) => {
 const r = serializeCssMapVisit(e, t.rules), s = "@" + (t.vendor || "") + "document " + t.document;
 return "" === r ? "" : s + "{" + r + "}";
}, serializeCssMapVisit = (e, t) => {
 let r = "";
 if (t) for (let s = 0, n = t.length; s < n; s++) r += serializeCssVisitNode(e, t[s], s, n);
 return r;
}, removeSelectorWhitespace = e => {
 let t = "", r = "", s = !1;
 for (let n = 0, o = (e = e.trim()).length; n < o; n++) if (r = e[n], "[" === r && "\\" !== t[t.length - 1] ? s = !0 : "]" === r && "\\" !== t[t.length - 1] && (s = !1), 
 !s && CSS_WS_REG.test(r)) {
  if (CSS_NEXT_CHAR_REG.test(e[n + 1])) continue;
  if (CSS_PREV_CHAR_REG.test(t[t.length - 1])) continue;
  t += " ";
 } else t += r;
 return t;
}, removeMediaWhitespace = e => {
 let t = "", r = "";
 for (let s = 0, n = (e = e.trim()).length; s < n; s++) if (r = e[s], CSS_WS_REG.test(r)) {
  if (CSS_WS_REG.test(t[t.length - 1])) continue;
  t += " ";
 } else t += r;
 return t;
}, CSS_WS_REG = /\s/, CSS_NEXT_CHAR_REG = /[>\(\)\~\,\+\s]/, CSS_PREV_CHAR_REG = /[>\(\~\,\+]/, removeUnusedStyleText = (e, t, r) => {
 try {
  const s = parseCss(r.innerHTML);
  if (t.push(...s.diagnostics), hasError(t)) return;
  try {
   r.innerHTML = ((e, t) => {
    const r = t.usedSelectors || null, s = {
     usedSelectors: r || null,
     hasUsedAttrs: !!r && r.attrs.size > 0,
     hasUsedClassNames: !!r && r.classNames.size > 0,
     hasUsedIds: !!r && r.ids.size > 0,
     hasUsedTags: !!r && r.tags.size > 0
    }, n = e.rules;
    if (!n) return "";
    const o = n.length, i = [];
    for (let e = 0; e < o; e++) i.push(serializeCssVisitNode(s, n[e], e, o));
    return i.join("");
   })(s.stylesheet, {
    usedSelectors: e
   });
  } catch (e) {
   t.push({
    level: "warn",
    type: "css",
    header: "CSS Stringify",
    messageText: e
   });
  }
 } catch (e) {
  t.push({
   level: "warn",
   type: "css",
   header: "CSS Parse",
   messageText: e
  });
 }
};

exports.createWindowFromHtml = createWindowFromHtml;
exports.hydrateDocument = hydrateDocument;
exports.renderToString = renderToString;
exports.serializeDocumentToString = serializeDocumentToString;
